<html><!-- InstanceBegin template="/Templates/informationObject.dwt" codeOutsideHTMLIsLocked="false" -->
<head>
<SCRIPT LANGUAGE="JavaScript" SRC="../tut.js"></SCRIPT>
<script language="JavaScript" src="../nav.js"></script>
<SCRIPT LANGUAGE="JavaScript">
 setPageTitle();
 setCookie();
  
// Drop down menu link- © Dynamic Drive (www.dynamicdrive.com)
// For full source code and 100's more DHTML scripts, visit http://www.dynamicdrive.com
// Credit MUST stay intact for use -->

</SCRIPT>

<!-- InstanceBeginEditable name="extrascript" --> 
<SCRIPT LANGUAGE="JavaScript">
</SCRIPT>
<!-- InstanceEndEditable -->

<link rel="stylesheet" href="../tut.css">


<META http-equiv="Content-Type" content="text/html; charset=windows-1252">
</HEAD>

<body marginheight="0" marginwidth="0" topmargin="0" leftmargin="0" rightmargin="0" bgcolor="#FFFFF0">
<script>writeinformationObjectTopNav1();</script>
	  
	  <font color="#003399" size="3" face="Arial, Helvetica, sans-serif"><strong><!-- InstanceBeginEditable name="TopicTitle" -->Using 
      User-Defined Macro Variables<!-- InstanceEndEditable --></strong></font> <!-- InstanceBeginEditable name="continued" --><!-- InstanceEndEditable -->
	  
<script>writeinformationObjectTopNav2();</script>
<br>
<center>
  <!-- InstanceBeginEditable name="content" --> 
<table width="85%" border="0" cellpadding="0" cellspacing="0" align="center">
  <tr valign="top"> 
    <td>
<h2>The %LET Statement</h2>
You've seen that SAS provides a variety of automatic macro variables for you. 
You can also create your own macro variables.
<P>The simplest way to define your own macro variables is to use a <strong><nobr>%LET</nobr> statement</strong>. 
The <nobr>%LET</nobr> statement enables you to define a macro variable and to assign a value to it.

<P><BR>
<table border="1" cellspacing="0" cellpadding="10"  bgcolor="#F7F7DE" align="center" title="General form, %LET statement">
    <tr> 
      <td align="left"><strong>General form, %LET statement:</strong> 
        <blockquote> <nobr><font color="#003399"><strong>%LET</strong> <em>variable</em> = <em>value</em><strong>;</strong></font></nobr> 
        </blockquote>
        <p> where 
	          <ul>
                <li><font color="#003399"><em>variable</em></font> is any name 
                  that follows the SAS naming convention.</li>
                <li><font color="#003399"><em>value</em></font> can be any string 
                  from 0 to 65,534 characters.</li>
                <li>if either <font color="#003399"><em>variable</em></font> or 
                  <font color="#003399"><em>value</em></font> contains a reference 
                  to another macro variable (such as <code>&amp;macvar</code>), 
                  the reference is evaluated before the assignment is made.</li>
              </ul>
	<table cellpadding="2">
        <tr valign="Top"> 
            <td width="24" valign="top"><img border="0" width="20" height="20" src="../navimages/note.gif" alt="Note:"></td>
          <td>If <font color="#003399"><em>variable</em></font> already exists, 
            <font color="#003399"><em>value</em></font> replaces the current value.</td>
        </tr>
      </table>
      </td>
    </tr>
  </table>
<P><BR>
          <h2>Example</h2>
        To create a macro variable named <code>time</code> and assign a value 
          of <em>afternoon</em> to it, you would submit the following <nobr>%LET</nobr> 
          statement:
<P>
<font color="#003399"><pre>    %let time=afternoon;</pre></font>

</td></tr></table>

<table width="85%" border="0" cellpadding="0" cellspacing="0" align="center">
  <tr valign="top"> 
    <td>
When you use the <nobr>%LET</nobr> statement to define macro variables, you should keep in mind the following rules:
<UL>
          <LI>All values are stored as character strings.</LI>
          <LI>Mathematical expressions are <strong>not</strong> evaluated.</LI>
          <LI>The case of the value is preserved.</LI>
          <LI>Quotation marks that enclose literals are stored as part of the value.</LI>
          <LI>Leading and trailing blanks are removed from the value before the 
            assignment is made.</LI>
</UL>
    </td>
  </tr>
</table><BR>
<!-- InstanceEndEditable --> 
</center>
<script>writeNav_regular_bottom();</script>
</body>
<!-- InstanceEnd --></html>
