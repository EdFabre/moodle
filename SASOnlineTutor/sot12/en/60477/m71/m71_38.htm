<html><!-- InstanceBegin template="/Templates/summary.dwt" codeOutsideHTMLIsLocked="false" -->
<head>

<SCRIPT LANGUAGE="JavaScript" SRC="../tut.js"></SCRIPT>
<script language="JavaScript1.2" src="../nav.js"></script>


<SCRIPT LANGUAGE="JavaScript">
 setPageTitle();
 setCookie();
 
// Drop down menu link- © Dynamic Drive (www.dynamicdrive.com)
// For full source code and 100's more DHTML scripts, visit http://www.dynamicdrive.com
// Credit MUST stay intact for use -->

</SCRIPT>

<!-- InstanceBeginEditable name="extrascript" -->
<SCRIPT LANGUAGE="JavaScript">
</SCRIPT>
<!-- InstanceEndEditable -->

<link rel="stylesheet" href="../tut.css">

<META http-equiv="Content-Type" content="text/html; charset=windows-1252">
</HEAD>

<body marginheight="0" marginwidth="0" topmargin="0" leftmargin="0" rightmargin="0" bgcolor="#FFFFF0">
<script>writeinformationObjectTopNav1();</script>
 
      <font color="#003399" size="3" face="Arial, Helvetica, sans-serif"><strong><script>document.write(summaryTitle)</script></strong></font>
 
 
<script>writeinformationObjectTopNav2();</script>
<br>
<center><TABLE cellpadding=0 cellspacing=0 border=0 width="85%" align="center">
  <TR>
      <TD align="left">
      
      <p><script>document.write(summaryPageContains)</script></p>
     <ul><!-- InstanceBeginEditable name="links" -->
        <LI> <A HREF="#Text" onMouseOver="window.status='Go to the text summary section.'; "
		onMouseOut="window.status=''">a text summary of the material taught in 
          the lesson</A> 
        <LI> <A HREF="#Syntax" onMouseOver="window.status='Go to the syntax section.'; "
		onMouseOut="window.status=''">syntax for&nbsp;statements and options</A> 
          <LI> <A HREF="#Sample" onMouseOver="window.status='Go to the sample program section.'; "
		onMouseOut="window.status=''">sample programs</A> 
          <LI> <A HREF="#Points" onMouseOver="window.status='Go to the points to remember section.'; "
		onMouseOut="window.status=''">points to remember</A>.
      <!-- InstanceEndEditable --></ul>
<P>
	  <HR>
      </TD>
    </TR>
  </TABLE>
  <P>

<!-- InstanceBeginEditable name="textsummaryintro" -->     
<TABLE cellpadding=0 cellspacing=0 border=0 width="85%" align="center">
  <TR>
	<TD align="left"><h2><STRONG><A NAME="Text"><script>document.write(summaryPageTextSummaryTitle);</script></A></STRONG> </h2>
      <P>
	  <EM><script>document.write(summaryPageDirections);</script></EM></TD>
      </TR>
    </TABLE>
<!-- InstanceEndEditable -->
  <br>
<!-- InstanceBeginEditable name="textsummary" --> 
<table width="85%" border="0" cellpadding="0" cellspacing="0" align="center">
    <tr valign="top"> 
      <td> <p><strong>Understanding Joins</strong> <br>
          A PROC SQL join is a query that combines tables horizontally (side by 
          side) by combining rows. The two main types of joins are <a href="m71_2.htm" onClick="suggestBack()">inner 
          joins and outer joins</a>.</p>
        <p><strong>Generating a Cartesian Product</strong> <br>
          When you specify multiple tables in the FROM clause but do not include 
          a WHERE statement to subset data, PROC SQL returns the <a href="m71_3.htm" onClick="suggestBack()">Cartesian 
          product</a> of the tables. In a Cartesian product, each row in the first 
          table is combined with every row in the second table. In all types of 
          joins, PROC SQL generates a Cartesian product first, and then eliminates 
          rows that do not meet any subsetting criteria that you have specified.</p>
        <p><strong>Using Inner Joins</strong> <br>
          An <a href="m71_6.htm" onClick="suggestBack()">inner join</a> combines 
          and displays the rows from the first table that match rows from the 
          second table, based on the matching criteria (also known as join conditions) 
          that are specified in the WHERE clause. When the tables that are being 
          joined contain a column with a common name, you might want to <a href="m71_8.htm" onClick="suggestBack()">eliminate 
          the duplicate column</a> from results or <a href="m71_8.htm#alias" onClick="suggestBack()">specify 
          a column alias</a> to rename one of the duplicate columns. To refer 
          to tables in an inner join, or in any PROC SQL step, you can specify 
          a temporary name called a <a href="m71_11.htm" onClick="suggestBack()">table 
          alias</a>. </p>
        <p><strong>Using Outer Joins</strong> <br>
          An <a href="m71_16.htm" onClick="suggestBack()">outer join</a> combines 
          and displays all rows that match across tables, based on the specified 
          matching criteria (also known as join conditions), plus some or all 
          of the rows that do not match. There are three types of outer joins:</p>
        <ul>
          <li>A <a href="m71_17.htm" onClick="suggestBack()">left outer join</a> 
            retrieves all rows that match across tables, based on the specified 
            matching criteria (join conditions), plus nonmatching rows from the 
            left table (the first table specified in the FROM clause). <br>
            <br>
          </li>
          <li>A <a href="m71_18.htm" onClick="suggestBack()">right outer join</a> 
            retrieves all rows that match across tables, based on the specified 
            matching criteria (join conditions), plus nonmatching rows from the 
            right table (the second table specified in the FROM clause). <br>
            <br>
          </li>
          <li>A <a href="m71_19.htm" onClick="suggestBack()">full outer join</a> 
            retrieves both matching rows and nonmatching rows from both tables.</li>
        </ul>
        <p><strong>Creating an Inner Join with Outer Join-Style Syntax</strong> 
          <br>
          If you want to use a consistent syntax for all joins, you can write 
          an inner join using the same 
          style of <a href="m71_23.htm" onClick="suggestBack()">syntax</a> as used for an outer join.</p>
        <p><strong>Comparing SQL Joins and DATA Step Match-Merges</strong> <br>
          <a href="m71_24.htm" onClick="suggestBack()">DATA step match-merges 
          and PROC SQL joins</a> can produce the same results, although there 
          are important differences between these two techniques. </p>
        <ul>
          <li>When <a href="m71_24.htm" onClick="suggestBack()"><strong>all</strong> 
            the values of the BY variable (column) match</a> and there are no 
            duplicate BY variables, you can use a PROC SQL inner join.<br>
            <br>
          </li>
          <li>When only <a href="m71_25.htm" onClick="suggestBack()"><strong>some</strong> of the values of the BY variable 
            match</a>, you can use a PROC 
            SQL full outer join. To overlay common columns, you must use the 
            <a href="m71_26.htm" onClick="suggestBack()">COALESCE function</a> 
            with the PROC SQL join.</li>
        </ul>
        <p>There are several <a href="m71_28.htm" onClick="suggestBack()">advantages</a> 
          to using PROC SQL joins. </p>
        <p><strong>Using In-Line Views</strong> <br>
          An <a href="m71_29.htm" onClick="suggestBack()">in-line view</a> is 
          a subquery that appears in a FROM clause. An in-line view selects data 
          from one or more tables to produce a temporary (or virtual) table that 
          the outer query uses to select data for output. You can reference an 
          in-line view <a href="m71_29.htm#withothers" onClick="suggestBack()">with 
          other views or tables</a>, reference <a href="m71_30.htm#multiple" onClick="suggestBack()">multiple 
          tables</a> in an in-line view, and assign an <a href="m71_30.htm#alias" onClick="suggestBack()">alias</a> 
          to an in-line view.<br>
        </p>
        <p><strong>Joining Multiple Tables and Views</strong> <br>
          When you perform a complex query that combines more than two tables 
          or views, you might need to choose between <a href="m71_33.htm" onClick="suggestBack()">several 
          different techniques</a>.</p>
        </td>
  </tr>
</table>
<!-- InstanceEndEditable --> <br>
<table cellpadding=0 cellspacing=0 border=0 width="85%" align="center">
  <tr> 
    <td align="left"> 
      <hr>
    </td>
  </tr>
</table>

<P><!-- InstanceBeginEditable name="syntax" --> 
  <TABLE cellpadding=0 cellspacing=0 border=0 width="85%" align="center">
    <TR> 
      <TD><h2><STRONG><A NAME="Syntax">Syntax</A></STRONG> </h2>
        <P> <EM>To go to the page where a statement or option was presented, select 
          a link.</EM> </TD>
    </TR>
  </TABLE>
  <p> <br>
  <TABLE cellpadding=0 cellspacing=0 border=0 width="85%" align="center">
    <TR> 
      <TD> <TABLE align="center" CELLPADDING="2">
          <TR> 
            <TD height="23"><strong><font color="#003399">PROC SQL</font></strong><font color="#003399">;</font></TD>
          </TR>
          <TR> 
            <TD>&nbsp;</TD>
          </TR>
          <TR> 
            <TD height="23">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<FONT color="#339900"><A HREF="m71_6.htm" onClick="suggestBack()" onMouseOver="window.status='Display details on the SELECT statement for an inner join.'; "
	      onMouseOut="window.status=''"><STRONG>SELECT</strong> <em>column-1&lt;,...column-n&gt;</em></A></FONT></TD>
          </TR>
          <TR> 
            <TD><FONT color="#339900"><NOBR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="m71_6.htm" onClick="suggestBack()"
	      onMouseOver="window.status='Display details on the SELECT statement for an inner join.'; "
	      onMouseOut="window.status=''"><strong>FROM</strong> <em>table-1 | view-1, 
              table-2 | view-2&lt;,...table-n | view-n&gt;</em></A></NOBR></FONT></TD>
          </TR>
          <TR> 
            <TD><FONT color="#339900">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="m71_6.htm" onClick="suggestBack()" onMouseOver="window.status='Display details on the SELECT statement for an inner join.'; "
	      onMouseOut="window.status=''"><strong>WHERE</strong> <em>join-condition(s)</em></A></FONT></TD>
          </TR>
          <TR> 
            <TD><font color="#003399">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="m71_6.htm" onClick="suggestBack()" onMouseOver="window.status='Display details on the SELECT statement for an inner join.';" onMouseOut="window.status=''">&lt;<strong>AND</strong> 
              <em>other subsetting condition(s)&gt;</em></A></FONT></TD>
          </TR>
          <TR> 
            <TD><font color="#003399">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="m71_6.htm" onClick="suggestBack()" onMouseOver="window.status='Display details on the SELECT statement for an inner join.';" onMouseOut="window.status=''"><em>&lt;other 
              clauses&gt;</em></A>;</font></TD>
          </TR>
          <TR> 
            <TD>&nbsp;</TD>
          </TR>
          <TR> 
            <TD height="23">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<FONT color="#339900"><A HREF="m71_16.htm" onClick="suggestBack()" onMouseOver="window.status='Display details on the SELECT statement for an outer join.'; "
	      onMouseOut="window.status=''"><STRONG>SELECT</strong> <em>column-1&lt;,...column-n&gt;</em></A></FONT></TD>
          </TR>
          <TR> 
            <TD><FONT color="#339900">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="m71_16.htm" onClick="suggestBack()" onMouseOver="window.status='Display details on the SELECT statement for an outer join.'; "
	      onMouseOut="window.status=''"><strong>FROM</strong> <em>table-1 | view-1</em></A><NOBR></NOBR></FONT></TD>
          </TR>
          <TR> 
            <TD><FONT color="#339900">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="m71_16.htm" onClick="suggestBack()" onMouseOver="window.status='Display details on the SELECT statement for an outer join.'; "
	      onMouseOut="window.status=''"><strong>LEFT JOIN </strong> | <strong>RIGHT 
              JOIN</strong> | <strong>FULL JOIN</strong></A></FONT></TD>
          </TR>
          <TR> 
            <TD><FONT color="#339900">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<em><A HREF="m71_16.htm" onClick="suggestBack()" onMouseOver="window.status='Display details on the SELECT statement for an outer join.'; "
	      onMouseOut="window.status=''">table-2 | view-2</A></em></FONT></TD>
          </TR>
          <TR> 
            <TD><font color="#003399">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="m71_16.htm" onClick="suggestBack()" onMouseOver="window.status='Display details on the SELECT statement for an outer join.'; "
	      onMouseOut="window.status=''"><strong>ON</strong> <em>join-condition(s)</em></A></font></TD>
          </TR>
          <TR> 
            <TD><font color="#003399">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="m71_16.htm" onClick="suggestBack()" onMouseOver="window.status='Display details on the SELECT statement for an outer join.'; "
	      onMouseOut="window.status=''"><em>&lt;other clauses&gt;</em></A>;</font></TD>
          </TR>
          <TR> 
            <TD>&nbsp;</TD>
          </TR>
          <TR> 
            <TD height="23">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<FONT color="#339900"><A HREF="m71_23.htm" onClick="suggestBack()" onMouseOver="window.status='Display details on the SELECT statement for an inner join (alternate syntax).'; "
	      onMouseOut="window.status=''"><STRONG>SELECT</strong> <em>column-1&lt;,...column-n&gt;</em></A></FONT></TD>
          </TR>
          <TR> 
            <TD><FONT color="#339900"><NOBR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="m71_23.htm" onClick="suggestBack()" onMouseOver="window.status='Display details on the SELECT statement for an inner join (alternate syntax).'; "
	      onMouseOut="window.status=''"><strong>FROM</strong> <em>table-1 | view-1</em></A></NOBR></FONT></TD>
          </TR>
          <TR> 
            <TD><FONT color="#339900">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="m71_23.htm" onClick="suggestBack()" onMouseOver="window.status='Display details on the SELECT statement for an inner join (alternate syntax).'; "
	      onMouseOut="window.status=''"><strong>INNER JOIN </strong></A></FONT></TD>
          </TR>
          <TR> 
            <TD><FONT color="#339900">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<em><A HREF="m71_23.htm" onClick="suggestBack()" onMouseOver="window.status='Display details on the SELECT statement for an inner join (alternate syntax).'; "
	      onMouseOut="window.status=''">table-2 | view-2</A></em></FONT></TD>
          </TR>
          <TR> 
            <TD><font color="#003399">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="m71_23.htm" onClick="suggestBack()" onMouseOver="window.status='Display details on the SELECT statement for an inner join (alternate syntax).'; "
	      onMouseOut="window.status=''"><strong>ON</strong> <em>join-condition(s)</em></A></font></TD>
          </TR>
          <TR> 
            <TD><font color="#003399">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="m71_23.htm" onClick="suggestBack()" onMouseOver="window.status='Display details on the SELECT statement for an inner join (alternate syntax).'; "
	      onMouseOut="window.status=''"><em>&lt;other clauses&gt;</em></A>;</font></TD>
          </TR>
          <TR>
            <TD>&nbsp;</TD>
          </TR>
          <TR> 
            <TD height="23">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<FONT color="#339900"><A HREF="m71_26.htm" onClick="suggestBack()" onMouseOver="window.status='Display details on the COALESCE function in a SELECT clause.'; "
	      onMouseOut="window.status=''"><nobr><strong>SELECT COALESCE </strong><em>(column-1&lt;,...column-n&gt;)</em></nobr> 
              <nobr></nobr><nobr></nobr></A></FONT></TD>
          </TR>
          <TR> 
            <TD><FONT color="#003399">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><FONT color="#339900"><A HREF="m71_26.htm" onClick="suggestBack()" onMouseOver="window.status='Display details on the COALESCE function in a SELECT clause.'; "
	      onMouseOut="window.status=''"><nobr>&lt;&lt;<strong>AS</strong>&gt; 
              <em>column-alias</em>&gt;</nobr> <nobr>&lt;,...<em>column-1</em>&lt;,...<em>column-n</em>&gt;&gt;</nobr></A></FONT></TD>
          </TR>
          <TR> 
            <TD><FONT color="#003399"><NOBR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<strong>FROM</strong> 
              <em>table-1 | view-1</em></NOBR></font></TD>
          </TR>
          <TR> 
            <TD><FONT color="#003399">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<strong>LEFT 
              JOIN </strong> | <strong>RIGHT JOIN</strong> | <strong>FULL JOIN</strong></font></TD>
          </TR>
          <TR> 
            <TD><FONT color="#003399">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<em>table-2 
              | view-2</em></font></TD>
          </TR>
          <TR> 
            <TD><font color="#003399">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<strong>ON</strong> 
              <em>join-conditions</em></font></TD>
          </TR>
          <TR> 
            <TD><font color="#003399">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<em>&lt;other 
              clauses&gt;</em>;</font></TD>
          </TR>
          <TR> 
            <TD>&nbsp;</TD>
          </TR>
          <TR> 
            <TD><strong><font color="#003399">QUIT</font></strong><font color="#003399">;</font></TD>
          </TR>
        </TABLE></TD>
    </TR>
  </TABLE>
<br>
  <table cellpadding=0 cellspacing=0 border=0 width="85%" align="center">
    <tr> 
      <td align="left"> <hr> </td>
    </tr>
  </table>
  <br>
  <!-- InstanceEndEditable -->
<P> 
  <!-- InstanceBeginEditable name="sampleprogram" --> 
  <TABLE cellpadding=0 cellspacing=0 border=0 width="85%" align="center">
    <TR> 
      <TD align="left"><h2><STRONG><A NAME="Sample">Sample Programs</A></STRONG> 
        </h2>
        <blockquote> 
          <p><strong>Combining Tables by Using an Inner Join</strong></p>
        </blockquote>
        <pre><font color="#003399">     proc sql outobs=15;
     title 'New York Employees';
        select substr(firstname,1,1) || '. ' || lastname 
               as Name,
               jobcode,
               int((today() - dateofbirth)/365.25)
               as Age
           from sasuser.payrollmaster as p,
                sasuser.staffmaster as s
           where p.empid =
                 s.empid
                 and state='NY'
           order by 2, 3;
     quit;</font></pre>
        <blockquote> 
          <p><strong>Combining Tables by Using a Left Outer Join</strong></p>
        </blockquote>
        <pre><font color="#003399">     proc sql outobs=20;
     title 'All March Flights';
        select m.date,
               m.flightnumber 
	            label='Flight Number',
               m.destination
               label='Left',
               f.destination
               label='Right',
               delay
               label='Delay in Minutes'
           from sasuser.marchflights as m 
                left join 
                sasuser.flightdelays as f
           on m.date=f.date
              and m.flightnumber=
                  f.flightnumber
           order by delay;
     quit;</font></pre> 

        <blockquote> 
          <p><strong>Overlaying Common Columns in a Full Outer Join</strong></p>
        </blockquote>
        <pre><font color="#003399">     proc sql;
        select coalesce(p.empid, s.empid) 
               as ID, firstname, lastname, gender
           from sasuser.payrollmaster as p 
	            full join 
                sasuser.staffmaster as s
           on p.empid = s.empid
           order by id;
     quit;</font></pre>
	 	 <blockquote>
          <p><strong>Joining Tables by Using a Subquery and an In-line View</strong></p>
        </blockquote>
        <pre><font color="#003399">     proc sql;
        select empid
           from sasuser.supervisors as m,
              (select substr(jobcode,1,2) as JobCategory,
                      state
                 from sasuser.staffmaster as s,
                      sasuser.payrollmaster as p
                 where s.empid=p.empid and s.empid in
                    (select empid
                       from sasuser.flightschedule
                       where date='04mar2000'd
                             and destination='CPH')) as c
           where  m.jobcategory=c.jobcategory
                  and m.state=c.state;
     quit;</font></pre>
        <P> 
        <HR> </TD>
    </TR>
  </TABLE>
  <br>
  <!-- InstanceEndEditable --> 
<P>
  <!-- InstanceBeginEditable name="pointstoremember" --> 
  <TABLE cellpadding=0 cellspacing=0 border=0 width="85%" align="center">
    <TR> 
      <TD align="left"><h2><STRONG><A NAME="Points">Points to Remember</A></STRONG> 
        </h2>
        <UL>
          <LI> In most cases, generating all possible combinations of rows from 
            multiple tables does not yield useful results, so a Cartesian product 
            is rarely the query outcome that you want. <BR>
            <BR>
          <LI> You can combine a maximum of 32 tables in a single inner join. 
            (If the join involves views, it is the number of tables that underlie 
            the views, not the number of views, that counts towards the limit 
            of 32.) An outer join can be performed on only two tables or views 
            at a time. 
        </UL>
      </TD>
    </TR>
  </TABLE>
  <br>
<!-- InstanceEndEditable --></center>
<script>writeNav_regular_bottom();</script>
</body>
<!-- InstanceEnd --></html>