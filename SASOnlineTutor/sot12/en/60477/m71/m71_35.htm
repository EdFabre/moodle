<html><!-- InstanceBegin template="/Templates/informationObject.dwt" codeOutsideHTMLIsLocked="false" -->
<head>
<SCRIPT LANGUAGE="JavaScript" SRC="../tut.js"></SCRIPT>
<script language="JavaScript" src="../nav.js"></script>
<SCRIPT LANGUAGE="JavaScript">
 setPageTitle();
 setCookie();
  
// Drop down menu link- © Dynamic Drive (www.dynamicdrive.com)
// For full source code and 100's more DHTML scripts, visit http://www.dynamicdrive.com
// Credit MUST stay intact for use -->

</SCRIPT>

<!-- InstanceBeginEditable name="extrascript" -->
<SCRIPT LANGUAGE="JavaScript">
</SCRIPT>
<!-- InstanceEndEditable -->

<link rel="stylesheet" href="../tut.css">


<META http-equiv="Content-Type" content="text/html; charset=windows-1252">
</HEAD>

<body marginheight="0" marginwidth="0" topmargin="0" leftmargin="0" rightmargin="0" bgcolor="#FFFFF0">
<script>writeinformationObjectTopNav1();</script>
	  
	  <font color="#003399" size="3" face="Arial, Helvetica, sans-serif"><strong><!-- InstanceBeginEditable name="TopicTitle" -->Joining 
      Multiple Tables and Views<!-- InstanceEndEditable --></strong></font> <!-- InstanceBeginEditable name="continued" --><font color="#003399" size="3" face="Arial, Helvetica, sans-serif">(continued)</font><!-- InstanceEndEditable -->
	  
<script>writeinformationObjectTopNav2();</script>
<br>
<center>
  <!-- InstanceBeginEditable name="content" --> 
  <table width="85%" border="0" cellpadding="0" cellspacing="0">
    <tr valign="top"> 
      <td> <h2>Example: Technique 2 (PROC SQL Multi-way Join with Reflexive Join)<br>
        </h2></td>
    </tr>
  </table>
  <br>
  <table width="85%" border="1" cellpadding="5" cellspacing="0" bgcolor="#FFFFFF" title="Query Specifications: Task and Data">
    <tr valign="top"> 
      <th width="63" align="left" bgcolor="#F7F7DE"><font size="-1">Task</font></th>
      <td width="595">List the names of supervisors for the crew on the flight 
        to Copenhagen on March 4, 2000. </td>
    </tr>
    <tr valign="top"> 
      <th width="63" align="left" bgcolor="#F7F7DE"><font size="-1">Data</font></th>
      <td width="595"><p><strong><a href="JavaScript: openOther('../linklib/fltsched.htm')">Sasuser.Flightschedule</a></strong> 
          (<code>EmpID, Date, Destination</code>) </p>
        <p> <strong><a href="JavaScript: openOther2('../linklib/stafmstr.htm')">Sasuser.Staffmaster</a></strong> 
          (<code>EmpID, FirstName, LastName, State</code>) </p>
        <p><strong><a href="JavaScript: openOther3('../linklib/payrmstr.htm')">Sasuser.Payrollmaster</a></strong> 
          (<code>EmpID, JobCode</code>)</p>
        <p><strong><a href="JavaScript: openOther4('../linklib/suprvisr.htm')">Sasuser.Supervisors</a></strong> 
          (<code>EmpID, State, JobCategory</code>) </p></td>
    </tr>
  </table>
  <br>
  <br>
  <table width="85%" border="0" align="center" cellpadding="2" cellspacing="0">
    <tr> 
      <td valign="top" width="24"><img src="../navimages/note.gif" width="20" height="20" alt="Note"></td>
      <td valign="top">Supervisors live in the same state as the employees they 
        supervise. There is one supervisor for each state and job category.</td>
    </tr>
  </table>
  <br>
  <table cellpadding="0" cellspacing="0" border="0" width="85%">
    <tr> 
      <td><p>You can also solve this problem by using a multi-way join with a 
          reflexive join (joining a table to itself). The code is shown below:</p></td>
    </tr>
  </table>
  <br>
  <table width="85%" border="0" align="center" cellspacing="10">
    <tr> 
      <td valign="top"><strong> </strong> <pre><font color="#003399">proc sql;
   select distinct e.firstname, e.lastname
      from sasuser.flightschedule as a,
           sasuser.staffmaster as b,
           sasuser.payrollmaster as c,
           sasuser.supervisors as d,
           sasuser.staffmaster as e
      where a.date='04mar2000'd and
            a.destination='CPH' and
            a.empid=b.empid and
            a.empid=c.empid and
            d.jobcategory=substr(c.jobcode,1,2)
            and d.state=b.state
            and d.empid=e.empid;</font>
</pre></td>
      <td align="center" valign="middle"> <font  face="Arial, Helvetica, Helv" size="2" color="#002288"><font  face="Arial, Helvetica, Helv" size="2" color="#002288"> 
        </font></font> <TABLE  cellspacing=1 cellpadding=2 rules=GROUPS frame=BOX border=1 bgcolor="#FFFFF0" bordercolor="#000000" title="PROC SQL Output">
          <thead>
            <TR> 
              <TD ALIGN=LEFT VALIGN=BOTTOM bgcolor="#CCCCCC"><font  face="Arial, Helvetica, Helv" size="3" color="#003399"><b>FirstName</b></font></TD>
              <TD ALIGN=LEFT VALIGN=BOTTOM bgcolor="#CCCCCC"><font  face="Arial, Helvetica, Helv" size="3" color="#003399"><b>LastName</b></font></TD>
            </TR>
          </thead>
          <tbody>
            <TR> 
              <TD ALIGN=LEFT bgcolor="#EFEFEF"><font  face="Arial, Helvetica, Helv" size="2">DEBORAH</font></TD>
              <TD ALIGN=LEFT bgcolor="#EFEFEF"><font  face="Arial, Helvetica, Helv" size="2">YOUNG</font></TD>
            </TR>
            <TR> 
              <TD ALIGN=LEFT bgcolor="#EFEFEF"><font  face="Arial, Helvetica, Helv" size="2">JASPER</font></TD>
              <TD ALIGN=LEFT bgcolor="#EFEFEF"><font  face="Arial, Helvetica, Helv" size="2">MARSHBURN</font></TD>
            </TR>
            <TR> 
              <TD ALIGN=LEFT bgcolor="#EFEFEF"><font  face="Arial, Helvetica, Helv" size="2">ROGER</font></TD>
              <TD ALIGN=LEFT bgcolor="#EFEFEF"><font  face="Arial, Helvetica, Helv" size="2">DENNIS</font></TD>
            </TR>
            <TR> 
              <TD ALIGN=LEFT bgcolor="#EFEFEF"><font  face="Arial, Helvetica, Helv" size="2">SHARON</font></TD>
              <TD ALIGN=LEFT bgcolor="#EFEFEF"><font  face="Arial, Helvetica, Helv" size="2">DEAN</font></TD>
            </TR>
            <TR> 
              <TD ALIGN=LEFT bgcolor="#EFEFEF"><font  face="Arial, Helvetica, Helv" size="2">SIMON</font></TD>
              <TD ALIGN=LEFT bgcolor="#EFEFEF"><font  face="Arial, Helvetica, Helv" size="2">RIVERS</font></TD>
            </TR>
          </tbody>
        </TABLE></td>
    </tr>
  </table>
  <table width="85%" border="0" align="center" cellpadding="0" cellspacing="0">
    <tr> 
      <td><p>Technique 2, which uses a multi-way join, provides a more efficient 
          solution to the problem than Technique 1. In a multi-way join, PROC 
          SQL joins two tables at a time and performs the joins in the most efficient 
          order (the order that will minimize the size of the Cartesian product). 
          This multi-way join code is more difficult to build step-by-step than 
          the code in Technique 1.</p>
        <p>Note that <strong>Sasuser.Staffmaster</strong> is read two separate 
          times in this query: this is the reflexive join. As you can see in the 
          FROM clause, <strong>Sasuser.Staffmaster</strong> is assigned a different 
          table alias each time it is read: first <code><strong>b</strong></code>, 
          then <code><strong>e</strong></code>. The table is read the first time 
          (alias <code><strong>b</strong></code>) to look up the states of the 
          Copenhagen crew members, the second time (alias <code><strong>e</strong></code>) 
          to look up the names of the supervisors.</p></td>
    </tr>
  </table>
  <p> <br>
  <!-- InstanceEndEditable --> 
</center>
<script>writeNav_regular_bottom();</script>
</body>
<!-- InstanceEnd --></html>
