<html><!-- InstanceBegin template="/Templates/practice.dwt" codeOutsideHTMLIsLocked="false" -->
<head>

<SCRIPT LANGUAGE="JavaScript" SRC="../tut.js"></SCRIPT>
<script language="JavaScript" src="../nav.js"></script>

<SCRIPT LANGUAGE="JavaScript">
 setPageTitle();
 setCookie();
 checkPracticeCookie();
 checkVersion();
 
// Drop down menu link- © Dynamic Drive (www.dynamicdrive.com)
// For full source code and 100's more DHTML scripts, visit http://www.dynamicdrive.com
// Credit MUST stay intact for use -->

</SCRIPT>

<!-- InstanceBeginEditable name="extrascript" -->
<SCRIPT LANGUAGE="JavaScript">
solutionTitle='<strong>Solution to guided practice:</strong><p>';

<!--STEP 1-------------------------------------------------->
solutionText='<ol><li>Write and submit the following PROC SQL ';
solutionText+='<strong>left outer join</strong>: ';
solutionText+='<font color="#003399"><pre>';
solutionText+='proc sql;<br>';
solutionText+="title1 'All Scheduled Employees';<br>";
solutionText+="title2 'and Any Payroll Changes';<br>";
solutionText+='   select f.*, jobcode,<br>';
solutionText+='          salary as NewSalary<br>';
solutionText+='      from sasuser.flightschedule as f<br>';
solutionText+='      left join<br>';
solutionText+='      sasuser.payrollchanges as p<br>';
solutionText+='      on f.empid = p.empid<br>';
solutionText+='      order by jobcode;<br>';
solutionText+='quit;<br></pre></font>';
solutionText+='The expected output is linked from step 1 in this practice. The output should  include all rows from <strong>Sasuser.Flightschedule</strong>. There is only one scheduled employee who has had a payroll change (<code>EmpID</code> <em>1221</em>), but that employee is listed four times, because he/she is scheduled on four different flights and dates. Those four rows (the only rows that match between the two tables, according to the expression in the ON clause) are the only rows that contain values for <code>JobCode</code> and <code>Salary</code> (alias <code>NewSalary</code>). In all other rows, <code>JobCode</code> and <code>Salary</code> (<code>NewSalary</code>) contain missing values.<br><br>';
<!--STEP 2------------------------------------------>
solutionText+='<li>Submit the following <strong>right outer join</strong>: ';
solutionText+='<font color="#003399"><pre>';
solutionText+='proc sql;<br>';
solutionText+="title1 'All Employees with Payroll Changes';<br>";
solutionText+="title2 'and Any Flight 622 Assignments';<br>";
solutionText+='   select p.empid, jobcode, <br>';
solutionText+='          salary as NewSalary,<br>';
solutionText+='          flightnumber,<br>'; 
solutionText+='          date as FlightDate<br>';
solutionText+='      from sasuser.flightschedule as f<br>';
solutionText+='      right join<br>';
solutionText+='      sasuser.payrollchanges as p<br>';
solutionText+='      on f.empid = p.empid and<br>';
solutionText+="         flightnumber='622'<br>";
solutionText+='      order by empid;<br>';
solutionText+='quit;<br></pre></font>';
solutionText+='The expected output is linked from step 2 in this practice. The one employee who has had a payroll change and is scheduled on Flight 622 is listed twice because of being scheduled on Flight 622 on two different dates. Those two rows (the only rows that match between the two tables, according to the two conditions in the ON clause) are the only rows that contain values for <code>FlightNumber</code> and <code>Date</code> (alias <code>FlightDate</code>).<br><br>';
<!--STEP 3------------------------------------------>
solutionText+='<li>Submit the following ';
solutionText+='<strong>full outer join</strong>: ';
solutionText+='<font color="#003399"><pre>';
solutionText+='proc sql;<br>';
solutionText+="title1 'All Employees with Payroll Changes,';<br>";
solutionText+="title2 'Their Flight Assignments (If Any),';<br>";
solutionText+="title3 'and All Scheduled Flights';<br>";
solutionText+='   select p.empid, jobcode, <br>';
solutionText+='          salary as NewSalary,<br>';
solutionText+='          flightnumber, <br>';
solutionText+='          date as FlightDate<br>';
solutionText+='      from sasuser.flightschedule as f<br>';
solutionText+='      full join<br>';
solutionText+='      sasuser.payrollchanges as p<br>';
solutionText+='      on f.empid = p.empid<br>';
solutionText+='      order by 4;<br>'; 
solutionText+='quit;<br></pre></font>';
solutionText+='The expected output is linked from step 3 in this practice. The output includes both matched and unmatched rows from both tables: <br><br>';
solutionText+='<ul><li>Rows with <strong>nonmissing</strong> values only in the <strong>first three</strong> ';
solutionText+='columns are unmatched rows from the second table (<strong>Sasuser.Payrollchanges</strong>).<br><br>';
solutionText+='<li>Rows with <strong>nonmissing</strong> values only in the <strong>last two</strong> columns are unmatched rows from the first table (<strong>Sasuser.Flightschedule</strong>). The output contains many duplicate rows with the same <code>FlightNumber</code> and <code>FlightDate</code>, because these duplicates exist in the table <strong>Sasuser.Flightschedule</strong>.<br><br>';
solutionText+='<li>Rows with <strong>nonmissing</strong> values in <strong>all</strong> columns are matching rows.</ul><br><br>';
<!--STEP 4------------------------------------------>
solutionText+='<li>Submit the following statement:<br>';
solutionText+='<font color="#003399"><pre>';
solutionText+='title;</pre></font></ol>';
</SCRIPT>
<!-- InstanceEndEditable -->

<link rel="stylesheet" href="../tut.css">


<META http-equiv="Content-Type" content="text/html; charset=windows-1252">
</HEAD>

<body marginheight="0" marginwidth="0" topmargin="0" leftmargin="0" rightmargin="0" bgcolor="#FFFFF0" onLoad="sizePractice()" onUnload="resizePage()">
<script>writepracticeTopNav1();</script>
		  
		  <!-- InstanceBeginEditable name="task_description" --><strong>Use 
            PROC SQL outer joins to combine the tables <a href="JavaScript: openOther('../linklib/fltsched.htm')">Sasuser.Flightschedule</a> 
            and <a href="JavaScript: openOther2('../linklib/payrchng.htm')">Sasuser.Payrollchanges</a>.</strong><!-- InstanceEndEditable -->
			
<script>writepracticeTopNav2();</script>

<center>
 <p>
<!-- InstanceBeginEditable name="optionalNote" --><table cellpadding="2" align="Center" width="85%">
    <tr valign="top"> 
      <td width="24"><img src="../navimages/tip.gif" alt="Tip: " width="20" height="20"></td>
      <td>To view the expected PROC SQL output, click the related link in the 
        text for each step.</td>
  </tr>
</table><!-- InstanceEndEditable -->
<p> 
<table width="85%" border="0" cellpadding="0" cellspacing="0" align="center">
  <tr valign="top"> 
    <td> 
      <ol>
        <!-- InstanceBeginEditable name="task_steps" --> 
          <li>Write a PROC SQL join that displays rows for both of the following:<br>
            <br>
            <ul>
              <li> all scheduled flights (all rows in <strong>Sasuser.Flightschedule</strong>)</li>
              <li> all employees who have had a payroll change and are scheduled 
                on a flight (a subset of rows in <strong>Sasuser.Payrollchanges</strong>).<br>
                <br>
              </li>
            </ul>
            The output should display the following columns, in the order in which 
            they are listed:<br>
            <br>
            <ul>
              <li> from <strong>Sasuser.Flightschedule</strong>: <code>Date</code>, 
                <code>Destination</code>, <code>FlightNumber</code>, <code>EmpID</code>.</li>
              <li> from <strong>Sasuser.Payrollchanges</strong>: <code>JobCode</code> 
                and <code>Salary</code>. Use the alias <code>NewSalary</code> 
                for the <code>Salary</code> column.<br>
                <br>
              </li>
            </ul>
            The rows for scheduled flights on which a scheduled employee has had 
            a payroll change (the matching rows from the two tables) should have 
            nonmissing values in all six columns. The remaining rows (the nonmatching 
            rows from <strong>Sasuser.Flightschedule</strong>) should contain 
            missing values for <code>JobCode</code> and <code>NewSalary</code>. 
            (The nonmatching rows are the rows for scheduled flights on which 
            a scheduled employee has <strong>not</strong> had a payroll change.)<br>
            <br>
            In the FROM clause, specify <strong>Sasuser.Flightschedule</strong> 
            as the first table. Use the table alias <code><strong>f</strong></code> 
            for <strong>Sasuser.Flightschedule</strong> and <code><strong>p</strong></code> 
            for <strong>Sasuser.Payrollchanges</strong>. <br>
            <br>
            Specify two title lines: <br>
            <br>
            <ul>
              <li> Title 1: <strong>All Scheduled Employees</strong></li>
              <li> Title 2: <strong>and Any Payroll Changes</strong><br>
                <br>
              </li>
            </ul>
            Sort the output by <code>JobCode</code>. Add a QUIT statement to the 
            query. Submit the query and view the <a href="JavaScript: openOther('m71_22a.htm')">output</a>.<br>
            <br>
          <li>Modify the query so that it displays rows for both of the following: 
            <br>
            <br>
            <ul>
              <li> all employees who have had a payroll change (all rows in <strong>Sasuser.Payrollchanges</strong>) 
              <li> flights that have the flightnumber 622 on which a scheduled 
                employee has had a payroll change (a subset of rows in <strong>Sasuser. 
                Flightschedule</strong>).<br>
                <br>
            </ul>
            The output should display the following columns, in the order in which 
            they are listed:<br>
            <br>
            <ul>
              <li> from <strong>Sasuser.Payrollchanges</strong>: <code>EmpID</code>, 
                <code>JobCode</code>, and <code>Salary</code>. As before, use 
                the column alias <code>NewSalary</code> for <code>Salary</code>. 
              </li>
              <li> from <strong>Sasuser.Flightschedule</strong>: <code>FlightNumber</code> 
                and <code>Date</code>. Use the column alias <code>FlightDate</code> 
                for <code>Date</code>.<br>
                <br>
              </li>
            </ul>
            The rows for employees who have had a payroll change and are scheduled 
            on flight 622 (the matching rows from the two tables) should have 
            nonmissing values in all five columns. The remaining rows (the nonmatching 
            rows from <strong>Sasuser.Payrollchanges</strong>) should contain 
            missing values for <code>FlightNumber</code> and <code>FlightDate</code>. 
            (The nonmatching rows are the rows for employees who have had a payroll 
            change but who are <strong>not</strong> scheduled on flight 622.) 
            <br>
            <br>
            Continue to list <strong>Sasuser.Flightschedule</strong> as the first 
            table and use the same table aliases as before. Change the title as 
            follows: <br>
            <br>
            <ul>
              <li>Title 1: <strong>All Employees with Payroll Changes</strong> 
              <li>Title 2: <strong>and Any Flight 622 Assignments</strong> <br>
                <br>
            </ul>
            Sort the output by <code>EmpID</code>. Submit this modified query 
            and view the <a href="JavaScript: openOther('m71_22b.htm')">output</a>.<br>
            <br>
          <li> Modify the query so that it displays rows for both of the following:<br>
            <br>
            <ul>
              <li>all employees who have had a payroll change (all rows in <strong>Sasuser.Payrollchanges</strong>) 
              <li>all scheduled flights (all rows in <strong>Sasuser.Flightschedule</strong>).<br>
                <br>
            </ul>
            The output should display the following columns, in the order in which 
            they are listed:<br>
            <br>
            <ul>
              <li>from <strong>Sasuser.Payrollchanges</strong>: <code>EmpID</code>, 
                <code>JobCode</code>, and <code>Salary</code> 
              <li>from <strong>Sasuser.Flightschedule</strong>: <code>FlightNumber</code> 
                and <code>Date</code>.<br>
                <br>
            </ul>
            The rows for employees who have had a payroll change <strong>and</strong> 
            are assigned to a flight (the matching rows from the two tables) should 
            have nonmissing values in all five columns. All other rows (the nonmatching 
            rows from the two tables) should contain missing values in some of 
            the columns.<br>
            <br>
            Continue to list <strong>Sasuser.Flightschedule</strong> as the first 
            table and use the same table aliases as before. <br>
            <br>
            Change the title as follows: <br>
            <br>
            <ul>
              <li>Title 1: <strong>All Employees with Payroll Changes, </strong>
              <li>Title 2: <strong>Their Flight Assignments (If Any), </strong>
              <li>Title 3: <strong>and All Scheduled Flights </strong>
</ul>
            <br>
            Sort the output by the fourth column listed in the SELECT clause (<code>FlightNumber</code>). 
            Submit this modified query and view the <a href="JavaScript: openOther('m71_22c.htm')">output</a>. 
            <br>
            <br>
          <li>Submit a null TITLE statement to cancel titles.<br>
          <!-- InstanceEndEditable -->
      </ol>
      
       </td>
  </tr>
</table>
</center>
<center>
<script>writepracticeSolutionLink();</script>
</center>
<script>writeNav_regular_bottom();</script>
</body>
<!-- InstanceEnd --></html>