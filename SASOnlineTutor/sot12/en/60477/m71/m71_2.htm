<html><!-- InstanceBegin template="/Templates/informationObject.dwt" codeOutsideHTMLIsLocked="false" -->
<head>
<SCRIPT LANGUAGE="JavaScript" SRC="../tut.js"></SCRIPT>
<script language="JavaScript" src="../nav.js"></script>
<SCRIPT LANGUAGE="JavaScript">
 setPageTitle();
 setCookie();
  
// Drop down menu link- © Dynamic Drive (www.dynamicdrive.com)
// For full source code and 100's more DHTML scripts, visit http://www.dynamicdrive.com
// Credit MUST stay intact for use -->

</SCRIPT>

<!-- InstanceBeginEditable name="extrascript" -->
<SCRIPT LANGUAGE="JavaScript">
</SCRIPT>
<!-- InstanceEndEditable -->

<link rel="stylesheet" href="../tut.css">


<META http-equiv="Content-Type" content="text/html; charset=windows-1252">
</HEAD>

<body marginheight="0" marginwidth="0" topmargin="0" leftmargin="0" rightmargin="0" bgcolor="#FFFFF0">
<script>writeinformationObjectTopNav1();</script>
	  
	  <font color="#003399" size="3" face="Arial, Helvetica, sans-serif"><strong><!-- InstanceBeginEditable name="TopicTitle" -->Understanding 
      Joins<!-- InstanceEndEditable --></strong></font> <!-- InstanceBeginEditable name="continued" --><!-- InstanceEndEditable -->
	  
<script>writeinformationObjectTopNav2();</script>
<br>
<center>
  <!-- InstanceBeginEditable name="content" --> 
  <table width="85%" border="0" cellpadding="0" cellspacing="0">
    <tr valign="top"> 
      <td> <p>Joins combine tables horizontally (side by side) by combining rows. 
          The tables being joined are not required to have the same number of 
          rows or columns.<br>
        </p></td>
    </tr>
  </table>
  <br>
  <table width="85%" border="0" align="center" cellpadding="2" cellspacing="0">
    <tr> 
      <td valign="top" width="24"><img src="../navimages/note.gif" width="20" height="20" alt="Note"></td>
      <td valign="top">You can use a join to combine views as well as tables. 
        Most of the following references to tables are also applicable to views; 
        any exceptions are noted. In-line views are introduced later in this lesson. 
        For more information about PROC SQL views, see the lesson <!--lesson reference--><strong><script>document.write(m75title);</script></strong>.</td>
    </tr>
  </table>
  <br>
  <table cellpadding="0" cellspacing="0" border="0" width="85%">
    <tr> 
      <td>When you use a PROC SQL query to join tables, you must decide how you 
        want the rows from the various tables to be combined. There are two main 
        types of joins, as shown below.</td>
    </tr>
  </table>
  <p>
  <br>
  <table width="85%" border="1" cellpadding="2" cellspacing="0" bgcolor="#FFFFFF" title="Types of Joins">
    <tr valign="top" bgcolor="#F7F7DE"> 
      <th width="51%"><font size="-1">Type of Join</font></th>
      <th width="49%"><font size="-1">Output</font></th>
    </tr>
    <tr valign="top"> 
      <td> <p><strong>Inner join</strong></p>
        <p align="center"><img src="images/m71_6g1.gif" alt="Diagram of two intersecting circles with the intersection highlighted" width="92" height="61"></p></td>
      <td>Only the rows that <strong>match</strong> across all table(s)</td>
    </tr>
    <tr valign="top"> 
      <td> <p><strong>Outer join</strong></p>
        <p align="center"><img src="images/m71_16g1.gif" alt="Diagram of two intersecting circles with the left circle, including intersection area, highlighted" width="92" height="61">&nbsp;&nbsp;<img src="images/m71_16g2.gif" alt="Diagram of two intersecting circles with the right circle, including intersection area, highlighted" width="92" height="61">&nbsp;&nbsp; 
          <img src="images/m71_16g3.gif" alt="Diagram of two intersecting circles with both circles highlighted" width="92" height="61"></p></td>
      <td> Rows that <strong>match</strong> across tables (as in the inner join) 
        plus <strong>nonmatching</strong> rows from one or more tables</td>
    </tr>
  </table>
  <p>
  <br>
  <table cellpadding="0" cellspacing="0" border="0" width="85%">
    <tr> 
      <td>When any type of join is processed, PROC SQL starts by generating a 
        <strong>Cartesian product</strong>, which contains all possible combinations 
        of rows from all tables. Let's learn more about how a Cartesian product 
        is generated.</td>
    </tr>
  </table>
  <p>
  <br>
  <!-- InstanceEndEditable --> 
</center>
<script>writeNav_regular_bottom();</script>
</body>
<!-- InstanceEnd --></html>
