<html>
<head>
<title>SAS Glossary</title>

<SCRIPT LANGUAGE="JavaScript">
<!-- hide script ...

var glossaryWindow = document.location.href;
var glossaryPath=glossaryWindow.substring(0,glossaryWindow.lastIndexOf("glossary.htm"));
var termCalled=glossaryWindow.indexOf("#");
if (termCalled!=-1) var glossaryTerm = glossaryWindow.substring(termCalled+1);


//-->
</SCRIPT>
<STYLE>
CODE {font-family: monospace;font-size : 100%;}
PRE {font-family: monospace;font-size : 100%;}
TD {font-family : Arial, Helvetica, sans-serif;	font-size : smaller;}
BODY {font-family : Arial, Helvetica, sans-serif;font-size : smaller;}
</STYLE>

<META http-equiv="Content-Type" content="text/html; charset=windows-1252">
</HEAD>

<body bgcolor="#FFFFF0" onLoad="this.focus()" onBlur="if(navigator.appName.indexOf('Microsoft Internet Explorer') != -1) this.close()">
<center>
<SCRIPT> 
 if (termCalled!=-1) document.write('<img src="navimages/glosstrm.gif" width="316" height="76">'); 
</SCRIPT>
</center>
<dl> 
  
 <a name="A"></a>

<SCRIPT>
if ((glossaryTerm=="aggregate") || (window != top)) document.write('<dt><b>aggregate storage location</b></dt><dd>'+
'a location on an operating system that can contain a group of distinct files. Different host operating systems call an aggregate grouping of files different names, such as a directory, a maclib, or a partitioned data set. The standard form for referencing an aggregate storage location from within SAS is <em>fileref (name)</em>, where <em>fileref</em> is the entire aggregate and <em>(name)</em> is a specific file or member of that aggregate. See also fileref (file reference). </dd>');
</SCRIPT>
<p>

<SCRIPT>
if ((glossaryTerm=="analysisvar") || (window != top)) document.write('<dt><b>analysis variable</b></dt><dd>'+
'a numeric variable that is used to calculate statistics or to display values. Usually an analysis variable contains quantitative or continuous values, but this is not required.'+
'</dd>');
</SCRIPT>
<p>

<SCRIPT>
if ((glossaryTerm=="argument") || (window != top)) document.write('<dt><b>argument</b></dt><dd>'+
'(1) the data values within parentheses on which a SAS function or CALL routine performs the indicated operation. (2) in syntax descriptions, any keyword in a SAS statement other than the statement name. (3) in macro processing, a character string that is used by a macro function.'+
'</dd>');
</SCRIPT>
<p>

<SCRIPT>
if ((glossaryTerm=="arithmeticop") || (window != top)) document.write('<dt><b>arithmetic operator</b></dt><dd>'+
'any of the symbols (+, -, /, *, and **) that are used to perform addition, subtraction, division, multiplication, and exponentiation in SAS expressions.'+
'</dd>');
</SCRIPT>
<p>

<SCRIPT>
if ((glossaryTerm=="array") || (window != top)) document.write('<dt><b>array</b></dt><dd>'+
'(1) in the SAS programming language, a group of variables that are of the same data type and which are available for processing under a single name. (2) a method of defining an area of memory as a unit of information, such as _TEMPORARY_ arrays.'+
'</dd>');
</SCRIPT>
<p>

<SCRIPT>
if ((glossaryTerm=="arrayname") || (window != top)) document.write('<dt><b>array name</b></dt><dd>'+
'a name that is selected to identify a group of variables or temporary data elements. It must be a valid SAS name that is not the name of a variable in the same DATA step or SCL program. See also array.'+
'</dd>');
</SCRIPT>
<p>

<SCRIPT>
if ((glossaryTerm=="arrayref") || (window != top)) document.write('<dt><b>array reference</b></dt><dd>'+
'a reference to the element to be processed in an array. See also array.'+
'</dd>');
</SCRIPT>
<p>

<SCRIPT>
if ((glossaryTerm=="audittrail") || (window != top)) document.write('<dt><b>audit trail</b></dt><dd>'+
'an optional SAS file that you can create in order to log modifications to a SAS data file. Each time an observation is added, deleted, or updated, information is written to the audit trail about who made the modification, what was modified, and when.'+
'</dd>');
</SCRIPT>
<p>

<SCRIPT>
if ((glossaryTerm=="automaticvar") || (window != top)) document.write('<dt><b>automatic variable</b></dt><dd>'+
'a variable that is created automatically by the DATA step, some DATA step statements, some SAS procedures, and the SAS macro facility. '+
'</dd>');
</SCRIPT>
<p>


 <a name="B"></a>
<SCRIPT>
if ((glossaryTerm=="basesas") || (window != top)) document.write('<dt><b>Base SAS software</b></dt><dd>'+
'software that includes a programming language that manages your data, procedures for data analysis and reporting, procedures for managing SAS files, a macro facility, Help menus, and a windowing environment for text editing and file management.</dd>');
</SCRIPT>
<p>


<SCRIPT>
if ((glossaryTerm=="buffer") || (window != top)) document.write('<dt><b>buffer</b></dt><dd>'+
'a portion of computer memory that is used for special holding purposes or processes. For example, a buffer might simply store information before sending that information to main memory for processing, or it might hold data after the data is read or before the data is written.</dd>');
</SCRIPT>
<p>

<SCRIPT>
if ((glossaryTerm=="BYgroup") || (window != top)) document.write('<dt><b>BY group</b></dt><dd>'+
'a group of observations or rows that have the same value for a variable that is specified in a BY statement. If more than one variable is specified in a BY statement, then the BY group is a group of observations that have a unique combination of values for those variables.</dd>');
</SCRIPT>
<p>

<SCRIPT>
if ((glossaryTerm=="BYgroupproc") || (window != top)) document.write('<dt><b>BY-group processing</b></dt><dd>'+
'the process of using the BY statement to process observations that are ordered, grouped, or indexed according to the values of one or more variables. Many SAS procedures and the DATA step support BY-group processing. For example, you can use BY-group processing with the PRINT procedure to print separate reports for different groups of observations in a single SAS data set.</dd>');
</SCRIPT>
<p>

<SCRIPT>
if ((glossaryTerm=="BYvalue") || (window != top)) document.write('<dt><b>BY value</b></dt><dd>'+
'the value of a BY variable. </dd>');
</SCRIPT>
<p>

<SCRIPT>
if ((glossaryTerm=="BYvariable") || (window != top)) document.write('<dt><b>BY variable</b></dt><dd>'+
'a variable that is named in a BY statement and whose values define groups of observations to process.</dd>');
</SCRIPT>
<p>

<a name="C"></a>

<SCRIPT>
if ((glossaryTerm=="Cartesian") || (window != top)) document.write('<dt><b>Cartesian product</b></dt><dd>'+
'a type of join that matches each row from each joined table to each row from all other joined tables. See also join.</dd>');
</SCRIPT>
<p>

<SCRIPT>
if ((glossaryTerm=="catalog") || (window != top)) document.write('<dt><b>catalog</b></dt><dd>'+
'See SAS catalog. </dd>');
</SCRIPT>
<p>

<SCRIPT>
if ((glossaryTerm=="charformat") || (window != top)) document.write('<dt><b>character format</b></dt><dd>'+
'a set of instructions that tell SAS to use a specific pattern for writing character data values.</dd>');
</SCRIPT>
<p>

<SCRIPT>
if ((glossaryTerm=="charfunction") || (window != top)) document.write('<dt><b>character function</b></dt><dd>'+
'a function that enables you to perform character string manipulations, comparisons, evaluations, or analyses.</dd>');
</SCRIPT>
<p>

<SCRIPT>
if ((glossaryTerm=="charinformat") || (window != top)) document.write('<dt><b>character informat</b></dt><dd>'+
'a set of instructions that tell SAS to use a specific pattern for reading character data values into character variables.</dd>');
</SCRIPT>
<p>

<SCRIPT>
if ((glossaryTerm=="charvalue") || (window != top)) document.write('<dt><b>character value</b></dt><dd>'+
'a value that can contain alphabetic characters, the numeric characters 0 through 9, and other special characters.</dd>');
</SCRIPT>
<p>

<SCRIPT>
if ((glossaryTerm=="charactervar") || (window != top)) document.write('<dt><b>character variable</b></dt><dd>'+
'a variable whose values can consist of alphabetic characters and special characters as well as numeric characters.</dd>');
</SCRIPT>
<p>
 
<SCRIPT>
if ((glossaryTerm=="classvar") || (window != top)) document.write('<dt><b>class variable</b></dt><dd>'+
'a variable that is used to group, or classify, data. Class variables can be either character or numeric. Class variables can have continuous values, but they typically have a few discrete values that define the classifications of the variable.</dd>');
</SCRIPT>
<p>

<SCRIPT>
if ((glossaryTerm=="codeeditwin") || (window != top)) document.write('<dt><b>code editing window</b></dt><dd>'+
'a generic term for any window into which users can type or paste program code, or in which they can make changes to existing programs.</dd>');
</SCRIPT>
<p>

<SCRIPT>
if ((glossaryTerm=="colalias") || (window != top)) document.write('<dt><b>column alias</b></dt><dd>'+
"a temporary, alternate name for a column. Aliases are optionally specified in the SQL procedure's SELECT clause to name or rename columns. An alias is one word.</dd>");
</SCRIPT>
<p>

<SCRIPT>
if ((glossaryTerm=="colinput") || (window != top)) document.write('<dt><b>column input</b></dt><dd>'+
'in the DATA step, a style of input in which column numbers are included in the INPUT statement to tell SAS which columns contain the values for each variable. This style of input is useful when the values for each variable are in the same location in all records.</dd>');
</SCRIPT>
<p>

<SCRIPT>
if ((glossaryTerm=="comment") || (window != top)) document.write('<dt><b>comment</b></dt><dd>'+
'text that provides additional information in a SAS program. SAS ignores comments during processing but writes them to the SAS log. Comments have two forms. A comment can appear as a statement that begins with an asterisk and ends with a semicolon: * message ; A comment can also appear as text that begins with a forward slash and an asterisk and ends with an asterisk and a forward slash: /* message */. In the SAS macro language, a comment begins with the symbols \% and ends with a semicolon (;).</dd>');
</SCRIPT>
<p>

<SCRIPT>
if ((glossaryTerm=="comparisonop") || (window != top)) document.write('<dt><b>comparison operator</b></dt><dd>'+
'a symbolic or mnemonic instruction that tests for a particular relationship between two values. If the comparison is true, the result of executing the instruction is the value 1; if the comparison is false, the result is the value 0.</dd>');
</SCRIPT>
<p>

<SCRIPT>
if ((glossaryTerm=="compilation") || (window != top)) document.write('<dt><b>compilation</b></dt><dd>'+
'the process of checking syntax and translating a portion of a program into a form that the computer can execute.</dd>');
</SCRIPT>
<p>

<SCRIPT>
if ((glossaryTerm=="compindex") || (window != top)) document.write('<dt><b>composite index</b></dt><dd>'+
'an index that locates observations in a SAS data set by the values of two or more key variables. See also index, simple index.</dd>');
</SCRIPT>
<p>

<SCRIPT>
if ((glossaryTerm=="compoundexp") || (window != top)) document.write('<dt><b>compound expression</b></dt><dd>'+
'an expression that contains more than one operator.</dd>');
</SCRIPT>
<p>

<SCRIPT>
if ((glossaryTerm=="concatenate") || (window != top)) document.write('<dt><b>concatenate</b></dt><dd>'+
'((1) for character values, to combine two or more character values, one after the other, into a single character value. (2) for external files, to access two or more files as if they were one by specifying the filenames one after another in the same SAS statement. (3) for SAS data sets, to combine two or more SAS data sets, one after the other, into a single data set.</dd>');
</SCRIPT>
<p>

<SCRIPT>
if ((glossaryTerm=="condition") || (window != top)) document.write('<dt><b>condition</b></dt><dd>'+
'(1) in a SAS program, one or more numeric or character expressions that result in a value upon which some decision depends. (2) in the SQL procedure, the part of the WHERE clause that contains the search criteria. In the condition, you specify which rows are to be retrieved.</dd>');
</SCRIPT>
<p>

<SCRIPT>
if ((glossaryTerm=="constant") || (window != top)) document.write('<dt><b>constant</b></dt><dd>'+
'in SAS software, a number or a character string that indicates a fixed value. Character constants must be enclosed in quotation marks.</dd>');
</SCRIPT>
<p>

<SCRIPT>
if ((glossaryTerm=="contdataset") || (window != top)) document.write('<dt><b>control data set</b></dt><dd>'+
'a SAS data set that contains information that the FORMAT procedure uses to create a format. See also format.</dd>');
</SCRIPT>
<p>

<a name="D"></a>

<SCRIPT>
if ((glossaryTerm=="dataerror") || (window != top)) document.write('<dt><b>data error</b></dt><dd>'+
'a type of execution error that occurs when a SAS program analyzes data that contains invalid values. For example, a data error occurs if you specify numeric variables in the INPUT statement for character data. SAS reports these errors in the SAS log but continues to execute the program. See also programming error, syntax error.'+
'</dd>');
</SCRIPT>
<p>

<SCRIPT>
if ((glossaryTerm=="datasetopt") || (window != top)) document.write('<dt><b>data set option</b></dt><dd>'+
'a SAS language element that specifies actions that apply only to a particular SAS data set. For example, data set options enable you to rename variables, to select only the first or last n observations for processing, to drop variables from processing or from the output data set, and to specify a password for a SAS data set.'+
'</dd>');
</SCRIPT>
<p>


<SCRIPT>
if ((glossaryTerm=="datastep") || (window != top)) document.write('<dt><b>DATA step</b></dt><dd>'+
'a group of statements in a SAS program that begins with a DATA statement and ends with either a RUN statement, another DATA statement, a PROC statement, or the end of the job. The DATA step enables you to read raw data or other SAS data sets and to create SAS data sets.</dd>');
</SCRIPT>
<p>

<SCRIPT>
if ((glossaryTerm=="datavalue") || (window != top)) document.write('<dt><b>data value</b></dt><dd>'+
'(1) a unit of character or numeric information in a SAS data set. A data value represents one variable in an observation. (2) in the rectangular structure of a SAS data set, the intersection of a row and a column.'+
'</dd>');
</SCRIPT>
<p>

<SCRIPT>
if ((glossaryTerm=="datetimeform") || (window != top)) document.write('<dt><b>date and time format</b></dt><dd>'+
'the instructions that tell SAS how to write numeric values as dates, times, and datetimes.'+
'</dd>');
</SCRIPT>
<p>

<SCRIPT>
if ((glossaryTerm=="datetimeinform") || (window != top)) document.write('<dt><b>date and time informat</b></dt><dd>'+
'the instructions that tell SAS how to read numeric values that are represented as dates, times, and datetimes.'+
'</dd>');
</SCRIPT>
<p>

<SCRIPT>
if ((glossaryTerm=="datevalue") || (window != top)) document.write('<dt><b>date value</b></dt><dd>'+
'See SAS date value.'+
'</dd>');
</SCRIPT>
<p>

<SCRIPT>
if ((glossaryTerm=="delimiter") || (window != top)) document.write('<dt><b>delimiter</b></dt><dd>'+
'a character that serves as a boundary that separates the elements of a character string, a program statement, a data line, or a list of arguments.'+
'</dd>');
</SCRIPT>
<p>

<SCRIPT>
if ((glossaryTerm=="descriptorinfo") || (window != top)) document.write('<dt><b>descriptor information</b></dt><dd>'+
'information about the contents and attributes of a SAS data set. For example, the descriptor information includes the data types and lengths of the variables, as well as which engine was used to create the data. SAS creates and maintains descriptor information within every SAS data set.'+
'</dd>');
</SCRIPT>
<p>

<SCRIPT>
if ((glossaryTerm=="directaccess") || (window != top)) document.write('<dt><b>direct access</b></dt><dd>'+
'in table lookup applications, a technique for retrieving records by observation number instead of searching a data set sequentially to find a match. This technique cannot be used with a BY statement, a WHERE statement, or a WHERE= data set option. It also cannot be used with transport format data sets, compressed data sets, data sets that are in sequential format on tape or disk, or SAS/ACCESS views or the SQL procedure views that read data from external files.'+
'</dd>');
</SCRIPT>
<p>

<SCRIPT>
if ((glossaryTerm=="directory") || (window != top)) document.write('<dt><b>directory</b></dt><dd>'+
'a named subdivision on a disk or diskette, used in organizing files. A directory also contains information about the file, such as size and date of last change.'+
'</dd>');
</SCRIPT>
<p>

<SCRIPT>
if ((glossaryTerm=="DOgroup") || (window != top)) document.write('<dt><b>DO group</b></dt><dd>'+
'a sequence of statements that starts with a simple DO statement and that ends with a corresponding END statement. See also DO loop.'+
'</dd>');
</SCRIPT>
<p>

<SCRIPT>
if ((glossaryTerm=="DOloop") || (window != top)) document.write('<dt><b>DO loop</b></dt><dd>'+
'a sequence of statements that starts with an iterative DO, DO WHILE, or DO UNTIL statement and that ends with a corresponding END statement. The statements are executed (usually repeatedly) according to directions that are specified in the DO statement. See also DO group.'+
'</dd>');
</SCRIPT>
<p>

<SCRIPT>
if ((glossaryTerm=="doubletrailatsign") || (window != top)) document.write('<dt><b>double trailing at sign (@@)</b></dt><dd>'+
'a special symbol that is used to hold a line in the input buffer during multiple iterations of a DATA step.'+
'</dd>');
</SCRIPT>
<p>

<SCRIPT>
if ((glossaryTerm=="duration") || (window != top)) document.write('<dt><b>duration</b></dt><dd>'+
'a value that represents the difference, in elapsed time or days, between any two time or date values.'+
'</dd>');
</SCRIPT>
<p>

 
<a name="E"></a>

<SCRIPT>
if ((glossaryTerm=="element") || (window != top)) document.write('<dt><b>element</b></dt><dd>'+
'in the TABULATE procedure, a variable, a statistic, a format modifier, the universal class variable ALL, or a combination produced by crossing two or more of these. Elements are used to create expressions in a TABLE statement.'+
'</dd>');
</SCRIPT>
<p>

<SCRIPT>
if ((glossaryTerm=="engine") || (window != top)) document.write('<dt><b>engine</b></dt><dd>'+
'a component of SAS software that reads from or writes to a file. Each engine enables SAS to access files that are in a particular format.</dd>');
</SCRIPT>
<p>

<SCRIPT>
if ((glossaryTerm=="execution") || (window != top)) document.write('<dt><b>execution</b></dt><dd>'+
'(1) in the DATA step, the process in which SAS carries out statements for each observation or record in the file. (2) in contexts other than the DATA step, such as SAS macros, procedures, and global statements, the process in which SAS performs the actions that are indicated.'+
'</dd>');
</SCRIPT>
<p>

<SCRIPT>
if ((glossaryTerm=="explicitarray") || (window != top)) document.write('<dt><b>explicit array</b></dt><dd>'+
'an array that consists of a valid SAS name, a reference to the number of variables or temporary data elements, and an optional list of the array elements. In an explicit array, you must explicitly specify the subscript in the reference when referring to an element. See also explicit array reference.'+
'</dd>');
</SCRIPT>
<p>

<SCRIPT>
if ((glossaryTerm=="explicitarrayref") || (window != top)) document.write('<dt><b>explicit array reference</b></dt><dd>'+
'a description of the element to be processed in an explicit array. See also explicit array, implicit array reference.'+
'</dd>');
</SCRIPT>
<p>

<SCRIPT>
if ((glossaryTerm=="expression") || (window != top)) document.write('<dt><b>expression</b></dt><dd>'+
'See SAS expression.'+
'</dd>');
</SCRIPT>
<p>

<SCRIPT>
if ((glossaryTerm=="extfile") || (window != top)) document.write('<dt><b>external file</b></dt><dd>'+
"a file that is created and maintained by a host operating system or by another vendor's software application. SAS can read data from and route output to external files. External files can contain raw data, SAS programming statements, procedure output, or output that was created by the PUT statement. A SAS data set is not an external file. See also fileref (file reference)."+
'</dd>');
</SCRIPT>
<p>


<a name="F"></a>

<SCRIPT>
if ((glossaryTerm=="field") || (window != top)) document.write('<dt><b>field</b></dt><dd>'+
'in an external file, the smallest logical unit of data. </dd>');
</SCRIPT>
<p>

<SCRIPT>
if ((glossaryTerm=="filereference") || (window != top)) document.write('<dt><b>file reference</b></dt><dd>'+
'See fileref (file reference).</dd>');
</SCRIPT>
<p>

<SCRIPT>
if ((glossaryTerm=="fileref") || (window != top)) document.write('<dt><b>fileref</b></dt><dd>'+
'a name that is temporarily assigned to an external file or to an aggregate storage location such as a directory or folder. The fileref identifies the file or the storage location to SAS. See also libref.</dd>');
</SCRIPT>
<p>

<SCRIPT>
if ((glossaryTerm=="FIRSTvar") || (window != top)) document.write('<dt><b>FIRST.<em>variable</em></b></dt><dd>'+
'a temporary variable that SAS creates to identify the first observation of each BY group. The variable is not added to the SAS data set. See also LAST.<em>variable</em>.</dd>');
</SCRIPT>
<p>

<SCRIPT>
if ((glossaryTerm=="floatptrep") || (window != top)) document.write('<dt><b>floating-point representation</b></dt><dd>'+
'a compact form of storing real numbers on a computer, similar to scientific notation. Different operating systems use different techniques for floating-point representation.</dd>');
</SCRIPT>
<p>

<SCRIPT>
if ((glossaryTerm=="format") || (window != top)) document.write('<dt><b>format</b></dt><dd>'+
'a pattern or set of instructions that SAS uses to determine how the values of a variable (or column) should be written or displayed. SAS provides a set of standard formats and also enables you to define your own formats.</dd>');
</SCRIPT>
<p>

<SCRIPT>
if ((glossaryTerm=="formatmod") || (window != top)) document.write('<dt><b>format modifier</b></dt><dd>'+
'a special symbol that is used in the INPUT and PUT statements and which enables you to control how SAS reads input data and writes output data.</dd>');
</SCRIPT>
<p>

<SCRIPT>
if ((glossaryTerm=="formattedinput") || (window != top)) document.write('<dt><b>formatted input</b></dt><dd>'+
'a style of input that uses special instructions called informats in the INPUT statement to determine how values that are entered in data fields should be interpreted. See also informat.</dd>');
</SCRIPT>
<p>

<SCRIPT>
if ((glossaryTerm=="function") || (window != top)) document.write('<dt><b>function</b></dt><dd>'+
'a component of the SAS programming language that can accept arguments, perform a computation or other operation, and return a value. For example, the ABS function returns the absolute value of a numeric argument. Functions can return either numeric or character results. A wide variety of functions are included with SAS software.</dd>');
</SCRIPT>
<p>


<a name="G"></a>

<SCRIPT>
if ((glossaryTerm=="gendataset") || (window != top)) document.write('<dt><b>generation data set</b></dt><dd>'+
'an archived copy of a SAS data set. Multiple copies of a SAS data set can be kept by requesting the generations feature. The multiple copies represent versions of the same data set, which are archived each time the data set is replaced. The copies are referred to as a generation group and are a collection of data sets that have the same root member name but different version numbers. There is a base version, which is the most recent version, plus a set of historical versions.</dd>');
</SCRIPT>
<p>

<SCRIPT>
if ((glossaryTerm=="globalopt") || (window != top)) document.write('<dt><b>global option</b></dt><dd>'+
'See SAS system option.</dd>');
</SCRIPT>
<p>

<a name="H"></a>

<SCRIPT>
if ((glossaryTerm=="heading") || (window != top)) document.write('<dt><b>heading</b></dt><dd>'+
'in SAS output, the text that is located near the beginning of each page of output. This includes text produced by a HEADER= option in a FILE statement, titles written with a TITLE statement, and default information such as date and page numbers.</dd>');
</SCRIPT>
<p>

<a name="I"></a>

<SCRIPT>
if ((glossaryTerm=="implicitarray") || (window != top)) document.write('<dt><b>implicit array</b></dt><dd>'+
'in the DATA step, an array that consists of an array name, an optional index variable, and a list of array elements. Using implicit arrays is not recommended for new programmers. See also explicit array.</dd>');
</SCRIPT>
<p>


<SCRIPT>
if ((glossaryTerm=="implicitarrayref") || (window != top)) document.write('<dt><b>implicit array reference</b></dt><dd>'+
'a description of the element to be processed in an implicit array. See also implicit array.</dd>');
</SCRIPT>
<p>

<SCRIPT>
if ((glossaryTerm=="index") || (window != top)) document.write('<dt><b>index</b></dt><dd>'+
'a component of a SAS data set that enables SAS to access observations in the SAS data set quickly and efficiently. The purpose of SAS indexes is to optimize WHERE-clause processing and to facilitate BY-group processing.</dd>');
</SCRIPT>
<p>

<SCRIPT>
if ((glossaryTerm=="informat") || (window != top)) document.write('<dt><b>informat</b></dt><dd>'+
'a pattern or set of instructions that SAS uses to determine how data values in an input file should be interpreted. SAS provides a set of standard informats and also enables you to define your own informats.</dd>');
</SCRIPT>
<p>

<SCRIPT>
if ((glossaryTerm=="inlineview") || (window != top)) document.write('<dt><b>in-line view</b></dt><dd>'+
"a query-expression that is nested in the SQL procedure's FROM clause. An in-line view can take a table alias but cannot be named permanently. It can be referenced only in the query (or statement) in which it is defined.</dd>");
</SCRIPT>
<p>

<SCRIPT>
if ((glossaryTerm=="innerjoin") || (window != top)) document.write('<dt><b>inner join</b></dt><dd>'+
'See join.</dd>');
</SCRIPT>
<p>

<SCRIPT>
if ((glossaryTerm=="inputbuffer") || (window != top)) document.write('<dt><b>input buffer</b></dt><dd>'+
'the temporary area of memory into which each record of data is read when the INPUT statement executes. Note that the input buffer is a logical concept that is independent of physical implementation.</dd>');
</SCRIPT>
<p>

<SCRIPT>
if ((glossaryTerm=="integer") || (window != top)) document.write('<dt><b>integer</b></dt><dd>'+
'a number that does not contain a decimal point.</dd>');
</SCRIPT>
<p>

<SCRIPT>
if ((glossaryTerm=="integconstr") || (window != top)) document.write('<dt><b>integrity constraints</b></dt><dd>'+
'a set of data validation rules that you can specify in order to restrict the data values that can be stored for a variable in a SAS data file. Integrity constraints help you preserve the validity and consistency of your data. </dd>');
</SCRIPT>
<p>

<SCRIPT>
if ((glossaryTerm=="interleaving") || (window != top)) document.write('<dt><b>interleaving</b></dt><dd>'+
'a process in which SAS combines two or more sorted SAS data sets into one sorted SAS data set based on the values of the BY variables.</dd>');
</SCRIPT>
<p>

<SCRIPT>
if ((glossaryTerm=="item") || (window != top)) document.write('<dt><b>item</b></dt><dd>'+
'in the REPORT procedure, a data set variable, a statistic, or a computed variable. An item can occupy one or more columns in a report. Under some circumstances, multiple items can share a column.</dd>');
</SCRIPT>
<p>

<a name="J"></a>
 
<SCRIPT>
if ((glossaryTerm=="join") || (window != top)) document.write('<dt><b>join</b></dt><dd>'+
'((1) to combine data from two or more tables into a single result table. (2) in the SQL procedure, the combination of data from two or more tables (or from two or more SAS data views) to produce a single result table. A conventional join, which is often called an inner join, returns a result table for all the rows in one table that have one or more matching rows in the other table(s).</dd>');
</SCRIPT>
<p>

<a name="K"></a>

<SCRIPT>
if ((glossaryTerm=="keycolumn") || (window != top)) document.write('<dt><b>key column</b></dt><dd>'+
'See key variable.</dd>');
</SCRIPT>
<p>

<SCRIPT>
if ((glossaryTerm=="keyvariable") || (window != top)) document.write('<dt><b>key variable</b></dt><dd>'+
'a variable that is used to index SAS data sets.</dd>');
</SCRIPT>
<p>


<a name="L"></a> 

<SCRIPT>
if ((glossaryTerm=="labelvariable") || (window != top)) document.write('<dt><b>label, variable</b></dt><dd>'+
'a descriptive label of up to 256 characters that can be printed in the output by certain procedures instead of, or in addition to, the variable name.</dd>');
</SCRIPT>
<p>

<SCRIPT>
if ((glossaryTerm=="LASTvar") || (window != top)) document.write('<dt><b>LAST.<em>variable</em></b></dt><dd>'+
'a temporary variable that SAS creates to identify the last observation of each BY group. This variable is not added to the SAS data set. See also FIRST.<em>variable</em>.</dd>');
</SCRIPT>
<p>

<SCRIPT>
if ((glossaryTerm=="lengthvar") || (window != top)) document.write('<dt><b>length variable</b></dt><dd>'+
"a numeric variable that is used with the $VARYING. informat or format to specify the actual length of a character variable whose values do not all have the same length.</dd>");
</SCRIPT>
<p>

<SCRIPT>
if ((glossaryTerm=="lengthvariable") || (window != top)) document.write('<dt><b>length, variable</b></dt><dd>'+
"the number of bytes used to store each of a variable's values in a SAS data set.</dd>");
</SCRIPT>
<p>

<SCRIPT>
if ((glossaryTerm=="libraryreference") || (window != top)) document.write('<dt><b>library reference</b></dt><dd>'+
'See libref (library reference).</dd>');
</SCRIPT>
<p>

<SCRIPT>
if ((glossaryTerm=="libref") || (window != top)) document.write('<dt><b>libref (library reference)</b></dt><dd>'+
'a name that is temporarily associated with a SAS library. The complete name of a SAS file consists of two words, separated by a period. The libref, which is the first word, indicates the library. The second word is the name of the specific SAS file. For example, in VLIB.NEWBDAY, the libref VLIB tells SAS which library contains the file NEWBDAY. You assign a libref with a LIBNAME statement or with an operating system command.</dd>');
</SCRIPT>
<p>

<SCRIPT>
if ((glossaryTerm=="lnholdspec") || (window != top)) document.write('<dt><b>line-hold specifier</b></dt><dd>'+
'a special symbol used in INPUT and PUT statements that enables you to hold a record in the input or output buffer for further processing. Line-hold specifiers include the trailing at sign (@) and the double trailing at sign (@@).</dd>');0
</SCRIPT>
<p>

<SCRIPT>
if ((glossaryTerm=="listinput") || (window != top)) document.write('<dt><b>list input</b></dt><dd>'+
'a style of input that supplies variable names, not column locations, in the INPUT statement to scan input records for data values that are separated by at least one blank or by some other delimiter. </dd>');
</SCRIPT>
<p>

<SCRIPT>
if ((glossaryTerm=="listinputmod") || (window != top)) document.write('<dt><b>list input, modified</b></dt><dd>'+
'a style of input that uses special instructions called informats and format modifiers in the INPUT statement to scan input records for data values that are separated by at least one blank (or other delimiter), and in some cases, by two blanks.</dd>');
</SCRIPT>
<p>

<SCRIPT>
if ((glossaryTerm=="listingoutput") || (window != top)) document.write('<dt><b>listing output</b></dt><dd>'+
'SAS procedure output that is in a monospace font. All text in listing output has the same font size, and no special font styles are applied to it.</dd>');
</SCRIPT>
<p>

<SCRIPT>
if ((glossaryTerm=="logdatamodel") || (window != top)) document.write('<dt><b>logical data model</b></dt><dd>'+
'a framework into which engines fit information for processing by SAS. This data model is a logical representation of data or files, not a physical structure.</dd>');
</SCRIPT>
<p>

<SCRIPT>
if ((glossaryTerm=="logicalop") || (window != top)) document.write('<dt><b>logical operator</b></dt><dd>'+
'an operator that is used in expressions to link sequences of comparisons. The logical operators are AND, OR, and NOT.</dd>');
</SCRIPT>
<p>

<a name="M"></a>

<SCRIPT>
if ((glossaryTerm=="macro") || (window != top)) document.write('<dt><b>macro</b></dt><dd>'+
'an entry in a catalog that contains a group of compiled program statements and stored text.</dd>');
</SCRIPT>
<p>

<SCRIPT>
if ((glossaryTerm=="macrocall") || (window != top)) document.write('<dt><b>macro call</b></dt><dd>'+
'within a SAS program, a statement that invokes (or calls) a stored, compiled macro program. You use the syntax <em>%macro-name;</em> to call a macro.</dd>');
</SCRIPT>
<p>

<SCRIPT>
if ((glossaryTerm=="macrocomp") || (window != top)) document.write('<dt><b>macro compilation</b></dt><dd>'+
'the process of converting a macro definition from the statements that you enter into a form that is ready for the macro processor to execute. The compiled macro is then stored for later use in the SAS program or session.</dd>');
</SCRIPT>
<p>

<SCRIPT>
if ((glossaryTerm=="macroexc") || (window != top)) document.write('<dt><b>macro execution</b></dt><dd>'+
'the process of following the instructions that are given by compiled macro program statements in order to generate text, to write messages to the SAS log, to accept input, to create or change the values of macro variables, or to perform other activities. The generated text can be a SAS statement, a SAS command, or another macro program statement.</dd>');
</SCRIPT>
<p>

<SCRIPT>
if ((glossaryTerm=="macroexp") || (window != top)) document.write('<dt><b>macro expression</b></dt><dd>'+
'any valid combination of symbols that returns a value when it is executed. The three types of macro expressions are text, logical, and arithmetic. A text expression generates text when it is resolved (executed) and can consist of any combination of text, macro variables, macro functions, and macro calls. A logical expression consists of logical operators and operands and returns a value of either true or false. An arithmetic expression consists of arithmetic operators and operands and returns a numeric value.</dd>');
</SCRIPT>
<p>

<SCRIPT>
if ((glossaryTerm=="macrofac") || (window != top)) document.write('<dt><b>macro facility</b></dt><dd>'+
'a component of Base SAS software that you can use for extending and customizing SAS programs and for reducing the amount of text that must be entered in order to perform common tasks. The macro facility consists of the macro processor and the macro programming language.</dd>');
</SCRIPT>
<p>

<SCRIPT>
if ((glossaryTerm=="macrofunc") || (window != top)) document.write('<dt><b>macro function</b></dt><dd>'+
'a function that is defined by the macro facility. Each macro function processes one or more arguments, and produces a result.</dd>');
</SCRIPT>
<p>

<SCRIPT>
if ((glossaryTerm=="macroinvocat") || (window != top)) document.write('<dt><b>macro invocation</b></dt><dd>'+
'another term for macro call. See macro call.</dd>');
</SCRIPT>
<p>

<SCRIPT>
if ((glossaryTerm=="macrolang") || (window != top)) document.write('<dt><b>macro language</b></dt><dd>'+
'the programming language that is used to communicate with the macro processor.</dd>');
</SCRIPT>
<p>

<SCRIPT>
if ((glossaryTerm=="macroproc") || (window != top)) document.write('<dt><b>macro processor</b></dt><dd>'+
'the component of SAS software that compiles and executes macros and macro program statements. </dd>');
</SCRIPT>
<p>

<SCRIPT>
if ((glossaryTerm=="macroquot") || (window != top)) document.write('<dt><b>macro quoting</b></dt><dd>'+
'a function that tells the macro processor to interpret special characters and mnemonics as text rather than as part of the macro language.</dd>');
</SCRIPT>
<p>

<SCRIPT>
if ((glossaryTerm=="macrovar") || (window != top)) document.write('<dt><b>macro variable</b></dt><dd>'+
'a variable that is part of the SAS macro programming language. The value of a macro variable is a string that remains constant until you change it. Macro variables are sometimes referred to as symbolic variables.</dd>');
</SCRIPT>
<p>

<SCRIPT>
if ((glossaryTerm=="macrovarref") || (window != top)) document.write('<dt><b>macro variable reference</b></dt><dd>'+
'the name of a macro variable preceded by an ampersand (&name). The macro processor replaces the macro variable reference with the value of the specified macro variable.</dd>');
</SCRIPT>
<p>

<SCRIPT>
if ((glossaryTerm=="masterds") || (window != top)) document.write('<dt><b>master data set</b></dt><dd>'+
'in an update operation, the data set that contains the information that you want to update. See also transaction data set.</dd>');
</SCRIPT>
<p>

<SCRIPT>
if ((glossaryTerm=="matchmerg") || (window != top)) document.write('<dt><b>match-merging</b></dt><dd>'+
'a process in which SAS joins observations from two or more SAS data sets according to the values of the BY variables. See also one-to-one merging.</dd>');
</SCRIPT>
<p>

<SCRIPT>
if ((glossaryTerm=="member") || (window != top)) document.write('<dt><b>member</b></dt><dd>'+
'(1) a SAS file in a SAS library. (2) under z/OS, a single component of a partitioned data set. </dd>');
</SCRIPT>
<p>

<SCRIPT>
if ((glossaryTerm=="membername") || (window != top)) document.write('<dt><b>member name</b></dt><dd>'+
'a name that is assigned to a SAS file in a SAS library. Under z/OS, this term can also refer to the name of a single component of a partitioned data set.</dd>');
</SCRIPT>
<p>

<SCRIPT>
if ((glossaryTerm=="menubar") || (window != top)) document.write('<dt><b>menu bar</b></dt><dd>'+
'the primary list of items at the top of a window, which represent the actions or classes of actions that can be executed. Selecting an item executes an action, opens a pull-down menu, or opens a dialog box that requests additional information.</dd>');
</SCRIPT>
<p>

<SCRIPT>
if ((glossaryTerm=="merging") || (window != top)) document.write('<dt><b>merging</b></dt><dd>'+
'the process of combining observations from two or more SAS data sets into a single observation in a new SAS data set. See also match-merging, one-to-one merging.</dd>');
</SCRIPT>
<p>

<SCRIPT>
if ((glossaryTerm=="metadata") || (window != top)) document.write('<dt><b>metadata</b></dt><dd>'+
'a description or definition of data or information.</dd>');
</SCRIPT>
<p>

<SCRIPT>
if ((glossaryTerm=="missvalue") || (window != top)) document.write('<dt><b>missing value</b></dt><dd>'+
'(1) in SAS, a term that describes the contents of a variable that contains no data for a particular row or observation. By default, SAS prints or displays a missing numeric value as a single period, and it prints or displays a missing character value as a blank space. (2) in the SQL procedure, the equivalent of an SQL NULL value.</dd>');
</SCRIPT>
<p>

<SCRIPT>
if ((glossaryTerm=="multidimarray") || (window != top)) document.write('<dt><b>multidimensional array</b></dt><dd>'+
'a grouping of variables of the same data type under a single name, with at least two dimensions. When processed, this grouping of variables produces results in columns, rows, and, depending on the array, higher dimensions.</dd>');
</SCRIPT>
<p>

<a name="N"></a>

<SCRIPT>
if ((glossaryTerm=="nonstanddata") || (window != top)) document.write('<dt><b>nonstandard data</b></dt><dd>'+
'data that appear in alternate or nonstandard forms, such as numbers that contain commas.</dd>');
</SCRIPT>
<p>

<SCRIPT>
if ((glossaryTerm=="numericfrmt") || (window != top)) document.write('<dt><b>numeric format</b></dt><dd>'+
'a set of instructions that tell SAS to use a specific pattern for writing the values of numeric variables. </dd>');
</SCRIPT>
<p>

<SCRIPT>
if ((glossaryTerm=="numericinfrmt") || (window != top)) document.write('<dt><b>numeric informat</b></dt><dd>'+
'a set of instructions that tell SAS to use a specific pattern for reading numeric data values.</dd>');
</SCRIPT>
<p>

<SCRIPT>
if ((glossaryTerm=="numericvalue") || (window != top)) document.write('<dt><b>numeric value</b></dt><dd>'+
'a value that usually contains only numbers, which can include numbers in E-notation and hexadecimal notation. A numeric value can sometimes contain a decimal point, a plus sign, or a minus sign. Numeric values are stored in numeric variables.</dd>');
</SCRIPT>
<p>

<SCRIPT>
if ((glossaryTerm=="numericvar") || (window != top)) document.write('<dt><b>numeric variable</b></dt><dd>'+
'a variable that contains only numeric values and related symbols, such as decimal points, plus signs, and minus signs. By default, SAS stores all numeric variables in floating-point representation. </dd>');
</SCRIPT>
<p>


<a name="O"></a>

<SCRIPT>
if ((glossaryTerm=="obs") || (window != top)) document.write('<dt><b>observation</b></dt><dd>'+
'a row in a SAS data set. All of the data values in an observation are associated with a single entity such as a customer or a state. Each observation contains one data value for each variable.</dd>'); 
</SCRIPT>
<p>

<SCRIPT>
if ((glossaryTerm=="onelevel") || (window != top)) document.write('<dt><b>one-level name</b></dt><dd>'+
'a one-part name for a SAS file in which the libref (library reference) is omitted and only the filename is specified. When you specify a one-level name, the default temporary library, <strong>Work</strong>, is assumed.</dd>');
</SCRIPT>
<p>

<SCRIPT>
if ((glossaryTerm=="oneonematch") || (window != top)) document.write('<dt><b>one-to-one matching</b></dt><dd>'+
'the process of combining observations from two or more data sets into one observation using two or more SET statements to read observations independently from each data set. See also match-merging. </dd>');
</SCRIPT>
<p>

<SCRIPT>
if ((glossaryTerm=="oneonemerge") || (window != top)) document.write('<dt><b>one-to-one merging</b></dt><dd>'+
"the process of using the MERGE statement (without a BY statement) to combine observations from two or more data sets based on the observations' positions in the data sets. See also match-merging. </dd>");
</SCRIPT>
<p>

<SCRIPT>
if ((glossaryTerm=="operand") || (window != top)) document.write('<dt><b>operand</b></dt><dd>'+
'any of the variables and constants in a SAS expression that contains operators, variables, and constants.</dd>');
</SCRIPT>
<p>

<SCRIPT>
if ((glossaryTerm=="operator") || (window != top)) document.write('<dt><b>operator</b></dt><dd>'+
'in a SAS expression, any of several symbols that request a comparison, a logical operation, or an arithmetic calculation.</dd>');
</SCRIPT>
<p>



<a name="P"></a>

<SCRIPT>
if ((glossaryTerm=="pagesize") || (window != top)) document.write('<dt><b>page size</b></dt><dd>'+
'(1) the size of a page of printed output. (2) the number of bytes of data that SAS moves between external storage and memory in one input/output operation. Page size is analogous to buffer size for SAS data sets.</dd>');
</SCRIPT>
<p>

<SCRIPT>
if ((glossaryTerm=="pdvabv") || (window != top)) document.write('<dt><b>PDV</b></dt><dd>'+
'See program data vector (PDV).</dd>');
</SCRIPT>
<p>

<SCRIPT>
if ((glossaryTerm=="period") || (window != top)) document.write('<dt><b>period</b></dt><dd>'+
'the default character that SAS uses to print or display a missing value for a numeric variable. </dd>');
</SCRIPT>
<p>

<SCRIPT>
if ((glossaryTerm=="permSASdatalib") || (window != top)) document.write('<dt><b>permanent SAS library</b></dt><dd>'+
'a SAS library that is not deleted when a SAS session ends, and which is therefore available to subsequent SAS sessions. Unless the <strong>User</strong> libref is defined, you use a two-level name to access a file in a permanent library. The first-level name is the libref, and the second-level name is the member name.</dd>');
</SCRIPT>
<p>

<SCRIPT>
if ((glossaryTerm=="permSASfile") || (window != top)) document.write('<dt><b>permanent SAS file</b></dt><dd>'+
'a file in a SAS library that is not deleted when the SAS session or job terminates.</dd>');
</SCRIPT>
<p>

<SCRIPT>
if ((glossaryTerm=="physfilenm") || (window != top)) document.write('<dt><b>physical filename</b></dt><dd>'+
'the name that the operating system uses to identify a file.</dd>');
</SCRIPT>
<p>

<SCRIPT>
if ((glossaryTerm=="pointer") || (window != top)) document.write('<dt><b>pointer</b></dt><dd>'+
'in the DATA step, a programming tool that SAS uses to keep track of its position in the input or output buffer.</dd>');
</SCRIPT>
<p>

<SCRIPT>
if ((glossaryTerm=="pointercntrl") || (window != top)) document.write('<dt><b>pointer control</b></dt><dd>'+
'the process of instructing SAS to move the pointer before reading or writing data. </dd>');
</SCRIPT>
<p>

<SCRIPT>
if ((glossaryTerm=="PROCSQLview") || (window != top)) document.write('<dt><b>PROC SQL view</b></dt><dd>'+
"a SAS data set (of type VIEW) that is created by the SQL procedure. A PROC SQL view contains no data. Instead, it stores information that enables it to read data values from other files, which can include SAS data files, SAS/ACCESS views, DATA step views, or other PROC SQL views. A PROC SQL view's output can be either a subset or a superset of one or more files. See also SAS data view.</dd>");
</SCRIPT>
<p>

<SCRIPT>
if ((glossaryTerm=="PROCstep") || (window != top)) document.write('<dt><b>PROC step</b></dt><dd>'+
'a group of SAS statements that call and execute a SAS procedure. A PROC step usually takes a SAS data set as input.</dd>');
</SCRIPT>
<p>

<SCRIPT>
if ((glossaryTerm=="procedure") || (window != top)) document.write('<dt><b>procedure</b></dt><dd>'+
'See SAS procedure.</dd>');
</SCRIPT>
<p>

<SCRIPT>
if ((glossaryTerm=="procoutputfile") || (window != top)) document.write('<dt><b>procedure output file</b></dt><dd>'+
'an external file that contains the result of the analysis or the report produced. Most procedures write output to the procedure output file by default. Reports that DATA steps produce using PUT statements and a FILE statement with the PRINT destination also go to this file.</dd>');
</SCRIPT>
<p>



<SCRIPT>
if ((glossaryTerm=="pdv") || (window != top)) document.write('<dt><b>program data vector (PDV)</b></dt><dd>'+
'the temporary area of computer memory in which SAS builds a SAS data set, one observation at a time. The program data vector is a logical concept and does not necessarily correspond to a single contiguous area of memory.</dd>');
</SCRIPT>
<p>

<SCRIPT>
if ((glossaryTerm=="programerror") || (window != top)) document.write('<dt><b>programming error</b></dt><dd>'+
'a flaw in the logic of a SAS program that can cause the program to fail or to perform differently than the programmer intended. See also syntax error.</dd>');
</SCRIPT>
<p>

<SCRIPT>
if ((glossaryTerm=="pulldown") || (window != top)) document.write('<dt><b>pull-down menu</b></dt><dd>'+
'the list of menu items or choices that appears when you choose an item from a menu bar or from another menu.</dd>');
</SCRIPT>
<p>

<a name="Q"></a> 

<SCRIPT>
if ((glossaryTerm=="qualcolname") || (window != top)) document.write('<dt><b>qualified column name</b></dt><dd>'+
'a column name to which a table name has been prefixed. In the SQL procedure, a qualified column name is used to specify a column that has the same name in multiple tables.</dd>');
</SCRIPT>
<p>


<SCRIPT>
if ((glossaryTerm=="query") || (window != top)) document.write('<dt><b>query</b></dt><dd>'+
'a set of instructions that requests particular information from one or more data sources.</dd>');
</SCRIPT>
<p>

<a name="R"></a> 

<SCRIPT>
if ((glossaryTerm=="randomsamp") || (window != top)) document.write('<dt><b>random sample</b></dt><dd>'+
'a group of observations that have been chosen randomly from the original data set.</dd>');
</SCRIPT>
<p>

<SCRIPT>
if ((glossaryTerm=="randomsampreplace") || (window != top)) document.write('<dt><b>random sample with replacement</b></dt><dd>'+
'a random sample that has been created such that each observation in the original data set has an equal chance of being chosen for inclusion in the sample each time SAS chooses an observation. Therefore, one observation could possibly be chosen from the original data set and included in the sample multiple times.</dd>');
</SCRIPT>
<p>

<SCRIPT>
if ((glossaryTerm=="randomsampnoreplace") || (window != top)) document.write('<dt><b>random sample without replacement</b></dt><dd>'+
'a random sample that has been created such that once an observation has been included in the sample, it is no longer eligible to be chosen again.</dd>');
</SCRIPT>
<p>

<SCRIPT>
if ((glossaryTerm=="rawdata") || (window != top)) document.write('<dt><b>raw data</b></dt><dd>'+
'(1) data that has not been read into a SAS data set. (2) in statistical analysis, data (including data in SAS data sets) that has not had a particular operation, such as standardization, performed on it.</dd>');
</SCRIPT>
<p>

<SCRIPT>
if ((glossaryTerm=="resultset") || (window != top)) document.write('<dt><b>result set</b></dt><dd>'+
'the set of rows or records that a server or other application returns in response to a query. </dd>');
</SCRIPT>
<p>


<a name="S"></a> 


<SCRIPT>
if ((glossaryTerm=="sascatalog") || (window != top)) document.write('<dt><b>SAS catalog </b></dt><dd>'+
'a SAS file that stores many different kinds of information in smaller units called catalog entries. A single SAS catalog can contain several different types of catalog entries.</dd>');
</SCRIPT>
<p>

<SCRIPT>
if ((glossaryTerm=="SASdatafile") || (window != top)) document.write('<dt><b>SAS data file</b></dt><dd>'+
'a type of SAS data set that contains data values as well as descriptor information that is associated with the data. The descriptor information includes information such as the data types and lengths of the variables, as well as the name of the engine that was used to create the data. SAS data files are of member type DATA. A PROC SQL table is a SAS data file.</dd>');
</SCRIPT>
<p>

<SCRIPT>
if ((glossaryTerm=="SASdatalib") || (window != top)) document.write('<dt><b>SAS library</b></dt><dd>'+
'a collection of one or more SAS files that are recognized by SAS and which are referenced and stored as a unit. Each file is a member of the library.</dd>');
</SCRIPT>
<p>


<SCRIPT>
if ((glossaryTerm=="sasdataset") || (window != top)) document.write('<dt><b>SAS data set</b></dt><dd>'+
"a file whose contents are in one of the native SAS file formats. There are two types of SAS data sets: SAS data files and SAS data views. SAS data files contain data values in addition to descriptor information that is associated with the data. SAS data views contain only the descriptor information plus other information that is required for retrieving data values from other SAS data sets or from files whose contents are in other software vendors' file formats.</dd>");
</SCRIPT>
<p>

<SCRIPT>
if ((glossaryTerm=="SASdatasetopt") || (window != top)) document.write('<dt><b>SAS data set option</b></dt><dd>'+
'an option that appears in parentheses after a SAS data set name. Data set options specify actions that apply only to the processing of that SAS data set.</dd>');
</SCRIPT>
<p>


<SCRIPT>
if ((glossaryTerm=="view") || (window != top)) document.write('<dt><b>SAS data view</b></dt><dd>'+
"a type of SAS data set that retrieves data values from other files. A SAS data view contains only descriptor information such as the data types and lengths of the variables (columns), plus other information that is required for retrieving data values from other SAS data sets or from files that are stored in other software vendors' file formats. Both PROC SQL views and SAS/ACCESS views are considered to be SAS data views. SAS data views are of member type VIEW.</dd>");
</SCRIPT>
<p>

<SCRIPT>
if ((glossaryTerm=="SASdateconstant") || (window != top)) document.write('<dt><b>SAS date constant</b></dt><dd>'+
"a string in the form '<em>ddMMMyy</em>'d or '<em>ddMMMyyyy</em>'d that represents a date in a SAS statement. The string is enclosed in quotation marks and is followed by the character d (for example, '6JUL01'd, '06JUL01'd, '6 JUL2001'd, or '06JUL2001'd).</dd>");
</SCRIPT>
<p>

<SCRIPT>
if ((glossaryTerm=="SASdatevalue") || (window != top)) document.write('<dt><b>SAS date value</b></dt><dd>'+
'an integer that represents a date in SAS software. The integer represents the number of days between January 1, 1960, and another specified date. For example, the SAS date value 366 represents the calendar date January 1, 1961.</dd>');
</SCRIPT>
<p>

<SCRIPT>
if ((glossaryTerm=="SASdatetimeconst") || (window != top)) document.write('<dt><b>SAS datetime constant</b></dt><dd>'+
"a string in the form '<em>ddMMMyy:hh:mm:ss</em>'dt or '<em>ddMMMyyyy:hh:mm:ss</em>'dt that represents a date and time in SAS. The string is enclosed in quotation marks and is followed by the characters dt (for example, '06JUL2001:09:53:22'dt).</dd>");
</SCRIPT>
<p>

<SCRIPT>
if ((glossaryTerm=="SASdatetimevalue") || (window != top)) document.write('<dt><b>SAS datetime value</b></dt><dd>'+
'an integer that represents a date and a time in SAS software. The integer represents the number of seconds between midnight, January 1, 1960, and another specified date and time. For example, the SAS datetime value for 9:30 a.m., June 5, 2000, is 1275816600.</dd>');
</SCRIPT>
<p>

<SCRIPT>
if ((glossaryTerm=="SASEG") || (window != top)) document.write('<dt><b>SAS Enterprise Guide</b></dt><dd>'+
"a software application with a point-and-click interface that gives users access to the functionality of many components of SAS software. Interactive dialog boxes guide users through data analysis tasks and reporting tasks, and users can easily export the results of those tasks to other Windows applications or servers. SAS Enterprise Guide provides access not only to SAS data files, but also to data that is in a wide variety of other software vendors' formats and in other operating system formats. </dd>");
</SCRIPT>
<p>
 
<SCRIPT>
if ((glossaryTerm=="sasexpression") || (window != top)) document.write('<dt><b>SAS expression</b></dt><dd>'+
'a sequence of operands and operators that form a set of instructions that SAS processes and which resolve to a single value. SAS expressions are used in SAS program statements to create variables, to assign values, to calculate new values, to transform variables, and to perform conditional processing. SAS expressions can resolve to numeric values, character values, or Boolean values.</dd>');
</SCRIPT>
<p>


<SCRIPT>
if ((glossaryTerm=="SASfile") || (window != top)) document.write('<dt><b>SAS file</b></dt><dd>'+
'a specially structured file that is created, organized, and, optionally, maintained by SAS. A SAS file can be a SAS data set, a catalog, a stored program, or an access descriptor.</dd>');
</SCRIPT>
<p>


<SCRIPT>
if ((glossaryTerm=="sasfunction") || (window != top)) document.write('<dt><b>SAS function</b></dt><dd>'+
'See function.</dd>');
</SCRIPT>
<p>

<SCRIPT>
if ((glossaryTerm=="SASkeyword") || (window != top)) document.write('<dt><b>SAS keyword</b></dt><dd>'+
'a literal that is a primary part of the SAS language. Keywords are statement names, function names, command names, macro statement names, and macro function names.</dd>');
</SCRIPT>
<p>

<SCRIPT>
if ((glossaryTerm=="SASlog") || (window != top)) document.write('<dt><b>SAS log</b></dt><dd>'+
'a file that contains a record of the SAS statements that you enter as well as messages about the execution of your program.</dd>');
</SCRIPT>
<p>

<SCRIPT>
if ((glossaryTerm=="SASname") || (window != top)) document.write('<dt><b>SAS name</b></dt><dd>'+
'a name that is assigned to items such as SAS variables and SAS data sets. The first character must be a letter or an underscore. Subsequent characters can be letters, numbers, or underscores. Blanks and special characters (except the underscore) are not allowed. The maximum length of a SAS name depends on the language element that it is assigned to. Many SAS names, such as names of DATA step variables and array names, can be 32 characters long. Others, such as librefs and filerefs, have a maximum length of 8 characters.</dd>');
</SCRIPT>
<p>

<SCRIPT>
if ((glossaryTerm=="SASoperator") || (window != top)) document.write('<dt><b>SAS operator</b></dt><dd>'+
'See operator.</dd>');
</SCRIPT>
<p>

<SCRIPT>
if ((glossaryTerm=="sasprocedure") || (window != top)) document.write('<dt><b>SAS procedure</b></dt><dd>'+
'a program that produces reports, manages files, or analyzes data and which is accessed with a PROC statement. Many procedures are included in SAS software.</dd>');
</SCRIPT>
<p>


<SCRIPT>
if ((glossaryTerm=="SASprogram") || (window != top)) document.write('<dt><b>SAS program</b></dt><dd>'+
    'a sequence of related SAS statements. </dd>');
</SCRIPT>
<p>


<SCRIPT>
if ((glossaryTerm=="sassession") || (window != top)) document.write('<dt><b>SAS session</b></dt><dd>'+
    'the activity between invoking and exiting a specific SAS software product. </dd>');
</SCRIPT>
<p>

<SCRIPT>
if ((glossaryTerm=="SASstatement") || (window != top)) document.write('<dt><b>SAS statement</b></dt><dd>'+
'a string of SAS keywords, SAS names, and special characters and operators that instructs SAS to perform an operation or that gives information to SAS. Each SAS statement ends with a semicolon.</dd>');
</SCRIPT>
<p>


<SCRIPT>
if ((glossaryTerm=="sysops") || (window != top)) document.write('<dt><b>SAS system option</b></dt><dd>'+
'an option that affects the processing of an entire SAS program or interactive SAS session from the time the option is specified until it is changed. Examples of items that are controlled by SAS system options include the appearance of SAS output, the handling of some files that are used by SAS, the use of system variables, the processing of observations in SAS data sets, features of SAS initialization, and the way SAS interacts with your host operating environment.</dd>');
</SCRIPT>
<p>

<SCRIPT>
if ((glossaryTerm=="SAStimeconst") || (window != top)) document.write('<dt><b>SAS time constant</b></dt><dd>'+
"a string in the form '<em>hh:mm:ss</em>'t that represents a time in a SAS statement. The string is enclosed in quotation marks and is followed by the character t (for example, '09:53:22't).</dd>");
</SCRIPT>
<p>

<SCRIPT>
if ((glossaryTerm=="SAStimevalue") || (window != top)) document.write('<dt><b>SAS time value</b></dt><dd>'+
'an integer that represents a time in SAS. The integer represents the number of seconds between midnight of the current day and another specified time value. (For example, the SAS time value for 9:30 a.m. is 34200.) </dd>');
</SCRIPT>
<p>


<SCRIPT>
if ((glossaryTerm=="saswind") || (window != top)) document.write('<dt><b>SAS windowing environment</b></dt><dd>'+
'an interactive windowing interface to SAS software. In this environment you can issue commands by typing them on the command line, by pressing function keys, or by selecting items from menus or menu bars. Within one session, you can perform many different tasks, including preparing and submitting programs, viewing and printing results, and debugging and resubmitting programs.</dd>');
</SCRIPT>
<p>

<SCRIPT>
if ((glossaryTerm=="sasaccess") || (window != top)) document.write('<dt><b>SAS/ACCESS software</b></dt><dd>'+
'a group of software interfaces, each of which makes data from a particular external database management system (DBMS) directly available to SAS, as well as making SAS data directly available to the DBMS.</dd>');
</SCRIPT>
<p>

<SCRIPT>
if ((glossaryTerm=="activex") || (window != top)) document.write('<dt><b>SAS/GRAPH control for ActiveX</b></dt><dd>'+
"a control that enables you to embed interactive 'live' graphs in Web pages and in OLE documents, as well as in applications that were written in Visual Basic, C++, HTML, and JavaScript. 'Live' means that once the graph is displayed, you can point and click to rotate, change, or further investigate the graph. You can use this control to create bar charts, pie charts, area plots, box-and-whisker plots, bubble plots, contour plots, high-low plots, line plots, regression plots, scatter plots, standard deviation plots, surface plots, and maps. In order to view these graphs on the Web, you need an ActiveX- enabled browser such as Internet Explorer version 4.0 or later.</dd>");
</SCRIPT>
<p>

<SCRIPT>
if ((glossaryTerm=="Sashelplib") || (window != top)) document.write('<dt><b>Sashelp library</b></dt><dd>'+
'a SAS library supplied by SAS software that stores the text for Help windows, default function-key definitions and window definitions, and menus.</dd>');
</SCRIPT>
<p>


<SCRIPT>
if ((glossaryTerm=="sasuser") || (window != top)) document.write('<dt><b>Sasuser library</b></dt><dd>'+
'a default, permanent SAS library that is created at the beginning of your first SAS session. The <strong>Sasuser</strong> library contains a <strong>Profile</strong> catalog that stores the customized features or settings that you specify for SAS. You can also store other SAS files in this library.</dd>');
</SCRIPT>
<p>

<SCRIPT>
if ((glossaryTerm=="selectionfield") || (window != top)) document.write('<dt><b>selection field</b></dt><dd>'+
'the portion of a window (shown on the display as an underscore) on which you can enter a short command to perform an action, such as B for browse.</dd>');
</SCRIPT>
<p>

<SCRIPT>
if ((glossaryTerm=="selectfldcomm") || (window != top)) document.write('<dt><b>selection field command</b></dt><dd>'+
'a command that enables you to perform actions from a selection field in a SAS windowing environment. For example, entering D in the selection field beside the name of a SAS data set in the DIRECTORY window enables you to delete that SAS data set.</dd>');
</SCRIPT>
<p>

<SCRIPT>
if ((glossaryTerm=="simpleindex") || (window != top)) document.write('<dt><b>simple index</b></dt><dd>'+
'an index that uses the values of only one variable to locate observations. See also composite index, index.</dd>');
</SCRIPT>
<p>

<SCRIPT>
if ((glossaryTerm=="SOURCEentry") || (window != top)) document.write('<dt><b>SOURCE entry</b></dt><dd>'+
'a type of catalog entry that contains text from SAS text editor windows.</dd>');
</SCRIPT>
<p>

<SCRIPT>
if ((glossaryTerm=="SQL") || (window != top)) document.write('<dt><b>SQL (Structured Query Language)</b></dt><dd>'+
'a standardized, high-level query language that is used in relational database management systems to create and manipulate database management system objects. SAS implements SQL through the SQL procedure.</dd>');
</SCRIPT>
<p>

<SCRIPT>
if ((glossaryTerm=="standarddata") || (window != top)) document.write('<dt><b>standard data</b></dt><dd>'+
'data in which each digit or character occupies one byte of storage.</dd>');
</SCRIPT>
<p>

<SCRIPT>
if ((glossaryTerm=="statementopt") || (window != top)) document.write('<dt><b>statement option</b></dt><dd>'+
'a word that you specify in a particular SAS statement and which affects only the processing that that statement performs.</dd>');
</SCRIPT>
<p>

<SCRIPT>
if ((glossaryTerm=="subquery") || (window != top)) document.write('<dt><b>subquery</b></dt><dd>'+
'a query-expression that is nested as part of another query-expression. Depending on the clause that contains it, a subquery can return a single value or multiple values.</dd>');
</SCRIPT>
<p>

<SCRIPT>
if ((glossaryTerm=="syntaxcheck") || (window != top)) document.write('<dt><b>syntax checking</b></dt><dd>'+
'the process by which SAS checks each SAS statement for proper usage, correct spelling, proper SAS naming conventions, and so on.</dd>');
</SCRIPT>
<p>

<SCRIPT>
if ((glossaryTerm=="syntaxerror") || (window != top)) document.write('<dt><b>syntax error</b></dt><dd>'+
'an error in the spelling or grammar of a SAS statement. SAS finds syntax errors as it compiles each SAS step before execution.</dd>');
</SCRIPT>
<p>

<SCRIPT>
if ((glossaryTerm=="systemopt") || (window != top)) document.write('<dt><b>system option</b></dt><dd>'+
'See SAS system option.</dd>');
</SCRIPT>
<p>

<SCRIPT>
if ((glossaryTerm=="systematicsample") || (window != top)) document.write('<dt><b>systematic sample</b></dt><dd>'+
'a sample that contains observations that are chosen from the original data set at regular intervals. For example, a systematic sample could contain every hundredth observation of a very large data set.</dd>');
</SCRIPT>
<p>

<a name="T"></a>

<SCRIPT>
if ((glossaryTerm=="tablealias") || (window != top)) document.write('<dt><b>table alias</b></dt><dd>'+
'a temporary, alternate name for a table that is specified in a FROM clause. Table aliases are optionally used to qualify column names when tables are joined.</dd>');
</SCRIPT>
<p>

<SCRIPT>
if ((glossaryTerm=="targetvar") || (window != top)) document.write('<dt><b>target variable</b></dt><dd>'+
'the variable to which the result of a function or expression is assigned.</dd>');
</SCRIPT>
<p>

<SCRIPT>
if ((glossaryTerm=="taskbar") || (window != top)) document.write('<dt><b>taskbar</b></dt><dd>'+
'the bar at the bottom of the Windows desktop that displays active applications. The taskbar enables you to easily switch between applications and to restore, move, size, minimize, maximize, and close applications.</dd>');
</SCRIPT>
<p>

<SCRIPT>
if ((glossaryTerm=="tempSASdatalib") || (window != top)) document.write('<dt><b>temporary SAS library</b></dt><dd>'+
'a library that exists only for the current SAS session or job. The most common temporary library is the <strong>Work</strong> library. See also Work data library.</dd>');
</SCRIPT>
<p>

<SCRIPT>
if ((glossaryTerm=="tempSASfile") || (window != top)) document.write('<dt><b>temporary SAS file</b></dt><dd>'+
'a SAS file in a SAS library (usually the Work data library) that is deleted at the end of the SAS session or job.</dd>');
</SCRIPT>
<p>

<SCRIPT>
if ((glossaryTerm=="textedcommand") || (window != top)) document.write('<dt><b>text-editing command</b></dt><dd>'+
'a command that is used with a particular text editor.</dd>');
</SCRIPT>
<p>



<SCRIPT>
if ((glossaryTerm=="title") || (window != top)) document.write('<dt><b>title</b></dt><dd>'+
'a heading that is printed at the top of each page of SAS output or of the SAS log.</dd>');
</SCRIPT>
<p>

<SCRIPT>
if ((glossaryTerm=="toggle") || (window != top)) document.write('<dt><b>toggle</b></dt><dd>'+
'an option, parameter, or other mechanism that enables you to turn on or turn off a processing feature. </dd>');
</SCRIPT>
<p>

<SCRIPT>
if ((glossaryTerm=="trailatsign") || (window != top)) document.write('<dt><b>trailing at sign (@)</b></dt><dd>'+
'a special symbol that is used to hold a line of input or output so that SAS can read from it or write to it in a subsequent INPUT or PUT statement.</dd>');
</SCRIPT>
<p>

<SCRIPT>
if ((glossaryTerm=="transactionds") || (window != top)) document.write('<dt><b>transaction data set</b></dt><dd>'+
'in an update operation, the data set that contains the information that is needed in order to update the master data set. See also master data set.</dd>');
</SCRIPT>
<p>

<SCRIPT>
if ((glossaryTerm=="typevar") || (window != top)) document.write('<dt><b>type, variable</b></dt><dd>'+
'See variable type.</dd>');
</SCRIPT>
<p>
  
<a name="U"></a>

<SCRIPT>
if ((glossaryTerm=="userform") || (window != top)) document.write('<dt><b>user-defined format</b></dt><dd>'+
   'See format. </dd>');
</SCRIPT>
<p>

<a name="V"></a>

<SCRIPT>
if ((glossaryTerm=="variable") || (window != top)) document.write('<dt><b>variable</b></dt><dd>'+
'a column in a SAS data set or in a SAS data view. The data values for each variable describe a single characteristic for all observations. Each SAS variable can have the following attributes: name, data type (character or numeric), length, format, informat, and label.</dd>');
</SCRIPT>
<p>

<SCRIPT>
if ((glossaryTerm=="varattr") || (window != top)) document.write('<dt><b>variable attributes</b></dt><dd>'+
'the name, label, format, informat, data type, and length that are associated with a particular variable.</dd>');
</SCRIPT>
<p>

<SCRIPT>
if ((glossaryTerm=="varlist") || (window != top)) document.write('<dt><b>variable list</b></dt><dd>'+
'a list of variables. You can use abbreviated variable lists in many SAS statements instead of listing all the variable names.</dd>');
</SCRIPT>
<p>

<SCRIPT>
if ((glossaryTerm=="vartype") || (window != top)) document.write('<dt><b>variable type</b></dt><dd>'+
'the classification of a variable as either numeric or character. Type is an attribute of SAS variables. </dd>');
</SCRIPT>
<p>

<SCRIPT>
if ((glossaryTerm=="view") || (window != top)) document.write('<dt><b>view</b></dt><dd>'+
'See SAS data view.</dd>');
</SCRIPT>
<p>

<a name="W"></a>
 
<SCRIPT>
if ((glossaryTerm=="windenv") || (window != top)) document.write('<dt><b>windowing environment</b></dt><dd>'+
'See SAS windowing environment.</dd>');
</SCRIPT>
<p>
 
 <SCRIPT>
if ((glossaryTerm=="worklib") || (window != top)) document.write('<dt><b>Work library</b></dt><dd>'+
'a SAS library that is automatically defined by SAS at the beginning of each SAS session or SAS job. The <strong>Work</strong> library contains SAS files that are temporary by default. When the libref <strong>User</strong> is not defined, SAS uses <strong>Work</strong> as the default library for SAS files that are created with one-level names.</dd>');
</SCRIPT>
<p>
 
</dl>

</body>                                                                     
</html>