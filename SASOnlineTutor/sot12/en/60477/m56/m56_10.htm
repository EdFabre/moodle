<html><!-- InstanceBegin template="/Templates/informationObject.dwt" codeOutsideHTMLIsLocked="false" -->
<head>
<SCRIPT LANGUAGE="JavaScript" SRC="../tut.js"></SCRIPT>
<script language="JavaScript" src="../nav.js"></script>
<SCRIPT LANGUAGE="JavaScript">
 setPageTitle();
 setCookie();
  
// Drop down menu link- © Dynamic Drive (www.dynamicdrive.com)
// For full source code and 100's more DHTML scripts, visit http://www.dynamicdrive.com
// Credit MUST stay intact for use -->

</SCRIPT>

<!-- InstanceBeginEditable name="extrascript" -->
<SCRIPT LANGUAGE="JavaScript">
</SCRIPT>
<!-- InstanceEndEditable -->

<link rel="stylesheet" href="../tut.css">


<META http-equiv="Content-Type" content="text/html; charset=windows-1252">
</HEAD>

<body marginheight="0" marginwidth="0" topmargin="0" leftmargin="0" rightmargin="0" bgcolor="#FFFFF0">
<script>writeinformationObjectTopNav1();</script>
	  
	  <font color="#003399" size="3" face="Arial, Helvetica, sans-serif"><strong><!-- InstanceBeginEditable name="TopicTitle" -->Combining 
      Data with the DATA Step Match-Merge<!-- InstanceEndEditable --></strong></font> <!-- InstanceBeginEditable name="continued" --><!-- InstanceEndEditable -->
	  
<script>writeinformationObjectTopNav2();</script>
<br>
<center>
  <!-- InstanceBeginEditable name="content" --> 
  <table width="85%" border="0" cellpadding="0" cellspacing="0">
    <tr valign="top"> 
      <td> <h2>The DATA Step Match-Merge</h2>
	    <p>You should already know how to <a href="JavaScript: openOther('../linklib/merge.htm')">merge 
          multiple data sets</a> in the DATA step when there is a <strong>BY variable</strong> 
          that is common to each of the input data sets. When you use the MERGE 
          statement to perform a table lookup operation, your lookup values must 
          be stored in one or more SAS data sets. Also, this technique requires 
          that both the base table and the lookup table(s) be either sorted by 
          or indexed on the BY variable(s).</p>
        <p>You can specify any number of input data sets in the MERGE statement 
          as long as all input data sets have a common BY variable. Also, the 
          MERGE statement can combine data sets of any size. The MERGE statement 
          is capable of returning multiple values, and you can use multiple BY 
          variables to perform lookups that are dependent on more than one variable. 
          The MERGE statement returns both matches and non-matches by default, 
          but you can use DATA step syntax to return only exact matches or to 
          include only specific values from the lookup table.</p>
		    <P><BR><table border="0" cellpadding="2" cellspacing="0">
          <tr> 
            <td valign="top" width="24"><img src="../navimages/alert.gif" width="37" height="32" alt="Caution"></td>
            <td valign="top">Although you can use the MERGE statement to combine 
              data from sources that have any type of relationship, this technique 
              might <strong>not</strong> produce the desired results when you 
              are working with a many-to-many match. When the data sets are merged 
              in a DATA step, the observations are matched and combined sequentially. 
              Once an observation is read, it is never re-read. That is, the DATA 
              step MERGE statement does not create a Cartesian product. Therefore, 
              the DATA step MERGE statement is probably not an appropriate technique 
              to use for performing lookup operations when you are working with 
              a many-to-many match.</td>
          </tr>
        </table>
       <p><br>
		   
        <h2> Working with Multiple Lookup Tables</h2>
        <p>Sometimes you might need to combine data from three or more related 
          SAS data sets in order to create one new data set. For example, the 
          three data sets listed below all contain different information that 
          relates to a fictional airline's flights and airports. <strong>Sasuser.Acities</strong> 
          contains data about various airports, <strong>Sasuser.Revenue</strong> 
          contains data about the revenue generated by various flights, and <strong>Sasuser.Expenses</strong> 
          contains data about the expenses incurred by various flights. The variables 
          in each of these data sets are listed here.</p></td>
    </tr></table><P><BR>
  <table border="0" cellspacing="0" cellpadding="5"  title="Data Set Description">
    <!--DWLayoutTable-->
    <tr> 
      <td valign="top"> 
<table  border="1" cellspacing=0 cellpadding=3 frame=BOX bgcolor="#FFFFFF">
          <!--DWLayoutTable-->
          
            <tr> 
              <td height="24" align=CENTER bgcolor="#F7F7DE"><font  face="Verdana, Arial, Helvetica"  color="#000000"><b>Sasuser.Acities<br>Variables </b></font></td>
               </tr>
          
          <tbody>
            <tr> 
              <td height="24" align=LEFT bgcolor="#FFFFFF"><p><font  face="Verdana, Arial, Helvetica" size="2" color="#000000">City<br>
                  Code<br>
                  Country<br>
                  Name </font></p>
                </td>
              
            </tr>
            
           
			              
           </tbody>
        </table>
</td><td>&nbsp;&nbsp;&nbsp;</td>
     <td valign="top"><table  border="1" cellspacing=0 cellpadding=3 frame=BOX bgcolor="#FFFFFF">
          <!--DWLayoutTable-->
          <thead>
            <tr> 
              <td height="24" align=CENTER bgcolor="#F7F7DE"><font  face="Verdana, Arial, Helvetica" size="2" color="#000000"><b>Sasuser.Revenue<br>
                Variables </b></font></td>
              
            </tr>
          </thead>
          <tbody>
            <tr> 
              <td height="24" align=LEFT bgcolor="#FFFFFF"><font  face="Verdana, Arial, Helvetica" size="2" color="#000000">Date<br>
                Dest<br>
                FlightID<br>
                Origin<br>
                RevBusiness<br>
                RevEcon<br>
                Rev1st </font></td>
              
            </tr>
            
			               
           </tbody>
        </table></td><td>&nbsp;&nbsp;&nbsp;</td>
		<td valign="top"><table  border="1" cellspacing=0 cellpadding=3 frame=BOX bgcolor="#FFFFFF">
          <!--DWLayoutTable-->
          <thead>
            <tr> 
              <td height="24" align=CENTER bgcolor="#F7F7DE"><font  face="Verdana, Arial, Helvetica" size="2" color="#000000"><b>Sasuser.Expenses<br>
                Variables</b></font></td>
              
            </tr>
          </thead>
          <tbody>
            <tr> 
              <td height="24" align=LEFT bgcolor="#FFFFFF"><font  face="Verdana, Arial, Helvetica" size="2" color="#000000">Date<br>
                FlightID<br>
                Expenses </font></td>
              
            </tr>
            
           </tbody>
        </table></td>
    </tr>
  </table>
		
		  <P><BR>
		  <table width="85%" border="0" cellpadding="0" cellspacing="0"><tr>
      <td> Suppose you want to create a new data set, named <strong>Sasuser.Alldata</strong>, 
        that contains data from each of these three input data sets. As shown 
        below, the <strong>Sasuser.Alldata</strong> data set contains the variable 
        <code>Profit,</code> which is calculated from the revenue values that 
        are stored in <strong>Sasuser.Revenue</strong> and the expense values 
        that are stored in <strong>Sasuser.Expenses</strong>.</td>
    </tr></table>
		  <P><BR><table  border="1" cellspacing=0 cellpadding=3 frame=BOX bgcolor="#FFFFFF" title="Data Set Description">
          <!--DWLayoutTable-->
          <thead>
            <tr> 
              
        <td height="24" align=CENTER bgcolor="#F7F7DE"><font  face="Verdana, Arial, Helvetica" size="2" color="#000000"><b>Sasuser.AllData<br>
          Variables </b></font></td>
            </tr>
          </thead>
          <tbody>
            <tr> 
              
        <td height="24" align=LEFT bgcolor="#FFFFFF"><p><font  face="Verdana, Arial, Helvetica" size="2" color="#000000">Date<br>
            Dest<br>
            FlightID</font><br>
            Origin<br>
            Profit<br>
            DestAirport<br>
            DestCity </p>
          </td>
            </tr>
         
		
                      </tbody>
        </table><P><BR>
		  <table width="85%" border="0" cellpadding="0" cellspacing="0"><tr>
      <td> <p>You know that you can specify any number of input data sets in the 
          MERGE statement as long as all input data sets have a common BY variable. 
          However, you can see from the data set variable lists above that these 
          three data sets do not have one common variable. Let's look at a method 
          for performing a match-merge on these three data sets. </td>
    </tr>
  </table>
  <p> <BR>
  


  
  <!-- InstanceEndEditable --> 
</center>
<script>writeNav_regular_bottom();</script>
</body>
<!-- InstanceEnd --></html>
