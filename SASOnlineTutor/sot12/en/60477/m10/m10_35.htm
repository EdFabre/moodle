<html><!-- InstanceBegin template="/Templates/summary.dwt" codeOutsideHTMLIsLocked="false" -->
<head>

<SCRIPT LANGUAGE="JavaScript" SRC="../tut.js"></SCRIPT>
<script language="JavaScript1.2" src="../nav.js"></script>


<SCRIPT LANGUAGE="JavaScript">
 setPageTitle();
 setCookie();
 
// Drop down menu link- © Dynamic Drive (www.dynamicdrive.com)
// For full source code and 100's more DHTML scripts, visit http://www.dynamicdrive.com
// Credit MUST stay intact for use -->

</SCRIPT>

<!-- InstanceBeginEditable name="extrascript" --> 
<SCRIPT LANGUAGE="JavaScript">
</SCRIPT>
<!-- InstanceEndEditable -->

<link rel="stylesheet" href="../tut.css">

<META http-equiv="Content-Type" content="text/html; charset=windows-1252">
</HEAD>

<body marginheight="0" marginwidth="0" topmargin="0" leftmargin="0" rightmargin="0" bgcolor="#FFFFF0">
<script>writeinformationObjectTopNav1();</script>
 
      <font color="#003399" size="3" face="Arial, Helvetica, sans-serif"><strong><script>document.write(summaryTitle)</script></strong></font>
 
 
<script>writeinformationObjectTopNav2();</script>
<br>
<center><TABLE cellpadding=0 cellspacing=0 border=0 width="85%" align="center">
  <TR>
      <TD align="left">
      
      <p><script>document.write(summaryPageContains)</script></p>
     <ul><!-- InstanceBeginEditable name="links" --> 
        <LI> <A HREF="#Text" onMouseOver="window.status='Go to the text summary section.'; "
		onMouseOut="window.status=''">a text summary of the material taught in 
          the lesson</A> 
        <LI> <A HREF="#Syntax" onMouseOver="window.status='Go to the syntax section.'; "
		onMouseOut="window.status=''">syntax for&nbsp;statements and options</A> 
          <LI> <A HREF="#Sample" onMouseOver="window.status='Go to the sample program section.'; "
		onMouseOut="window.status=''">sample programs</A> 
          <LI> <A HREF="#Points" onMouseOver="window.status='Go to the points to remember section.'; "
		onMouseOut="window.status=''">points to remember</A>. 
        <!-- InstanceEndEditable --></ul>
<P>
	  <HR>
      </TD>
    </TR>
  </TABLE>
  <P>

<!-- InstanceBeginEditable name="textsummaryintro" -->     
<TABLE cellpadding=0 cellspacing=0 border=0 width="85%" align="center">
  <TR>
	<TD align="left"><h2><STRONG><A NAME="Text"><script>document.write(summaryPageTextSummaryTitle);</script></A></STRONG> </h2>
      <P>
	  <EM><script>document.write(summaryPageDirections);</script></EM></TD>
      </TR>
    </TABLE>
<!-- InstanceEndEditable -->
  <br>
<!-- InstanceBeginEditable name="textsummary" -->
<p> 
<center>
  <table cellpadding=0 cellspacing=0 border=0 width="85%">
    <tr> 
      <td align="left"><p><strong>PROC SQL Basics</strong><br>
            PROC SQL uses statements that are written in Structured Query Language 
            (SQL), which is a standardized language that is widely used to retrieve 
            and update data in tables and in views that are based on those tables. 
            When you want to examine relationships between data values, to subset 
            your data, or to compute values, <a href="m10_2.htm" onClick="suggestBack()" onMouseOver="window.status='Display details on the PROC SQL statement.'; "
		onMouseOut="window.status=''">the SQL procedure</a> provides an easy, 
            flexible way to analyze your data.</p>
          <p>PROC SQL <a href="m10_3.htm" onClick="suggestBack()" onMouseOver="window.status='Display details on unique features of PROC SQL.'; "
		onMouseOut="window.status=''">differs</a> from most other SAS procedures in several ways:</p>
          <ul>
            <li> Many statements in PROC SQL, such as the SELECT statement, are 
              composed of clauses. <br>
              <br>
            <li> The PROC SQL step does not require a RUN statement. <br>
              <br>
            <li> PROC SQL continues to run after you submit a step. To end the 
              procedure, you must submit another PROC step, a DATA step, or a 
              QUIT statement. </ul></td>
    </tr>
  </table>
  <table cellpadding=0 cellspacing=0 border=0 width="85%">
    <tr> 
        <td align="left"><strong> Writing a PROC SQL Step</strong><br>
        Before creating a query, you must assign a libref to the SAS data library 
        in which the table to be used is stored. Then you submit a PROC SQL step. 
        You use the <a href="m10_5.htm" onClick="suggestBack()" onMouseOver="window.status='Display details on the PROC SQL statement.'; "
		onMouseOut="window.status=''">PROC SQL statement</a> to invoke the SQL 
        procedure.</td>
    </tr>
  </table>
    <table cellpadding=0 cellspacing=0 border=0 width="85%">
      <tr> 
        <td align="left"><strong><br>
          Selecting Columns</strong><br>
          To specify which column(s) to display in a query, you write a <a href="m10_7.htm" onClick="suggestBack()" onMouseOver="window.status='Display details on the SELECT clause.'; "
		  onMouseOut="window.status=''">SELECT</a> clause as the first clause 
          in the SELECT statement. In the SELECT clause, you can specify existing 
          columns and create new columns that contain either text or a calculation.</td>
      </tr>
    </table>
    <table cellpadding=0 cellspacing=0 border=0 width="85%">
      <tr> 
        <td align="left"><strong><br>
          Specifying the Table</strong><br>
          You specify the table to be queried in the <a href="m10_10.htm" onClick="suggestBack()" onMouseOver="window.status='Display details on the FROM clause.'; "
		  onMouseOut="window.status=''">FROM</a> clause. </td>
      </tr>
    </table>
    <table cellpadding=0 cellspacing=0 border=0 width="85%">
      <tr> 
        <td align="left"><strong><br>
          Specifying Subsetting Criteria </strong><br>
          To subset data based on a condition, write a <a href="m10_12.htm" onClick="suggestBack()" onMouseOver="window.status='Display details on the WHERE clause.'; "
		  onMouseOut="window.status=''">WHERE</a> clause that contains 
          an expression. </td>
      </tr>
    </table>
    <table cellpadding=0 cellspacing=0 border=0 width="85%">
      <tr> 
        <td align="left"><strong><br>
          Ordering Rows </strong><br>
          The order of rows in the output of a PROC SQL query cannot be guaranteed, 
          unless you specify a sort order. To sort rows by the values of specific 
          columns, use the <a href="m10_14.htm" onClick="suggestBack()" onMouseOver="window.status='Display details on the ORDER BY clause.'; "
		  onMouseOut="window.status=''">ORDER BY</a> clause.</td>
      </tr>
    </table>
    <table cellpadding=0 cellspacing=0 border=0 width="85%">
    <tr> 
        <td align="left"><strong> <br>
          Querying Multiple Tables</strong><br>
          You can use a PROC SQL step to <a href="m10_19.htm" onClick="suggestBack()" onMouseOver="window.status='Display details on querying multiple tables.'; "
	      onMouseOut="window.status=''">query data that is stored in two or more 
          tables</a>. In SQL terminology, this is called <strong>joining</strong> 
          tables. Follow these steps to join multiple tables: 
          <ol>
            <li> Specify column names from one or both tables in the <a href="m10_20.htm" onClick="suggestBack()" onMouseOver="window.status='Display details on specifying columns that appear in multiple tables.'; "
		  onMouseOut="window.status=''">SELECT</a> clause and, if you are selecting 
              a column that has the same name in multiple tables, prefix the table 
              name to that column name. <br>
              <br>
            <li> Specify each table name in the <a href="m10_22.htm" onClick="suggestBack()" onMouseOver="window.status='Display details on specifying multiple table names.'; "
		  onMouseOut="window.status=''">FROM</a> clause. <br>
              <br>
            <li> Use the <a href="m10_24.htm" onClick="suggestBack()" onMouseOver="window.status='Display details on selecting rows from multiple tables.'; "
		  onMouseOut="window.status=''">WHERE</a> clause to select rows from two 
              or more tables, based on a condition. <br>
              <br>
            <li> Use the <a href="m10_25.htm" onClick="suggestBack()" onMouseOver="window.status='Display details on sorting rows from multiple tables.'; "
		  onMouseOut="window.status=''">ORDER BY</a> clause to sort rows that 
              are retrieved from two or more tables by the values of the selected 
              column(s). </ol>
      </td>
    </tr>
  </table>
  <table cellpadding=0 cellspacing=0 border=0 width="85%">
    <tr> 
      <td align="left"><strong> Summarizing Groups of Data </strong><br>
        You can use a GROUP BY clause in your PROC SQL step to <a href="m10_28.htm" onClick="suggestBack()" onMouseOver="window.status='Display details on summarizing groups of data.'; "
	      onMouseOut="window.status=''">summarize data in groups</a>. The GROUP 
        BY clause is used in queries that include one or more summary functions. 
        Summary functions produce a statistical summary for each group that is 
        defined in the GROUP BY clause. </td>
    </tr>
  </table>
  <table cellpadding=0 cellspacing=0 border=0 width="85%">
    <tr> 
      <td align="left"><strong><br>
          Creating Output Tables</strong><br>
          To create a new table from the results of your query, you can use the 
          <a href="m10_32.htm" onClick="suggestBack()" onMouseOver="window.status='Display details on the CREATE TABLE statement.'; "
	      onMouseOut="window.status=''">CREATE TABLE</a> statement in your PROC 
          SQL step. This statement enables you to store your results in a table 
          instead of displaying the query results as a report. </td>
    </tr>
  </table>
</center>
<center>
  <table cellpadding=0 cellspacing=0 border=0 width="85%">
    <tr> 
      <td align="left"><strong><br>
          Additional Features</strong><br>
          To further refine a PROC SQL query that contains a GROUP BY clause, 
          you can use a <a href="m10_34.htm" onClick="suggestBack()" onMouseOver="window.status='Display details on the HAVING clause.'; "
		  onMouseOut="window.status=''">HAVING</a> clause. A HAVING clause works 
          with the GROUP BY clause to restrict the groups that are displayed in 
          the output, based on one or more specified conditions.</td>
    </tr>
  </table>
</center>
<!-- InstanceEndEditable --> <br>
<table cellpadding=0 cellspacing=0 border=0 width="85%" align="center">
  <tr> 
    <td align="left"> 
      <hr>
    </td>
  </tr>
</table>

<P><!-- InstanceBeginEditable name="syntax" --> 
<center>
  <TABLE cellpadding=0 cellspacing=0 border=0 width="85%">
    <TR> 
      <TD><STRONG><A NAME="Syntax">Syntax</A></STRONG> 
        <P> <EM>To go to the page where a statement or option was presented, select 
          a link.</EM> 
      </TD>
    </TR>
  </TABLE>
  <br>
</center>
<P align="center"> 
  <table cellpadding="2" align="center">
    <tr> 
      <td><font color="#003399"><strong>LIBNAME</strong> <em>libref</em> &nbsp;'<em>SAS-data-library</em>';</font></td>
    </tr>
    <tr> 
      <td><font color="#003399"><a href="m10_5.htm" onClick="suggestBack()" onMouseOver="window.status='Display details on the PROC SQL statement.'; "
		onMouseOut="window.status=''"><strong>PROC SQL;</strong></a></font></td>
    </tr>
    <tr> 
      <td>&nbsp; &nbsp; &nbsp; &nbsp; <font color="#003399"><a href="m10_32.htm" onClick="suggestBack()" onMouseOver="window.status='Display details on the SELECT clause.'; "
		onMouseOut="window.status=''" ><strong>CREATE TABLE</strong> <em>table-name</em> 
        <strong>AS</strong> </a>&nbsp; &nbsp;</font></td>
    </tr>
    <tr> 
      <td>&nbsp; &nbsp; &nbsp; &nbsp; <font color="#003399"><a href="m10_7.htm" onClick="suggestBack()" onMouseOver="window.status='Display details on the SELECT clause.'; "
		onMouseOut="window.status=''" ><strong>SELECT</strong> <em>column-1 &lt;, 
        . . . column-n&gt;</em></a></font></td>
    </tr>
    <tr> 
      <td><nobr>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp; &nbsp;&nbsp;&nbsp;&nbsp; 
        <font color="#003399"><a href="m10_10.htm" onClick="suggestBack()" onMouseOver="window.status='Display details on the FROM clause.'; "
		onMouseOut="window.status=''"><strong>FROM</strong> <em>table-1 | view-1 
        &lt;, . . . table-n | view-n&gt;</em></a></font></nobr></td>
    </tr>
    <tr> 
      <td>&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; &nbsp;<font color="#003399"><a href="m10_12.htm" onClick="suggestBack()" onMouseOver="window.status='Display details on the WHERE clause.'; "
		onMouseOut="window.status=''">&lt;<strong>WHERE</strong> <em>expression&gt;</em></a></font></td>
    </tr>
    <tr> 
      <td>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; <font color="#003399"><a href="m10_28.htm" onClick="suggestBack()" onMouseOver="window.status='Display details on the ORDER BY clause.'; "
		onMouseOut="window.status=''">&lt;<strong>GROUP BY</strong> <em>column-1 
        &lt;, . . . column-n&gt;&gt;</em></a></font></td>
    </tr>
    <tr> 
      <td>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;&nbsp;<font color="#003399"><a href="m10_14.htm" onClick="suggestBack()" onMouseOver="window.status='Display details on the ORDER BY clause.'; "
		onMouseOut="window.status=''">&lt;<strong>ORDER BY</strong> <em>column-1 
        &lt;, . . . column-n&gt;&gt;</em></a>;</font></td>
    </tr>
    <tr>
      <td height="26"><strong><font color="#003399">QUIT</font></strong><font color="#003399">;</font></td>
    </tr>
  </table>
<P align="center"> 
<center>
  <TABLE cellpadding=0 cellspacing=0 border=0 width="85%">
    <TR> 
      <TD align="left"> 
        <HR>
      </TD>
    </TR>
  </TABLE>
  <br>
</center>
<!-- InstanceEndEditable -->
<P> 
  <!-- InstanceBeginEditable name="sampleprogram" --> 
  <TABLE cellpadding=0 cellspacing=0 border=0 width="85%">
    <TR> 
      <TD align="left"><STRONG><A NAME="Sample">Sample Programs</A></STRONG> <blockquote> 
          <p><strong>Querying a Table</strong></p>
        </blockquote>
        <pre><font color="#003399">     proc sql;
        select empid,jobcode,salary,
               salary*.06 as bonus
           from sasuser.payrollmaster
           where salary&lt;32000
           order by jobcode;
     quit;</font></pre>
        <blockquote>
		<p><strong>Summarizing Groups of Data</strong></p>
		</blockquote>
		<pre><font color="#003399">     proc sql;
        select membertype,
               sum(milestraveled) as TotalMiles
           from sasuser.frequentflyers
           group by membertype;
     quit;</font></pre>
        <blockquote>		
          <p><strong>Creating a Table from the Results of a Query on Two Tables</strong></p>
        </blockquote>
        <pre><font color="#003399">     proc sql;
        create table work.miles as
           select salcomps.empid,lastname,
                  newsals.salary,newsalary
              from sasuser.salcomps,sasuser.newsals
              where salcomps.empid=newsals.empid
              order by 2;
<strong>     </strong>quit;</font></pre> <P> 
        <HR> </TD>
    </TR>
  </TABLE>
  <br>
  <!-- InstanceEndEditable --> 
<P>
  <!-- InstanceBeginEditable name="pointstoremember" --> 
  <TABLE cellpadding=0 cellspacing=0 border=0 width="85%">
    <TR> 
      <TD align="left"><STRONG><A NAME="Points">Points to Remember</A></STRONG> 
        <ul>
          <li> You do not use a RUN statement with the SQL procedure.<br>
            <br>
          <li> Do not end a clause with a semicolon unless it is the last clause 
            in the statement.<br>
            <br>
          <li> When you join multiple tables, be sure to specify columns that 
            have matching data values in the WHERE clause in order to avoid unwanted 
            combinations.<br>
            <br>
          <li> To end the SQL procedure, you can submit another PROC step, a DATA 
            step, or a QUIT statement.
        </ul>
        </TD>
    </TR>
  </TABLE>
  <!-- InstanceEndEditable --></center>
<script>writeNav_regular_bottom();</script>
</body>
<!-- InstanceEnd --></html>