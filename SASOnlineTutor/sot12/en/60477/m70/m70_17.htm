<html><!-- InstanceBegin template="/Templates/informationObject.dwt" codeOutsideHTMLIsLocked="false" -->
<head>
<SCRIPT LANGUAGE="JavaScript" SRC="../tut.js"></SCRIPT>
<script language="JavaScript" src="../nav.js"></script>
<SCRIPT LANGUAGE="JavaScript">
 setPageTitle();
 setCookie();
  
// Drop down menu link- © Dynamic Drive (www.dynamicdrive.com)
// For full source code and 100's more DHTML scripts, visit http://www.dynamicdrive.com
// Credit MUST stay intact for use -->

</SCRIPT>

<!-- InstanceBeginEditable name="extrascript" -->
<SCRIPT LANGUAGE="JavaScript">
</SCRIPT>
<!-- InstanceEndEditable -->

<link rel="stylesheet" href="../tut.css">


<META http-equiv="Content-Type" content="text/html; charset=windows-1252">
</HEAD>

<body marginheight="0" marginwidth="0" topmargin="0" leftmargin="0" rightmargin="0" bgcolor="#FFFFF0">
<script>writeinformationObjectTopNav1();</script>
	  
	  <font color="#003399" size="3" face="Arial, Helvetica, sans-serif"><strong><!-- InstanceBeginEditable name="TopicTitle" -->Subsetting 
      Rows by Using Calculated Values<!-- InstanceEndEditable --></strong></font> <!-- InstanceBeginEditable name="continued" --><!-- InstanceEndEditable -->
	  
<script>writeinformationObjectTopNav2();</script>
<br>
<center>
  <!-- InstanceBeginEditable name="content" --> 
  <table width="85%" border="0" align="center" cellpadding="0" cellspacing="0">
    <tr> 
      <td><h2>Understanding How PROC SQL Processes Calculated Columns</h2>
        <p>You should already know how to define a new column by using the SELECT 
          clause and performing a calculation. For example, the following PROC 
          SQL query creates the new column <code>Total</code> by adding the values 
          of three existing columns: <code>Boarded</code>, <code>Transferred</code>, 
          and <code>Nonrevenue</code>:</p></td>
    </tr>
  </table>
  <br>
  <table width="85%" border="0" align="center" cellpadding="0" cellspacing="0">
    <tr> 
      <td><pre>     <font color="#003399">proc sql outobs=10;
        select flightnumber, date, destination,
               <strong>boarded + transferred + nonrevenue
               as Total</strong>
           from sasuser.marchflights</font></pre></td>
    </tr>
  </table>
  <table width="85%" border="0" align="center" cellpadding="0" cellspacing="0">
    <tr> 
      <td><p>You can also use a calculated column in the WHERE clause to subset 
          rows. However, because of the way in which SQL queries are processed, 
          you cannot just specify the column alias in the WHERE clause. To see 
          what happens, let's take the preceding PROC SQL query and add a WHERE 
          clause in the SELECT statement to reference the calculated column <code>Total</code>, 
          as shown below:</p></td>
    </tr>
  </table>
  <br>
  <table width="85%" border="0" align="center" cellpadding="0" cellspacing="0">
    <tr> 
      <td> <pre>     <font color="#003399">proc sql outobs=10;
        select flightnumber, date, destination,
               boarded + transferred + nonrevenue
               as Total
           from sasuser.marchflights
        <strong>   where total &lt; 100;</strong></font></pre></td>
    </tr>
  </table>
  <table width="85%" border="0" align="center" cellpadding="0" cellspacing="0">
    <tr> 
      <td> When this query is executed, the following error message is displayed 
        in the SAS log.</td>
    </tr>
  </table>
  <br>
  <br>
  <div align="center">SAS Log<br>
    <table bgcolor="#F7F7DE" border="1" cellpadding="10" cellspacing="0" title="SAS Log">
      <tr> 
        <td> <pre>519  proc sql outobs=10;<br>520      select flightnumber, date, destination,<br>521             boarded + transferred + nonrevenue<br>522             as Total<br>523          from sasuser.marchflights<br>524          where total &lt; 100;<br><strong>ERROR: The following columns were not found in the 
contributing tables: total.</strong></pre></td>
      </tr>
    </table>
  </div>
  <p><br>
  <table width="85%" border="0" align="center" cellpadding="0" cellspacing="0">
    <tr> 
      <td>This error message is generated because, in SQL queries, the WHERE clause 
        is processed prior to the SELECT clause. The SQL processor looks in the 
        table for each column named in the WHERE clause. The table <strong>Sasuser.Marchflights</strong> 
        does not contain a column named <code>Total</code>, so SAS generates an 
        error message.</td>
    </tr>
  </table>
  <p><br>
  <!-- InstanceEndEditable --> 
</center>
<script>writeNav_regular_bottom();</script>
</body>
<!-- InstanceEnd --></html>
