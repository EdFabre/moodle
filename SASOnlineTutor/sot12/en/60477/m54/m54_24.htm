<html><!-- InstanceBegin template="/Templates/informationObject.dwt" codeOutsideHTMLIsLocked="false" -->
<head>
<SCRIPT LANGUAGE="JavaScript" SRC="../tut.js"></SCRIPT>
<script language="JavaScript" src="../nav.js"></script>
<SCRIPT LANGUAGE="JavaScript">
 setPageTitle();
 setCookie();
  
// Drop down menu link- © Dynamic Drive (www.dynamicdrive.com)
// For full source code and 100's more DHTML scripts, visit http://www.dynamicdrive.com
// Credit MUST stay intact for use -->

</SCRIPT>

<!-- InstanceBeginEditable name="extrascript" -->
<SCRIPT LANGUAGE="JavaScript">
</SCRIPT>
<!-- InstanceEndEditable -->

<link rel="stylesheet" href="../tut.css">


<META http-equiv="Content-Type" content="text/html; charset=windows-1252">
</HEAD>

<body marginheight="0" marginwidth="0" topmargin="0" leftmargin="0" rightmargin="0" bgcolor="#FFFFF0">
<script>writeinformationObjectTopNav1();</script>
	  
	  <font color="#003399" size="3" face="Arial, Helvetica, sans-serif"><strong><!-- InstanceBeginEditable name="TopicTitle" -->Managing 
      Indexes with PROC DATASETS<!-- InstanceEndEditable --></strong></font> <!-- InstanceBeginEditable name="continued" --><!-- InstanceEndEditable -->
	  
<script>writeinformationObjectTopNav2();</script>
<br>
<center>
  <!-- InstanceBeginEditable name="content" -->
<table width="85%" border="0" cellpadding="0" cellspacing="0" align="center">
  <tr valign="top"> 
    <td>
<p>You have seen how to create an index at the same time that you create a data 
          set. You can also create an index on an existing data set, or delete 
          an index from a data set. One way to accomplish either of these tasks 
          is to rebuild the data set. However, rebuilding the data set is not 
          the most efficient method for managing indexes.</p>
        <p>You can use the DATASETS procedure to manage indexes on an existing 
          data set. This uses fewer resources than it would to rebuild the data 
          set. You use the <strong>MODIFY statement</strong> with the <strong>INDEX 
          CREATE statement</strong> to create indexes on a data set. You use the 
          MODIFY statement with the <strong>INDEX DELETE statement</strong> to 
          delete indexes<strong> </strong>from a data set. You can also use the 
          INDEX CREATE statement and the INDEX DELETE statement in the same step.</p>
     
      </td>
  </tr>
</table>
<P><BR>
<table align="center" border="1" cellspacing="0" cellpadding="10" width="85%" bgcolor="#F7F7DE" title="General form, PROC DATASETS to create or delete an index">
            <tr> 
              
      <td align="left"><strong>General form, PROC DATASETS to create and delete 
        an index:</strong> 
        <blockquote> <dl><dt><font color="#003399"><strong>PROC DATASETS LIBRARY=</strong><em>libref</em><strong> &lt;<strong>NOLIST</strong>&gt;;</strong></font> </dt>
			  <dt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#003399"><strong>MODIFY</strong> <em>SAS-data-set-name</em><strong>;</strong></font></dt>
			  
            <dt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#003399"><strong>INDEX 
              DELETE</strong> <em>index-name</em><strong>;</strong></font></dt>
			  
            <dt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#003399"><strong>INDEX 
              CREATE</strong> <em>index-specification</em><strong>;</strong></font></dt>
			  
            <dt><font color="#003399"></font></dt>
			  <dt><font color="#003399"><strong>QUIT;</strong></font></dt></dl>
                
      </blockquote>
	  where
	    <ul>
          <li><font color="#003399"><em>libref</em></font> points to the SAS library 
            that contains <font color="#003399"><em>SAS-data-set-name</em></font> 
          <li>the <font color="#003399"><strong>NOLIST</strong></font> option 
            suppresses the printing of the directory of SAS files in the SAS log and as ODS output
          <li><font color="#003399"><em>index-name</em></font> is the name of 
            an existing index to be deleted 
          <li><font color="#003399"><em>index-specification</em></font> for a 
            simple index is the name of the key variable 
          <li><font color="#003399"><em>index-specification</em></font> for a 
            composite index is <em>index-name=(variable-1...variable-n)</em>. 
        </ul>
                </td>
            </tr>
          </table>
		  <P><BR>
		  <table width="85%" border="0" cellpadding="0" cellspacing="0" align="center">
  <tr valign="top"> 
    <td> <p>The INDEX CREATE statement in PROC DATASETS <strong>cannot </strong>be 
          used if the index to be created already exists. In this case, you must 
          delete the existing index of the same name, then create the new index.
<P><BR>
		<table border="0" cellpadding="2" cellspacing="0">
      <tr> 
        <td valign="top" width="24"><img src="../navimages/tip.gif" width="20" height="20" alt="More Information"></td>
            <td valign="top">PROC DATASETS executes statements in order. Therefore, 
              if you are deleting and creating indexes in the same step, you should 
              delete indexes first so that the newly created indexes can reuse 
              space of the deleted indexes. </td>
      </tr>
    </table>
      <P><BR>
      <h2>Example</h2>
        The following example creates an index named <strong>Origin</strong> 
          on the <strong>Sasuser.Sale2000</strong> data set. <strong>Origin</strong> 
          is a simple index that is based on the key variable <code>Origin</code>. 
        <font color="#003399">
        <pre>     proc datasets library=sasuser nolist;
        modify sale2000;
        index create origin;
     quit;</pre>
        </font> <P>The following example first deletes the <strong>Origin</strong> 
          index from the <strong>Sasuser.Sale2000</strong> data set, then creates 
          two new indexes on the <strong>Sasuser.Sale2000</strong> data set. <strong>FlightID</strong> 
          is a simple index that is based on the values of the key variable <code>FlightID</code>. 
          <strong>Fromto</strong> is a composite index that is based on the concatenated 
          values of the key variables <code>Origin</code> and <code>Dest</code>. 
        <font color="#003399">
        <pre>     proc datasets library=sasuser nolist;
        modify sale2000;
        index delete origin;
        index create flightid;
        index create Fromto=(origin dest);
     quit;</pre>
      </font>
    </td>
		  </tr>
		  </table>
		  
<!-- InstanceEndEditable --> 
</center>
<script>writeNav_regular_bottom();</script>
</body>
<!-- InstanceEnd --></html>
