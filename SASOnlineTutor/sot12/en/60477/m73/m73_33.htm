<html><!-- InstanceBegin template="/Templates/informationObject.dwt" codeOutsideHTMLIsLocked="false" -->
<head>
<SCRIPT LANGUAGE="JavaScript" SRC="../tut.js"></SCRIPT>
<script language="JavaScript" src="../nav.js"></script>
<SCRIPT LANGUAGE="JavaScript">
 setPageTitle();
 setCookie();
  
// Drop down menu link- © Dynamic Drive (www.dynamicdrive.com)
// For full source code and 100's more DHTML scripts, visit http://www.dynamicdrive.com
// Credit MUST stay intact for use -->

</SCRIPT>

<!-- InstanceBeginEditable name="extrascript" -->
<SCRIPT LANGUAGE="JavaScript">
</SCRIPT>
<!-- InstanceEndEditable -->

<link rel="stylesheet" href="../tut.css">


<META http-equiv="Content-Type" content="text/html; charset=windows-1252">
</HEAD>

<body marginheight="0" marginwidth="0" topmargin="0" leftmargin="0" rightmargin="0" bgcolor="#FFFFF0">
<script>writeinformationObjectTopNav1();</script>
	  
	  <font color="#003399" size="3" face="Arial, Helvetica, sans-serif"><strong><!-- InstanceBeginEditable name="TopicTitle" -->Handling 
      Errors in Row Insertions<!-- InstanceEndEditable --></strong></font> <!-- InstanceBeginEditable name="continued" --><font color="#003399" size="3" face="Arial, Helvetica, sans-serif">(continued)</font><!-- InstanceEndEditable -->
	  
<script>writeinformationObjectTopNav2();</script>
<br>
<center>
  <!-- InstanceBeginEditable name="content" --> 
  <table width="85%" border="0" cellpadding="0" cellspacing="0">
    <tr valign="top"> 
      <td> <p><strong>Example: Inserting Rows with UNDO_POLICY=NONE</strong></p>
        <p>In the last example, the INSERT step was used to insert two rows of 
          data into the table <strong>Work.Discount3</strong>, which has two integrity 
          constraints. Because the UNDO_POLICY= option was not specified in the 
          code, PROC SQL used the default policy, which is UNDO_POLICY=REQUIRED. 
          When PROC SQL encountered a value in the INSERT statement that violated 
          an integrity constraint, <strong>none</strong> of the new values specified 
          in the INSERT statement were added to the table.</p>
        <p>Now let's see what happens when we submit the same INSERT statement 
          and specify the option <strong>UNDO_POLICY=NONE</strong>.</p>
        <p>The following PROC SQL step creates the table <strong>Work.Discount4</strong>, 
          which has four columns and two integrity constraints, and inserts the 
          same two rows of data that were inserted in the earlier example. In 
          this case, however, the option <strong>UNDO_POLICY=NONE</strong> is 
          specified.<br>
        </p></td>
    </tr>
  </table>
  <br>
  <table cellpadding="0" cellspacing="0" border="0" width="85%">
    <tr> 
      <td> <pre><font color="#003399">     proc sql <strong>undo_policy=none</strong>;
        create table work.discount4 
               (Destination char(3),
               BeginDate num Format=date9.,
               EndDate num format=date9.,
               Discount num,
               constraint ok_discount check (discount le .5),
               constraint notnull_dest not null(destination));
        insert into work.discount4 
               values('CDG','03MAR2000'd,'10MAR2000'd,.15)
               values('LHR','10MAR2000'd,'12MAR2000'd,.55);</font></pre></td>
    </tr>
  </table>
  <table width="85%" border="0" cellpadding="0" cellspacing="0">
    <tr valign="top"> 
      <td> <p>As you know, one of the data values for the column <code>Discount</code> 
          violates the specified constraint. When this step is submitted, the 
          SAS log displays the following messages.</p></td>
    </tr>
  </table>
  <p><br>
    SAS Log<br>
  <table bgcolor="#F7F7DE" border="1" cellpadding="10" cellspacing="0" title="SAS Log">
    <tr> 
      <td height="61"> <pre><strong>WARNING:</strong> The SQL option UNDO_POLICY=REQUIRED is not in effect. 
If an error is detected when processing this INSERT statement,
that error will not cause the entire statement to fail.
<strong>ERROR:</strong> Add/Update failed for data set WORK.DISCOUNT4 because 
data value(s) do not comply with integrity constraint ok_discount.<br><strong>NOTE:</strong> This insert failed while attempting to add data from VALUES 
clause 2 to the data set.<br><strong>NOTE:</strong> 2 rows were inserted into WORK.DISCOUNT4 -- of these 1 row 
was rejected as an ERROR, leaving 1 row that was inserted 
successfully.<br></pre></td>
    </tr>
  </table>
  <br>
  <p> <br>
  <table cellpadding="0" cellspacing="0" border="0" width="85%">
    <tr> 
      <td><p>The four parts of this message explain what the problem is and how 
          PROC SQL will handle UNDO processing: </p>
        <ul>
          <li> The warning tells you that you have specified a setting for the 
            UNDO_POLICY= option that is different from the default (REQUIRED). 
            The warning also explains that, as a result, if an error is detected, 
            the error will <strong>not</strong> cause the entire INSERT statement 
            to fail.<br>
            <br>
          </li>
          <li> The error message was also displayed in the earlier example, when 
            the default setting of UNDO_POLICY= was in effect. This message states 
            that the INSERT statement failed and explains why.<br>
            <br>
          </li>
          <li> The first note was also displayed in the earlier example, when 
            the default setting of UNDO_POLICY= was in effect. This note identifies 
            the first VALUES clause that contains non-compliant data.<br>
            <br>
          </li>
          <li> The second note tells you that one row (the first row of the two 
            rows that you specified) was inserted successfully into the table.</li>
        </ul></td>
    </tr>
  </table>
  <p><!-- InstanceEndEditable --> 
</center>
<script>writeNav_regular_bottom();</script>
</body>
<!-- InstanceEnd --></html>
