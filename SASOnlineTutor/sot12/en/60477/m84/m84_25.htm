<html><!-- InstanceBegin template="/Templates/informationObject.dwt" codeOutsideHTMLIsLocked="false" -->
<head>
<SCRIPT LANGUAGE="JavaScript" SRC="../tut.js"></SCRIPT>
<script language="JavaScript" src="../nav.js"></script>
<SCRIPT LANGUAGE="JavaScript">
 setPageTitle();
 setCookie();
  
// Drop down menu link- © Dynamic Drive (www.dynamicdrive.com)
// For full source code and 100's more DHTML scripts, visit http://www.dynamicdrive.com
// Credit MUST stay intact for use -->

</SCRIPT>

<!-- InstanceBeginEditable name="extrascript" -->
<SCRIPT LANGUAGE="JavaScript">
</SCRIPT>
<!-- InstanceEndEditable -->

<link rel="stylesheet" href="../tut.css">


<META http-equiv="Content-Type" content="text/html; charset=windows-1252">
</HEAD>

<body marginheight="0" marginwidth="0" topmargin="0" leftmargin="0" rightmargin="0" bgcolor="#FFFFF0">
<script>writeinformationObjectTopNav1();</script>
	  
	  <font color="#003399" size="3" face="Arial, Helvetica, sans-serif"><strong><!-- InstanceBeginEditable name="TopicTitle" -->Handling 
      Large Data Sets<!-- InstanceEndEditable --></strong></font> <!-- InstanceBeginEditable name="continued" --><!-- InstanceEndEditable -->
	  
<script>writeinformationObjectTopNav2();</script>
<br>
<center>
  <!-- InstanceBeginEditable name="content" --> 
  <table width="85%" border="0" cellpadding="0" cellspacing="0">
    <tr valign="top"> 
      <td> <h2>Dividing a Large Data Set</h2>
        <p>A data set is too large to sort when there is insufficient room in 
          the data library for a second copy of the data set or when there is 
          insufficient disk space for three to four temporary copies of the data 
          set. </p>
        <p>One approach to this situation is to divide the large data set into 
          smaller data sets. The smaller data sets can then be sorted and combined 
          to re-create the large data set. This approach is similar to the process 
          that is used in a threaded sort. </p>
        <p>Techniques for dividing and sorting a large data set include</p>
        <ul>
          <li>using PROC SORT with the OUT= statement option and the FIRSTOBS= 
            and OBS= data set options</li>
          <li>using PROC SORT with a WHERE statement</li>
          <li>using subsetting with IF-THEN/ELSE or SELECT-WHEN logic to create 
            multiple output data sets, then sorting the output data sets.</li>
        </ul>
        <p>Techniques that can be used to rebuild a large data from smaller, sorted 
          data sets set include</p>
        <ul>
          <li>concatenating the smaller data sets with a SET statement</li>
          <li>interleaving the smaller data sets with SET and BY statements</li>
          <li>appending the smaller data sets with the APPEND procedure.</li>
        </ul></td>
    </tr>
  </table>
  <p><br>
  <!-- InstanceEndEditable --> 
</center>
<script>writeNav_regular_bottom();</script>
</body>
<!-- InstanceEnd --></html>
