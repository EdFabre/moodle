<html><!-- InstanceBegin template="/Templates/informationObject.dwt" codeOutsideHTMLIsLocked="false" -->
<head>
<SCRIPT LANGUAGE="JavaScript" SRC="../tut.js"></SCRIPT>
<script language="JavaScript" src="../nav.js"></script>
<SCRIPT LANGUAGE="JavaScript">
 setPageTitle();
 setCookie();
  
// Drop down menu link- © Dynamic Drive (www.dynamicdrive.com)
// For full source code and 100's more DHTML scripts, visit http://www.dynamicdrive.com
// Credit MUST stay intact for use -->

</SCRIPT>

<!-- InstanceBeginEditable name="extrascript" -->
<SCRIPT LANGUAGE="JavaScript">
</SCRIPT>
<!-- InstanceEndEditable -->

<link rel="stylesheet" href="../tut.css">


<META http-equiv="Content-Type" content="text/html; charset=windows-1252">
</HEAD>

<body marginheight="0" marginwidth="0" topmargin="0" leftmargin="0" rightmargin="0" bgcolor="#FFFFF0">
<script>writeinformationObjectTopNav1();</script>
	  
	  <font color="#003399" size="3" face="Arial, Helvetica, sans-serif"><strong><!-- InstanceBeginEditable name="TopicTitle" -->Comparing 
      Tools for Summarizing Data<!-- InstanceEndEditable --></strong></font> <!-- InstanceBeginEditable name="continued" --><font color="#003399" size="3" face="Arial, Helvetica, sans-serif">(continued)</font><!-- InstanceEndEditable -->
	  
<script>writeinformationObjectTopNav2();</script>
<br>
<center>
  <!-- InstanceBeginEditable name="content" --> 
  <table width="85%" border="0" cellpadding="0" cellspacing="0">
    <tr valign="top"> 
      <td> <h2>Using the NWAY Option in PROC MEANS to Combine Class Variables</h2>
        <p>Another way to specify a combination of class variables is to use the 
          NWAY option in PROC MEANS: 
        <p><br>
        <table  border="1" align="center" cellpadding="10" cellspacing="0" bgcolor="#F7F7DE" title="General form, NWAY option in the PROC MEANS 
              statement">
          <tr> 
            <td align="left"><strong>General form, NWAY option in the PROC MEANS 
              statement:</strong> <blockquote> <font color="#003399"><strong>PROC 
                MEANS NWAY;</strong></font> </blockquote>
              where <font color="#003399"><strong>NWAY</strong></font> specifies 
              that the output will contain statistics for the combination of all 
              specified class variables (the observations that have the highest 
              <code>_TYPE_</code> value).</td>
          </tr>
        </table>
        <p><br>
          The NWAY option enables you to generate summary statistics for <strong>one</strong> 
          particular combination of class variables&#8212;<strong>all</strong> 
          of the class variables&#8212;in a single PROC MEANS step. Therefore, 
          to generate statistics for several different combinations of class variables, 
          you can specify a separate PROC MEANS step that contains the NWAY option 
          for <strong>each</strong> combination. 
        <p><br>
        <h2>Example: Using the NWAY Option in Multiple PROC MEANS Steps</h2>
        <p>Suppose you want to calculate average employee salaries and to group 
          results for the following combinations of class variables:</p>
        <ul>
          <li> <code>Employee_Country </code>and <code>Department</code></li>
          <li><code>Employee_Country</code> and <code></code><code>Employee_Gender</code>. 
          </li>
        </ul>
        <p>You can use two PROC MEANS steps, each containing the NWAY option, 
          as shown below. The first PROC MEANS step generates statistics for the 
          first combination of class variables, and the second PROC MEANS steps 
          generates statistics for the second combination of class variables. 
        </p>
        <pre>     <font color="#003399">proc means data=company.organization <strong>nway</strong>;
        class <strong>employee_country department</strong>;
        var salary;
        output out=summary1
               n=employees
               mean=average;
     run;

    <font color="#003399"> proc means data=company.organization <strong>nway</strong>;
        class <strong>employee_country employee_gender</strong>;
        var salary;
        output out=summary2
               n=employees
               mean=average;
     run;</font></font></pre> 
        <p>When processing this program, SAS must read the data set once for each 
          PROC MEANS step. 
        <p>This program generates an output report and two output data sets. The 
          report, shown in part below, has a separate table for each PROC MEANS 
          step: </td>
    </tr>
  </table>
  <p><br>
    <a href="JavaScript: openOther('m85_38a.htm')"><img src="images/m85_38a.gif" alt="Partial PROC MEANS output" width="443" height="176" border="0"></a> 
  <p> 
  <hr width="85%">
  <br>
  <a href="JavaScript: openOther('m85_38a.htm')"><img src="images/m85_38b.gif" alt="Partial PROC MEANS output" width="423" height="174" border="0"></a><br>
  <CENTER>
    <em><font color="#003399">Click either image to view the full output report.</font></em> 
  </CENTER>
  <p><br>
  <table cellpadding="0" cellspacing="0" border="0" width="85%">
    <tr> 
      <td><p>Each output data set summarizes and reports data for one of the types 
          that are specified in the TYPES statement. A partial view of each output 
          data set is shown below:</p></td>
    </tr>
  </table>
  <p><br>
  SAS Data Set Work.Summary1<br>
    <a href="JavaScript: openOther2('m85_38b.htm')"><img src="images/m85_38c.gif" alt="Partial PROC MEANS output data set" width="436" height="184" border="0"></a><br>
	<em><font color="#003399">Click to view the full output data set.</font></em>
	<p><br>
  <CENTER>
    <p>SAS Data Set Work.Summary2<br>
	<a href="JavaScript: openOther3('m85_38c.htm')"><img src="images/m85_38d.gif" alt="Partial PROC MEANS output data set" width="416" height="183" border="0"></a><br>
	<em><font color="#003399">Click to view the full output data set.</font></em>
  </CENTER>
  <p><br>
  <!-- InstanceEndEditable --> 
</center>
<script>writeNav_regular_bottom();</script>
</body>
<!-- InstanceEnd --></html>
