<html><!-- InstanceBegin template="/Templates/opt_example.dwt" codeOutsideHTMLIsLocked="false" -->
<head>
<SCRIPT LANGUAGE="JavaScript" SRC="../tut.js"></SCRIPT>
<script language="JavaScript" src="../nav.js"></script>
<SCRIPT LANGUAGE="JavaScript">
 setPageTitle();
 setCookie();
 
// Drop down menu link- © Dynamic Drive (www.dynamicdrive.com)
// For full source code and 100's more DHTML scripts, visit http://www.dynamicdrive.com
// Credit MUST stay intact for use -->

</SCRIPT>

<!-- InstanceBeginEditable name="extrascript" -->
<SCRIPT LANGUAGE="JavaScript">
</SCRIPT>
<!-- InstanceEndEditable -->

<link rel="stylesheet" href="../tut.css">

<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"><title>Example</title></head>

<body marginheight="0" marginwidth="0" topmargin="0" leftmargin="0" rightmargin="0" bgcolor="#FFFFF0">

<script>writeinformationObjectTopNav1();</script>
      
	  <font color="#003399" size="3" face="Arial, Helvetica, sans-serif"><strong><!-- InstanceBeginEditable name="TopicTitle" -->Reading 
      and Writing Only Essential Data<!-- InstanceEndEditable --></strong></font> 
      <!-- InstanceBeginEditable name="continued" --><font color="#003399" size="3" face="Arial, Helvetica, sans-serif">(continued)</font><!-- InstanceEndEditable -->
	  
<script>writeinformationObjectTopNav2();</script>

<img src="../navimages/cleardot.gif" width="411" height="1" alt=" "><br>
<p>
<!-- InstanceBeginEditable name="Example Title" -->
<table width="85%" border="0" align="center" cellpadding="0" cellspacing="0">
  <tr valign="top"> 
    <td> <h2><img src="../navimages/opt_ex.gif" alt="Bar chart icon" width="32" height="32" align="absmiddle">Comparative 
        Example: Creating a Report That Contains Average and Median Statistics</h2></td>
  </tr>
</table>
<!-- InstanceEndEditable --><!-- InstanceBeginEditable name="Introduction" --> 
<table width="85%" border="0" align="center" cellpadding="0" cellspacing="0">
  <tr valign="top"> 
    <td> <p>Suppose you want to create a report that contains the average and 
        median values for the variable <code>Profit,</code> based on data that 
        is read from the data set <strong>Retail.Order_fact</strong>. Depending 
        on the number of variables eliminated, it might be more efficient to use 
        the KEEP= option in a SET statement to limit which variables are read. 
      <p>Techniques for reading and writing variables to a data set include
<ol>
        <li><a href="#1">Without the KEEP= Statement</a></li>
        <li><a href="#2">KEEP= in the DATA Statement</a></li>
        <li><a href="#3">KEEP= in the DATA and SET Statements</a></li>
        <li><a href="#4">KEEP= in the SET and MEANS Statements.</a></li>
              </ol>
      <p>The following sample programs show each of these techniques. You can 
        use these samples as models for creating benchmark programs in your own 
        environment. Your results may vary depending on the structure of your 
        data, your operating environment, and the resources that are available 
        at your site. You can also view <a href="#recommendations">general recommendations</a> 
        for reading and writing only essential data. 
      <hr size="1" noshade></td>
  </tr>
</table>
<!-- InstanceEndEditable -->
<p> 
  
<table width="85%" border="0" align="center" cellpadding="0" cellspacing="0">
  <tr valign="top"> 
      <td> <h2><!-- InstanceBeginEditable name="Technique Title" --><a name="techniques"></a>Programming 
        Techniques<!-- InstanceEndEditable --></h2></td>
    </tr>
  </table>
<!-- InstanceBeginEditable name="Techniques" --> 
<table width="85%" border="1" align="center" cellpadding="10" cellspacing="0" bgcolor="#FFFFFF">
  <tr> 
    <td bgcolor="#F7F7DE"> <p><strong><a name="1"></a><img src="../navimages/opt_1.gif" alt="1." width="20" height="20" align="absmiddle"> 
        Without the KEEP= Statement</strong></p>
      <blockquote> 
        <p>This program reads all variables from the data set <strong>Retail.Order_fact 
          </strong>and does not restrict which variables are written to the output 
          data set <strong>Retail.Profit</strong>. </font>PROC MEANS reads all 
          the variables from the data set.</p>
             </blockquote>
        <blockquote> 
        <pre><font color="#003399">     <strong>data retail.profit;</strong>
        <strong>set retail.order_fact;</strong>  
        if discount=. then    
           Profit=(total_retail_price-costPrice_Per_Unit)*quantity;  
        else Profit=((total_retail_price*discount)-costprice_per_unit)*quantity;
     run;
     proc means data=retail.profit mean median maxdec=2;
        title 'Order Information';
        class employee_id;
        var profit;
     run;</font></pre>
      </blockquote></td>
  </tr>
</table>
<p><br>
<table width="85%" border="1" align="center" cellpadding="10" cellspacing="0" bgcolor="#FFFFFF">
  <tr> 
    <td bgcolor="#F7F7DE"> <p><strong><a name="2" id="2"></a><img src="../navimages/opt_2.gif" alt="2." width="20" height="20" align="absmiddle"> 
        KEEP= in the DATA Statement</strong></p>
      <blockquote> 
        <p>This program uses the KEEP= data set option in the DATA statement to 
          write two variables to the output data set <strong>Retail.Profit.</strong> </font> 
          PROC MEANS reads only two variables from the data set.</p>
              </blockquote>
          <blockquote> 
        <pre><font color="#003399">     data retail.profit<strong>(keep=employee_id profit)</strong>;
        set retail.order_fact;
        if discount=. then
           Profit=(total_retail_price-costprice_per_unit)*quantity;
        else Profit=((total_retail_price*discount)-costprice_per_unit)*quantity;
     run;
     proc means data=retail.profit mean median maxdec=2;
        title 'Order Information';
        class employee_id;
        var profit;
     run;</font></pre>
      </blockquote></td>
  </tr>
</table>
<p><br>
<table width="85%" border="1" align="center" cellpadding="10" cellspacing="0" bgcolor="#FFFFFF">
  <tr> 
    <td bgcolor="#F7F7DE"> <p><strong><a name="3" id="3"></a><img src="../navimages/opt_3.gif" alt="2." width="20" height="20" align="absmiddle"> 
        KEEP= in the DATA and SET Statements</strong></p>
      <blockquote> 
        <p>This program uses the KEEP= option in the SET statement to read six 
          variables from <strong>Retail.Order_fact</strong>, and it uses the KEEP= 
          data set option in the DATA statement to write two variables to the 
          output data set <strong>Retail.Profits</strong>. </font>PROC MEANS reads 
          only two variables from the data set.</p>
          </blockquote>
        <blockquote> 
        <pre><font color="#003399">     data retail.profits<strong>(keep=employee_id profit)</strong>;  
        set retail.order_fact<strong>(keep=employee_id total_retail_price discount 
                                   costprice_per_unit quantity)</strong>;  
           if discount=. then    
              Profit=(total_retail_price-costprice_per_unit)*quantity;  
           else Profit=((total_retail_price*discount)-costprice_per_unit)*quantity;
     run;
     proc means data=retail.profit mean median maxdec=2;
        title 'Order Information';
        class employee_id;
        var profit;
     run;</font></pre>
      </blockquote></td>
  </tr>
</table>
<p><br>
<table width="85%" border="1" align="center" cellpadding="10" cellspacing="0" bgcolor="#FFFFFF">
  <tr> 
    <td bgcolor="#F7F7DE"> <p><strong><a name="4" id="4"></a><img src="../navimages/opt_4.gif" alt="4." width="20" height="20" align="absmiddle"> 
        KEEP= in the SET and MEANS Statements</strong></p>
      <blockquote> 
        <p>This program uses the KEEP= option in the SET statement to read selected 
          variables from <strong>Retail.Order_fact</strong>, and it uses the KEEP= 
          data set option in the MEANS statement to process only the variables 
          that are needed for the statistical report. You might do this if you 
          need additional variables in <strong>Retail.Profits</strong> for further 
          processing, but only two variables for processing by PROC MEANS.</p>
              </blockquote>
        <blockquote> 
        <pre><font color="#003399">     data retail.profit;
       set retail.order_fact<strong>(keep=employee_id total_retail_price discount
                                  costprice_per_unit quantity)</strong>;
       if discount=. then
          Profit=(total_retail_price-costprice_per_unit)*quantity;
       else Profit=((total_retail_price*discount)-costprice_per_unit)*quantity;
     run;
     proc means data=retail.profit<strong>(keep=employee_id profit)</strong> mean median maxdec=2;
        title 'Order Information';
        class employee_id;
        var profit;
     run;</font></pre>
      </blockquote></td>
  </tr>
</table>
<p><br>
<!-- InstanceEndEditable --> 
<table width="85%" border="0" align="center" cellpadding="0" cellspacing="0">
  <tr> 
      <td> <hr size="1" noshade> </td>
    </tr>
  </table>
<p>
<table width="85%" border="0" align="center" cellpadding="0" cellspacing="0">
  <tr valign="top"> 
    <td> <h2><a name="recommendations"></a><script>document.write(generalRecommendationsTitle);</script></h2></td>
  </tr>
</table>
<!-- InstanceBeginEditable name="Recommendations" -->
<table width="85%" border="0" align="center" cellpadding="0" cellspacing="0">
  <tr> 
    <td><ul>
        <li>To reduce both CPU time and I/O operations, avoid reading and writing 
          variables that are not needed .</li>
      </ul></td>
  </tr>
</table>
<p><br>
<!-- InstanceEndEditable -->
<script>writeNav_regular_bottom();</script>
</body>
<!-- InstanceEnd --></html>
