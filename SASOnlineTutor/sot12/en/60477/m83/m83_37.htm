<html><!-- InstanceBegin template="/Templates/informationObject.dwt" codeOutsideHTMLIsLocked="false" -->
<head>
<SCRIPT LANGUAGE="JavaScript" SRC="../tut.js"></SCRIPT>
<script language="JavaScript" src="../nav.js"></script>
<SCRIPT LANGUAGE="JavaScript">
 setPageTitle();
 setCookie();
  
// Drop down menu link- © Dynamic Drive (www.dynamicdrive.com)
// For full source code and 100's more DHTML scripts, visit http://www.dynamicdrive.com
// Credit MUST stay intact for use -->

</SCRIPT>

<!-- InstanceBeginEditable name="extrascript" -->
<SCRIPT LANGUAGE="JavaScript">
</SCRIPT>
<!-- InstanceEndEditable -->

<link rel="stylesheet" href="../tut.css">


<META http-equiv="Content-Type" content="text/html; charset=windows-1252">
</HEAD>

<body marginheight="0" marginwidth="0" topmargin="0" leftmargin="0" rightmargin="0" bgcolor="#FFFFF0">
<script>writeinformationObjectTopNav1();</script>
	  
	  <font color="#003399" size="3" face="Arial, Helvetica, sans-serif"><strong><!-- InstanceBeginEditable name="TopicTitle" -->Storing 
      Data in SAS Data Sets<!-- InstanceEndEditable --></strong></font> <!-- InstanceBeginEditable name="continued" --><font color="#003399" size="3" face="Arial, Helvetica, sans-serif"></font><!-- InstanceEndEditable -->
	  
<script>writeinformationObjectTopNav2();</script>
<br>
<center>
  <!-- InstanceBeginEditable name="content" --> 
  <table width="85%" border="0" cellpadding="0" cellspacing="0">
    <tr valign="top"> 
      <td> <p>In many cases, it is best practice for you to store data in SAS 
          data sets. You can optimize performance if you know when you should 
          create a SAS data set and when you should read data directly from an 
          external file.</p>
        <p>Before viewing the comparative example that illustrates different techniques 
          for reading from a SAS data set versus from an external file, consider 
          the following advantages of storing data in SAS data sets.</p>
        <p>When you use SAS to repeatedly analyze or manipulate any particular 
          group of data, it is more efficient to create a SAS data set than to 
          read the raw data each time. Although SAS data sets can be larger than 
          external files and can require more disk space, reading from SAS data 
          sets saves CPU time that is associated with reading a raw data file.</p>
        <p><br><center>
            <img src="images/m83_37g1.gif" width="356" height="190" alt="Illustration of reading data using a DATA step"> 
          </center>
        <p><br>Other reasons for storing data in SAS data sets, rather than external 
          files, include:</p>
        <ul>
          <li>When the data is already in a SAS data set, you can use a SAS procedure, 
            function, or routine on the data without further conversion.</li>
          <li>SAS data sets are self-documenting.</li>
        </ul>
        <p>The descriptor portion of a SAS data set documents information about 
          the data set such as</p>
        <ul>
          <li>data set labels</li>
          <li>variable labels</li>
          <li>variable formats</li>
          <li>informats</li>
          <li>descriptive variable names.</li>
        </ul>
         <table border="0" cellpadding="2" cellspacing="0">
          <tr> 
            <td valign="top" width="24"><img src="../navimages/note.gif" width="20" height="20" alt="Note"></td>
            <td valign="top">Create a temporary SAS data set if the data set is 
              used for intermediate tasks such as merging and if it is needed 
              in that SAS session only. Create a temporary SAS data set when the 
              external file on which the data set is based might change between 
              SAS sessions.</td>
          </tr>
        </table></td>
    </tr>
  </table>
  <p><br>

  
  <!-- InstanceEndEditable --> 
</center>
<script>writeNav_regular_bottom();</script>
</body>
<!-- InstanceEnd --></html>
