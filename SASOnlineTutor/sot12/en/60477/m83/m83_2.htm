<html><!-- InstanceBegin template="/Templates/informationObject.dwt" codeOutsideHTMLIsLocked="false" -->
<head>
<SCRIPT LANGUAGE="JavaScript" SRC="../tut.js"></SCRIPT>
<script language="JavaScript" src="../nav.js"></script>
<SCRIPT LANGUAGE="JavaScript">
 setPageTitle();
 setCookie();
  
// Drop down menu link- © Dynamic Drive (www.dynamicdrive.com)
// For full source code and 100's more DHTML scripts, visit http://www.dynamicdrive.com
// Credit MUST stay intact for use -->

</SCRIPT>

<!-- InstanceBeginEditable name="extrascript" -->
<SCRIPT LANGUAGE="JavaScript">
</SCRIPT>
<!-- InstanceEndEditable -->

<link rel="stylesheet" href="../tut.css">


<META http-equiv="Content-Type" content="text/html; charset=windows-1252">
</HEAD>

<body marginheight="0" marginwidth="0" topmargin="0" leftmargin="0" rightmargin="0" bgcolor="#FFFFF0">
<script>writeinformationObjectTopNav1();</script>
	  
	  <font color="#003399" size="3" face="Arial, Helvetica, sans-serif"><strong><!-- InstanceBeginEditable name="TopicTitle" -->Executing 
      Only Necessary Statements<!-- InstanceEndEditable --></strong></font> <!-- InstanceBeginEditable name="continued" --><!-- InstanceEndEditable -->
	  
<script>writeinformationObjectTopNav2();</script>
<br>
<center>
  <!-- InstanceBeginEditable name="content" --> 
  <table width="85%" border="0" cellpadding="0" cellspacing="0">
    <tr valign="top"> 
      <td> <p>Best practices dictate that you should write programs that cause 
          SAS to execute only necessary statements. When you execute the minimum 
          number of statements in the most efficient order, you minimize the hardware 
          resources that SAS uses. The resources that are affected include disk 
          usage, memory usage, and CPU usage.</p>
        <p>Techniques for executing only the statements you need include</p>
        <ul>
          <li>subsetting your data as soon as logically possible</li>
          <li>processing your data conditionally by using the most appropriate 
            syntax for your data.</li>
        </ul><p><br>
        <h2>Positioning of the Subsetting IF Statement</h2>
        <p>To subset your data based on a newly derived or computed variable, 
          you must use the subsetting IF statement in a DATA step. As you output 
          data to a SAS data set, you can subset it by processing only those observations 
          that meet a specified condition.</p></td>
    </tr>
  </table><p><br>
  <img src="images/m83_2g1.gif" alt="Illustration of subsetting data" width="371" height="108" title="Illustration for three rows subsetted">
<p><br>
  <table cellpadding="0" cellspacing="0" border="0" width="85%">
    <tr> 
      <td><p>The subsetting IF statement causes the DATA step to continue processing 
          only those raw data records or observations that meet the condition 
          of the expression specified in the IF statement. The resulting SAS data 
          set or data sets contain a subset of the original external file or SAS 
          data set.</p>
        <p>Position the subsetting IF statement in the program so that it checks 
          the subsetting condition as soon as it is logically possible, and so 
          that unnecessary statements do not execute. When a statement is false, 
          no further statements are processed for that observation.</p>
        <p>Also, remember to subset data before performing calculations and to 
          minimize the use of function calls or arithmetic operators. Unnecessary 
          processing of unwanted observations results in higher expenditure of 
          hardware resources.</p></td>
    </tr>
  </table>
  <p><br>
  <!-- InstanceEndEditable --> 
</center>
<script>writeNav_regular_bottom();</script>
</body>
<!-- InstanceEnd --></html>
