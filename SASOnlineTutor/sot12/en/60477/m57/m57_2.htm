<html><!-- InstanceBegin template="/Templates/informationObject.dwt" codeOutsideHTMLIsLocked="false" -->
<head>
<SCRIPT LANGUAGE="JavaScript" SRC="../tut.js"></SCRIPT>
<script language="JavaScript" src="../nav.js"></script>
<SCRIPT LANGUAGE="JavaScript">
 setPageTitle();
 setCookie();
  
// Drop down menu link- © Dynamic Drive (www.dynamicdrive.com)
// For full source code and 100's more DHTML scripts, visit http://www.dynamicdrive.com
// Credit MUST stay intact for use -->

</SCRIPT>

<!-- InstanceBeginEditable name="extrascript" -->
<SCRIPT LANGUAGE="JavaScript">
</SCRIPT>
<!-- InstanceEndEditable -->

<link rel="stylesheet" href="../tut.css">


<META http-equiv="Content-Type" content="text/html; charset=windows-1252">
</HEAD>

<body marginheight="0" marginwidth="0" topmargin="0" leftmargin="0" rightmargin="0" bgcolor="#FFFFF0">
<script>writeinformationObjectTopNav1();</script>
	  
	  <font color="#003399" size="3" face="Arial, Helvetica, sans-serif"><strong><!-- InstanceBeginEditable name="TopicTitle" -->Using 
      Multidimensional Arrays<!-- InstanceEndEditable --></strong></font> <!-- InstanceBeginEditable name="continued" --><!-- InstanceEndEditable -->
	  
<script>writeinformationObjectTopNav2();</script>
<br>
<center>
  <!-- InstanceBeginEditable name="content" --> 
  <table width="85%" border="0" cellpadding="0" cellspacing="0">
    <tr valign="top"> 
      <td> <p><strong>Review of the Multidimensional Array Statement</strong></p>
        <p>When a lookup operation depends on more than one numerical factor, 
          you can use a multidimensional array. As you learned in the lesson <strong> 
          <script>document.write(m35title);</script></strong>, you use an ARRAY statement to create an array. The ARRAY 
          statement defines a set of elements that you plan to process as a group.</p></td>
    </tr>
  </table>
  <p><br>
  <table border="1" cellspacing="0" cellpadding="10" width="85%" bgcolor="#F7F7DE" title="General form, Multidimensional ARRAY statement">
    <tr> 
      <td align="left"><strong>General form, multidimensional ARRAY statement:</strong> 
        <blockquote> <font color="#003399"><nobr><strong>ARRAY </strong><em>array-name 
          </em>{<em>rows,cols,...</em>}<em> </em>&lt;<em>$</em>&gt; &lt;<em>length</em>&gt;</nobr></font> 
          <br>
          &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#003399">&lt;<em>array-elements</em>&gt; 
          &lt;(<em>initial values</em>)&gt;<strong>;</strong></font></blockquote>
        <p> where </p>
        <ul>
          <li><font color="#003399"><em>array-name</em></font> names the array 
          <li><font color="#003399"><em>rows</em></font> specifies the number 
            of array elements in a row arrangement 
          <li><em><font color="#003399">cols</font></em><font color="#003399"><em></em></font> 
            specifies the number of array elements in a column arrangement 
          <li><em><font color="#003399">array-elements</font></em> names the variables 
            that make up the array 
          <li> <font color="#003399"><em>initial values</em></font> specifies 
            initial values for the corresponding elements in the array that are 
            separated by commas or spaces. 
        </ul>
        <table border="0" cellpadding="2" cellspacing="0">
          <tr> 
            <td valign="top" width="24"><img src="../navimages/note.gif" width="20" height="20" alt="Note"></td>
            <td valign="top">The keyword <strong>_TEMPORARY_</strong> may be used 
              instead of <em><font color="#003399">array-elements</font></em> 
              to avoid creating new data set variables. Only temporary array elements 
              are produced as a result of using _TEMPORARY_. </td>
          </tr>
        </table></td>
    </tr>
  </table>
  <p>
  <br>
  <table width="85%" border="0" align="center" cellpadding="0" cellspacing="0">
    <tr> 
      <td><p>When you are working with arrays, remember that</p>
        <ul>
          <li>The name of the array must be a SAS name that is not the name of 
            a SAS variable in the same DATA step.<br>
            <br>
          </li>
          <li>The variables listed as array elements must all be the same type 
            (either all numeric or all character).<br>
            <br>
          </li>
          <li>The initial values specified can be numbers or character strings. 
            You must enclose all character strings in quotation marks. </li>
        </ul></td>
    </tr>
  </table>
<br>
  <!-- InstanceEndEditable --> 
</center>
<script>writeNav_regular_bottom();</script>
</body>
<!-- InstanceEnd --></html>
