<html><!-- InstanceBegin template="/Templates/informationObject.dwt" codeOutsideHTMLIsLocked="false" -->
<head>
<SCRIPT LANGUAGE="JavaScript" SRC="../tut.js"></SCRIPT>
<script language="JavaScript" src="../nav.js"></script>
<SCRIPT LANGUAGE="JavaScript">
 setPageTitle();
 setCookie();
  
// Drop down menu link- © Dynamic Drive (www.dynamicdrive.com)
// For full source code and 100's more DHTML scripts, visit http://www.dynamicdrive.com
// Credit MUST stay intact for use -->

</SCRIPT>

<!-- InstanceBeginEditable name="extrascript" -->
<SCRIPT LANGUAGE="JavaScript">
</SCRIPT>
<!-- InstanceEndEditable -->

<link rel="stylesheet" href="../tut.css">


<META http-equiv="Content-Type" content="text/html; charset=windows-1252">
</HEAD>

<body marginheight="0" marginwidth="0" topmargin="0" leftmargin="0" rightmargin="0" bgcolor="#FFFFF0">
<script>writeinformationObjectTopNav1();</script>
	  
	  <font color="#003399" size="3" face="Arial, Helvetica, sans-serif"><strong><!-- InstanceBeginEditable name="TopicTitle" -->Creating 
      and Using PROC SQL Views<!-- InstanceEndEditable --></strong></font> <!-- InstanceBeginEditable name="continued" --><!-- InstanceEndEditable -->
	  
<script>writeinformationObjectTopNav2();</script>
<br>
<center>
  <!-- InstanceBeginEditable name="content" --> 
  <table width="85%" border="0" cellpadding="0" cellspacing="0">
    <tr valign="top"> 
      <td> <h2>PROC SQL Views</h2>
        <p>A PROC SQL view is a stored query that is executed when you use the 
          view in a SAS procedure, DATA step, or function. A view contains only 
          the descriptor and other information required to retrieve the data values 
          from other SAS files (SAS data files, DATA step views, or other PROC 
          SQL views) or external files (DBMS data files). The view contains only 
          the logic for accessing the data, <strong>not</strong> the data itself. 
        </p>
        <p>Because PROC SQL views are not separate copies of data, they are referred 
          to as <strong>virtual tables</strong>. They do not exist as independent 
          entities like real tables. However, views use the same naming conventions 
          as tables and can be used in SAS programs in place of an actual SAS 
          table. Like tables, views are considered to be SAS data sets.</p>
        <p> Views are useful because they</p>
        <ul>
          <li>often save space (a view is usually quite small compared with the 
            data that it accesses)</li>
          <li>prevent users from continually submitting queries to omit unwanted 
            columns or rows</li>
          <li>ensure that input data sets are always current, because data is 
            derived from tables at execution time</li>
          <li>shield sensitive or confidential columns from users while enabling 
            the same users to view other columns in the same table</li>
          <li>hide complex joins or queries from users.</li>
        </ul>
        </td>
    </tr>
  </table>
  <p>
  <!-- InstanceEndEditable --> 
</center>
<script>writeNav_regular_bottom();</script>
</body>
<!-- InstanceEnd --></html>
