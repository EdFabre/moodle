<html><!-- InstanceBegin template="/Templates/informationObject.dwt" codeOutsideHTMLIsLocked="false" -->
<head>
<SCRIPT LANGUAGE="JavaScript" SRC="../tut.js"></SCRIPT>
<script language="JavaScript" src="../nav.js"></script>
<SCRIPT LANGUAGE="JavaScript">
 setPageTitle();
 setCookie();
  
// Drop down menu link- © Dynamic Drive (www.dynamicdrive.com)
// For full source code and 100's more DHTML scripts, visit http://www.dynamicdrive.com
// Credit MUST stay intact for use -->

</SCRIPT>

<!-- InstanceBeginEditable name="extrascript" -->
<SCRIPT LANGUAGE="JavaScript">
</SCRIPT>
<!-- InstanceEndEditable -->

<link rel="stylesheet" href="../tut.css">


<META http-equiv="Content-Type" content="text/html; charset=windows-1252">
</HEAD>

<body marginheight="0" marginwidth="0" topmargin="0" leftmargin="0" rightmargin="0" bgcolor="#FFFFF0">
<script>writeinformationObjectTopNav1();</script>
	  
	  <font color="#003399" size="3" face="Arial, Helvetica, sans-serif"><strong><!-- InstanceBeginEditable name="TopicTitle" -->Creating 
      SAS Data Sets from Custom Fomats<!-- InstanceEndEditable --></strong></font> <!-- InstanceBeginEditable name="continued" --><!-- InstanceEndEditable -->
	  
<script>writeinformationObjectTopNav2();</script>
<br>
<center>
  <!-- InstanceBeginEditable name="content" --> 
  <table width="85%" border="0" cellpadding="0" cellspacing="0" align="center">
    <tr valign="top"> 
      <td> <p>You know how to create a format from a SAS data set, but what if 
          you want to create a SAS data set from a format? To do this, you use 
          the CNTLOUT= option.</p></td>
    </tr>
  </table>
  <p><br>
  </p>
  <table border="1" cellspacing="0" cellpadding="10" width="85%" bgcolor="#F7F7DE" title="General form, CNTLOUT= option in PROC FORMAT">
    <tr> 
      <td align="left"><strong>General form, CNTLOUT= option in PROC FORMAT:</strong> 
        <blockquote> <font color="#003399"><nobr><strong>PROC FORMAT LIBRARY=</strong><em>libref.catalog</em><strong> 
          CNTLOUT=</strong><em>SAS-data-set</em><strong>;</strong><em><br>
          &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</em><strong>SELECT</strong><em> 
          format-name format-name. . . </em><strong>;</strong> <br>
          <em>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</em><strong>EXCLUDE</strong><em> 
          format-name format-name. . . </em><strong>;</strong><br>
          <strong>RUN; </strong></nobr></font> <strong><font color="#003399"><nobr> 
          </nobr></font> </strong></blockquote>
        <p>where<font color="#003399"><em></em></font></p>
        <ul>
          <li><font color="#003399"><em> libref.catalog </em></font>is the name 
            of the catalog in which the format is located
          <li><font color="#003399"><em>SAS-data-set</em></font> is the name of the SAS 
            data set that you want to create
<li> <font color="#003399"><em>format-name </em></font>is the name of 
            the format that you want to select or exclude. </ul></td>
    </tr>
  </table>
  <p><br>
  </p>
  <table width="85%" border="0" align="center" cellpadding="0" cellspacing="0">
    <tr> 
      <td><p>The output control data set will contain variables that completely 
          describe all aspects of each format, including optional settings. The 
          output data set contains one observation per range per format in the 
          specified catalog. You can use either the <strong>SELECT</strong> or 
          <strong>EXCLUDE</strong> statement to include specific formats in the 
          data set.</p>
        <p>Creating a SAS data set from a format is very useful when you need 
          to add information to a format but no longer have the the SAS data set 
          you used to create the format. When you need to update a format, you 
          can </p>
        <ol>
          <li>create a SAS data set from the values in a format using CNTLOUT=</li>
          <li>edit the data set using any number of methods</li>
          <li>create a format from the updated SAS data set using CNTLIN=.</li>
        </ol>
        <p>Next let's look at each of these steps individually.</p></td>
    </tr>
  </table>
  <p> <!-- InstanceEndEditable --> 
</center>
<script>writeNav_regular_bottom();</script>
</body>
<!-- InstanceEnd --></html>
