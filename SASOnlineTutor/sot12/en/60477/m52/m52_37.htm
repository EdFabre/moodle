<html><!-- InstanceBegin template="/Templates/practice.dwt" codeOutsideHTMLIsLocked="false" -->
<head>

<SCRIPT LANGUAGE="JavaScript" SRC="../tut.js"></SCRIPT>
<script language="JavaScript" src="../nav.js"></script>

<SCRIPT LANGUAGE="JavaScript">
 setPageTitle();
 setCookie();
 checkPracticeCookie();
 checkVersion();
 
// Drop down menu link- © Dynamic Drive (www.dynamicdrive.com)
// For full source code and 100's more DHTML scripts, visit http://www.dynamicdrive.com
// Credit MUST stay intact for use -->

</SCRIPT>

<!-- InstanceBeginEditable name="extrascript" --> 
<SCRIPT LANGUAGE="JavaScript">
solutionTitle='<strong>Solution to guided practice:</strong><p>';

solutionText='<ol><li>Copy the program and paste it into the code editing  window.<br><br> ';
solutionText+='<li>Create a separate  macro program with the DATA step as follows:';
solutionText+='<font color="#003399"><pre>';
solutionText+='%macro datemvar(frmt=date9.);<br>';
solutionText+='   data _null_;<br>';
solutionText+='      call symput(\'today\',';
solutionText+='(put(today(),&frmt)));<br>';
solutionText+='   run;<br>';
solutionText+='%mend datemvar;</pre></font>';
solutionText+='<li>The <strong>Prtrost</strong> macro should now look like this:';
solutionText+='<font color="#003399"><pre>';
solutionText+='%macro prtrost(num=1);<br>';
solutionText+='   %local today;<br>';
solutionText+='   %datemvar(frmt=mmddyy10.)<br>';
solutionText+='   proc print data=sasuser.all label noobs n;<br>';
solutionText+='      where course_number=&num;<br>';
solutionText+='      var student_name student_company city_state;<br>';
solutionText+='      title1';
solutionText+=' "Course &num Enrollment as of &today";<br>'; 
solutionText+='   run;<br>';
solutionText+='%mend prtrost;</pre></font>';
solutionText+='You need to use the %LOCAL statement to create the local ';
solutionText+='macro variable <code>today</code> so that the <strong>Datemvar</strong> macro ';
solutionText+='does not create and update a macro variable named <code>today</code> that is ';
solutionText+='local to <strong>Datemvar</strong>.<br><br>';
solutionText+='Submit the macro for compilation.<br><br>';
solutionText+='<li>Submit the following program:';
solutionText+='<font color="#003399"><pre>options mprintnest mlogicnest;<br>';
solutionText+='%prtrost(num=8)</pre></font>';
solutionText+='Examine the output. Make sure the reference to <code>today</code> ';
solutionText+='in the title resolves to the formatted value of today\'s date.</ol>';
</SCRIPT>
<!-- InstanceEndEditable -->

<link rel="stylesheet" href="../tut.css">


<META http-equiv="Content-Type" content="text/html; charset=windows-1252">
</HEAD>

<body marginheight="0" marginwidth="0" topmargin="0" leftmargin="0" rightmargin="0" bgcolor="#FFFFF0" onLoad="sizePractice()" onUnload="resizePage()">
<script>writepracticeTopNav1();</script>
		  
		  <!-- InstanceBeginEditable name="task_description" --><strong>Call one macro from another in order to create multiple local symbol tables. </strong><!-- InstanceEndEditable -->
			
<script>writepracticeTopNav2();</script>

<center>
 <p>
<!-- InstanceBeginEditable name="optionalNote" --><!-- InstanceEndEditable -->
<p> 
<table width="85%" border="0" cellpadding="0" cellspacing="0" align="center">
  <tr valign="top"> 
    <td> 
      <ol>
        <!-- InstanceBeginEditable name="task_steps" --> 
          <li>Copy the following program and paste it into the code editing window: 
            <pre><font color="#003399">%macro prtrost(num=1);
   data _null_;
      call symput('today',
           (put(today(),mmddyy10.)));
   run;

   proc print data=sasuser.all label noobs n;
      where course_number=&amp;num;
      var student_name student_company city_state;
      title1 &quot;Course &amp;num Enrollment
             as of &amp;today&quot;;
   run;
%mend prtrost;
</font></pre>

          <li>Move the DATA step into a separate macro named <strong>Datemvar</strong>, 
            with one parameter named <code>frmt</code> corresponding to the format 
            that is used in the PUT function. Make <code>DATE9.</code> the default 
            value of this parameter. Keep the PROC PRINT step in the <strong>Prtrost</strong> 
            macro, so that you have two separate macro definitions in the code 
            editing window.<br>
          <br>
	    <li> Place a call to the new macro before the PROC PRINT step (where the DATA 
          step had been) in the <strong>Prtrost</strong> macro. Use the value 
          <em>mmddyy10.</em> instead of the default value for the macro's parameter. 
          Submit the revised program. <br>
          <br>
          <li>Submit a statement to set both the MLOGICNEST and the MPRINTNEST 
            options, and a call to <strong>Prtrost</strong>. Examine the output 
            as well as any messages that are written to the SAS log. <br><br><table border="0" cellpadding="2" cellspacing="0">
      <tr> 
        
    <td valign="top" width="24"><img src="../navimages/note.gif" width="20" height="20" alt="Note"></td>
                <td valign="top">Remember that the MLOGICNEST and MPRINTNEST options 
                  are available beginning in SAS 9. If you are working in an earlier 
                  version of SAS or the SAS Learning Edition, submit only the 
                  call to <strong>Prtrost</strong>.</td>
      </tr>
    </table><!-- InstanceEndEditable -->
      </ol>
      
       </td>
  </tr>
</table>
</center>
<center>
<script>writepracticeSolutionLink();</script>
</center>
<script>writeNav_regular_bottom();</script>
</body>
<!-- InstanceEnd --></html>