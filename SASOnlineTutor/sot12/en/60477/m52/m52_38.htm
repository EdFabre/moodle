<html><!-- InstanceBegin template="/Templates/informationObject.dwt" codeOutsideHTMLIsLocked="false" -->
<head>
<SCRIPT LANGUAGE="JavaScript" SRC="../tut.js"></SCRIPT>
<script language="JavaScript" src="../nav.js"></script>
<SCRIPT LANGUAGE="JavaScript">
 setPageTitle();
 setCookie();
  
// Drop down menu link- © Dynamic Drive (www.dynamicdrive.com)
// For full source code and 100's more DHTML scripts, visit http://www.dynamicdrive.com
// Credit MUST stay intact for use -->

</SCRIPT>

<!-- InstanceBeginEditable name="extrascript" --> 
<SCRIPT LANGUAGE="JavaScript">
</SCRIPT>
<!-- InstanceEndEditable -->

<link rel="stylesheet" href="../tut.css">


<META http-equiv="Content-Type" content="text/html; charset=windows-1252">
</HEAD>

<body marginheight="0" marginwidth="0" topmargin="0" leftmargin="0" rightmargin="0" bgcolor="#FFFFF0">
<script>writeinformationObjectTopNav1();</script>
	  
	  <font color="#003399" size="3" face="Arial, Helvetica, sans-serif"><strong><!-- InstanceBeginEditable name="TopicTitle" --> 
      Processing Statements Conditionally<!-- InstanceEndEditable --></strong></font> <!-- InstanceBeginEditable name="continued" --><!-- InstanceEndEditable -->
	  
<script>writeinformationObjectTopNav2();</script>
<br>
<center>
  <!-- InstanceBeginEditable name="content" --> 
<table width="85%" border="0" cellpadding="0" cellspacing="0" align="center">
  <tr valign="top"> 
    <td>
<h2>Conditional Execution</h2> 
        <P>You can use macros to control conditional execution of statements. Remember 
          the example from the beginning of this lesson where you wanted to run 
          a daily report to create registration listings for courses to be held 
          later in the month. Remember that you also wanted to run a weekly report 
          each Friday to create a summary of revenue that has been generated so 
          far in the current month. You can accomplish these tasks with one program 
          if you use conditional execution to determine whether the second report 
          should be run. 
        <P> You can perform conditional execution at the macro level with <nobr>%IF-%THEN</nobr> 
          and <nobr>%ELSE</nobr> statements. </td></tr></table>
<P><BR>

<table border="1" cellspacing="0" cellpadding="10" width="85%" bgcolor="#F7F7DE" align="center" title="General form, %IF-%THEN and %ELSE statements">
    <tr> 
      <td align="left"><STRONG>General form, %IF-%THEN and %ELSE statements:</STRONG>
	  <BLOCKQUOTE>
	    <dl><dt><FONT COLOR="#003399"><STRONG>%IF</STRONG> <em>expression</em> <strong>%THEN</strong> <em>text</em>;</font></dt><FONT COLOR="#003399">
		<dt><<strong>%ELSE</strong> <em>text</em>;></dt></FONT></dl>
	  </BLOCKQUOTE>
	  <P>
	  where
       <UL>
	    <LI> <FONT COLOR="#003399"><em>expression</em></FONT> can be any valid 
          macro expression that resolves to an integer. <BR>
	    <LI><font color="#003399"><em>text</em></font>
		can be specified as 
		<UL>
		<LI>constant text</LI>
		<LI>a text expression</LI>
		    <LI>a macro variable reference, a macro call, or a macro program statement.</LI>
		</UL></LI>
	  
	  </UL>
      </td>
    </tr>
  </table>

<p><BR>
<table width="85%" border="0" cellpadding="0" cellspacing="0" align="center">
  <tr valign="top"> 
      <td>If <font color="#003399"><em>expression</em></font> resolves to zero, 
        then it is </strong>false</strong> and the <nobr>%THEN</nobr> text is 
        not processed (the optional <nobr>%ELSE</nobr> text is processed instead). 
        If it resolves to any integer other than zero, then the expression is 
        true and the <nobr>%THEN</nobr> text is processed. If it resolves to null 
        or to any noninteger value, an error message is issued. 
        <P>The <nobr>%ELSE</nobr> statement is optional. However, the macro language does not contain a subsetting 
  %IF statement. Thus, you cannot use <nobr>%IF</nobr> without <nobr>%THEN</nobr>. 
<p><br><h2>%IF-%THEN Compared to IF-THEN</h2> 
        <p>Although they look similar, the <nobr>%IF-%THEN</nobr>/<nobr>%ELSE</nobr> statement and the IF-THEN/ELSE 
          statement belong to two different languages. Most of the same rules 
          that apply to the DATA step IF-THEN/ELSE statement also apply to the 
          %IF-%THEN/%ELSE statement. However, there are several important differences 
          between the macro <nobr>%IF-%THEN</nobr> statement and the DATA step 
          <nobr>IF-THEN</nobr> statement. </p>
<p> <br>

<table  border="1" cellspacing="0" cellpadding="2" bgcolor="#FFFFFF" align="center" title="%IF-%THEN / IF-THEN">
  <tr> 
    <th bgcolor="#F7F7DE" align="center"><font size="-1">%IF-%THEN...</font></th>
    <th bgcolor="#F7F7DE" align="center"><font size="-1">IF-THEN...</font></th>
  </tr>
  <tr valign="top"> 
    <td>is used only in a macro program.</td>
    <td>is used only in a DATA step program.</td>
  </tr>
  <tr valign="top"> 
    <td>executes during macro execution.</td>
    <td>executes during DATA step execution.</td>
  </tr>
  <tr valign="top"> 
    <td>uses macro variables in logical expressions and cannot refer to DATA step variables in logical expressions.</td>
    <td>uses DATA step variables in logical expressions.</td>
  </tr>
  
  <tr valign="top"> 
    <td>determines what text should be copied to the input stack.</td>
    <td>determines what DATA step statement(s) should be executed. When inside a macro definition, it is copied to the input stack as text.</td>
  </tr>
</table>
    </td>
  </tr>
</table><P><BR>
<!-- InstanceEndEditable --> 
</center>
<script>writeNav_regular_bottom();</script>
</body>
<!-- InstanceEnd --></html>
