<html><!-- InstanceBegin template="/Templates/informationObject.dwt" codeOutsideHTMLIsLocked="false" -->
<head>
<SCRIPT LANGUAGE="JavaScript" SRC="../tut.js"></SCRIPT>
<script language="JavaScript" src="../nav.js"></script>
<SCRIPT LANGUAGE="JavaScript">
 setPageTitle();
 setCookie();
  
// Drop down menu link- © Dynamic Drive (www.dynamicdrive.com)
// For full source code and 100's more DHTML scripts, visit http://www.dynamicdrive.com
// Credit MUST stay intact for use -->

</SCRIPT>

<!-- InstanceBeginEditable name="extrascript" --> 
<SCRIPT LANGUAGE="JavaScript">
</SCRIPT>
<!-- InstanceEndEditable -->

<link rel="stylesheet" href="../tut.css">


<META http-equiv="Content-Type" content="text/html; charset=windows-1252">
</HEAD>

<body marginheight="0" marginwidth="0" topmargin="0" leftmargin="0" rightmargin="0" bgcolor="#FFFFF0">
<script>writeinformationObjectTopNav1();</script>
	  
	  <font color="#003399" size="3" face="Arial, Helvetica, sans-serif"><strong><!-- InstanceBeginEditable name="TopicTitle" -->Using 
      Macro Parameters<!-- InstanceEndEditable --></strong></font> <!-- InstanceBeginEditable name="continued" --><font color="#003399" size="3" face="Arial, Helvetica, sans-serif">(continued)</font><!-- InstanceEndEditable -->
	  
<script>writeinformationObjectTopNav2();</script>
<br>
<center>
  <!-- InstanceBeginEditable name="content" --> 
<table width="85%" border="0" cellpadding="0" cellspacing="0" align="center">
  <tr valign="top"> 
    <td>
<h2>Macros That Include Mixed Parameter Lists</h2>
<P>
You can also include a parameter list that contains <strong>both positional and keyword</strong> parameters in your macro definitions.
All positional parameter variables in the <nobr>%MACRO</nobr> statement must be listed <strong>before</strong> 
  any keyword parameter variable is listed.
</td></tr></table>
<p><BR>
<table border="1" cellspacing="0" cellpadding="10" width="85%" bgcolor="#F7F7DE" align="center" title="General form, a macro definition with mixed parameters">
    <tr> 
      <td align="left"><STRONG>General form, macro definition that includes mixed parameters:</STRONG>
	  <BLOCKQUOTE>
	    <dl><dt><FONT COLOR="#003399"><STRONG>%MACRO</STRONG> <em>macro-name</em>(<em>parameter-1&lt;,...,parameter-n&gt;,</em></FONT></dt>
		    <dd><FONT COLOR="#003399"> <em>keyword-1=&lt;value-1&gt;&lt;,...,keyword-n=&lt;value-n&gt;&gt;</em>); 
              </font></dd>
		    <dd><FONT COLOR="#003399"><em>text</em></font></dd>
	<dt><font color="#003399"><strong>%MEND;</strong></font></dt></dl>
	</BLOCKQUOTE>
	where <font color="#003399"><em>parameter-1&lt;,...,parameter-n&gt;</em></font> 
        is listed before <font color="#003399"><em><nobr>keyword-1=</nobr>&lt;value-1&gt;&lt;,...<nobr>keyword-n=</nobr>&lt;value-n</em></font>&gt;&gt;.</td>
    </tr>
  </table>

<p><BR>
<table width="85%" border="0" cellpadding="0" cellspacing="0" align="center">
  <tr valign="top"> 
      <td>Similarly, when you <strong>call</strong> a macro that includes a mixed 
        parameter list, you must list the positional values before any keyword 
        values, as follows:</p> 
        <P>
<font color="#003399"><pre>    %<em>macro-name</em>(<em>value-1&lt;,...,value-n&gt;,
                keyword-1=value-1&lt;,...,keyword-n=value-n&gt;</em>)</pre></font>
<p><br><h2>Example</h2>
        <P>You can use a combination of positional and keyword parameters to create 
          the macro variables in the <strong>Printdsn</strong> macro definition. 
          This code uses a positional parameter to create the macro variable <code>dsn</code>, 
          and a keyword parameter to create the macro variable <code>vars</code>:<font color="#003399">
      <pre>     %macro printdsn(<strong>dsn, vars=course_title course_code days</strong>);
        proc print data=&dsn;
           var &vars;
        title "Listing of %upcase(&dsn) data set";
        run;
     %mend;
</pre>
        </font> The following call to the <strong>Printdsn</strong> macro assigns 
        the value <em>sasuser.schedule</em> to the macro variable <code>dsn</code> 
        and assigns the value <em>teacher location begin_date</em> to the macro 
        variable <code>vars</code>. Notice that the value for <code>dsn</code> 
        is listed first, since <code>dsn</code> is the positional parameter. <font color="#003399"> 
        <pre>     %printdsn(sasuser.schedule, vars=teacher location begin_date)</pre></font>
<P>Now, suppose you want to execute the <strong>Printdsn</strong> macro, assigning 
          the default value <em>course_title course_code days</em> to the macro 
          variable <code>vars</code> and assigning the value <em>sasuser.courses</em> 
          to the macro variable <code>dsn</code>. You could issue the following 
          call:<font color="#003399"><pre>     %printdsn(sasuser.courses)
</pre>
        </font> Because this call omits the keyword parameter (<code>vars</code>), 
        the default value for that parameter is used. </td>
  </tr>
</table><P><BR>
<!-- InstanceEndEditable --> 
</center>
<script>writeNav_regular_bottom();</script>
</body>
<!-- InstanceEnd --></html>
