<html><!-- InstanceBegin template="/Templates/summary.dwt" codeOutsideHTMLIsLocked="false" -->
<head>

<SCRIPT LANGUAGE="JavaScript" SRC="../tut.js"></SCRIPT>
<script language="JavaScript1.2" src="../nav.js"></script>


<SCRIPT LANGUAGE="JavaScript">
 setPageTitle();
 setCookie();
 
// Drop down menu link- © Dynamic Drive (www.dynamicdrive.com)
// For full source code and 100's more DHTML scripts, visit http://www.dynamicdrive.com
// Credit MUST stay intact for use -->

</SCRIPT>

<!-- InstanceBeginEditable name="extrascript" -->
<SCRIPT LANGUAGE="JavaScript">
</SCRIPT>
<!-- InstanceEndEditable -->

<link rel="stylesheet" href="../tut.css">

<META http-equiv="Content-Type" content="text/html; charset=windows-1252">
</HEAD>

<body marginheight="0" marginwidth="0" topmargin="0" leftmargin="0" rightmargin="0" bgcolor="#FFFFF0">
<script>writeinformationObjectTopNav1();</script>
 
      <font color="#003399" size="3" face="Arial, Helvetica, sans-serif"><strong><script>document.write(summaryTitle)</script></strong></font>
 
 
<script>writeinformationObjectTopNav2();</script>
<br>
<center><TABLE cellpadding=0 cellspacing=0 border=0 width="85%" align="center">
  <TR>
      <TD align="left">
      
      <p><script>document.write(summaryPageContains)</script></p>
     <ul><!-- InstanceBeginEditable name="links" -->
        <LI> <A HREF="#Text" onMouseOver="window.status='Go to the text summary section.'; "
		onMouseOut="window.status=''">a text summary of the material taught in 
          the lesson</A> 
        <LI> <A HREF="#Syntax" onMouseOver="window.status='Go to the syntax section.'; "
		onMouseOut="window.status=''">syntax for&nbsp;statements and options</A> 
      <LI> <A HREF="#Sample" onMouseOver="window.status='Go to the sample program section.'; "
		onMouseOut="window.status=''">sample programs</A> 
      <LI> <A HREF="#Points" onMouseOver="window.status='Go to the points to remember section.'; "
		onMouseOut="window.status=''">points to remember</A>.
      <!-- InstanceEndEditable --></ul>
<P>
	  <HR>
      </TD>
    </TR>
  </TABLE>
  <P>

<!-- InstanceBeginEditable name="textsummaryintro" -->     
<TABLE cellpadding=0 cellspacing=0 border=0 width="85%" align="center">
  <TR>
	<TD align="left"><h2><STRONG><A NAME="Text"><script>document.write(summaryPageTextSummaryTitle);</script></A></STRONG> </h2>
      <P>
	  <EM><script>document.write(summaryPageDirections);</script></EM></TD>
      </TR>
    </TABLE>
<!-- InstanceEndEditable -->
  <br>
<!-- InstanceBeginEditable name="textsummary" --> 
<table width="85%" border="0" cellpadding="0" cellspacing="0" align="center">
  <tr valign="top"> 
    <td>
      <p><strong>Understanding Session-Compiled Macros</strong> <br>
        You can make a macro available to your SAS session by submitting the macro 
        definition before calling the macro. This creates a <a href="m53_2.htm" onClick="suggestBack()">session-compiled 
        macro</a>. Session-compiled macros are deleted from the temporary SAS catalog <strong>Work.Sasmacr</strong>
	at the end of the session. 
      </p>
      <p><strong>Storing Macro Definitions in External Files</strong> <br>
        One way to store your macro definitions permanently is to save them 
	in <a href="m53_3.htm" onClick="suggestBack()">external files</a>. You can 
	make a macro definition that is stored in an external file accessible to your SAS 
	programs by using the <a href="m53_3.htm" onClick="suggestBack()"><nobr>%INCLUDE</nobr> statement</a>. 
	</p>
	<p><strong>Storing Macro Definitions in Catalog SOURCE Entries</strong> <br>
        You can also store your macro definitions permanently as SOURCE entries in SAS catalogs. You can use the 
	<a href="m53_7.htm" onClick="suggestBack()">catalog access method</a> to make these macros 
	accessible to your SAS programs. The <a href="m53_8.htm" onClick="suggestBack()">PROC CATALOG statement</a> 
	 enables you to view a list of the contents of a SAS catalog. 
      </p>   
        <p><strong>Using the Autocall Facility</strong> <br>
        You can permanently store macro definitions in source libraries called 
	<a href="m53_14.htm" onClick="suggestBack()">autocall libraries</a>. SAS provides several macro definitions for you 
	in a <a href="m53_18.htm" onClick="suggestBack()">default autocall library</a>. You can concatenate multiple 
	autocall libraries. To access macros that are stored in an autocall library, you specify the SASAUTOS and  
	MAUTOSOURCE system options. 
	</p>
        <p><strong>Using Stored Compiled Macros</strong> <br>
        Another efficient way to make macros available to a program is to store them 
        in compiled form in a SAS library. To store a compiled macro permanently, 
        you must set two system options, <a href="m53_23.htm" onClick="suggestBack()">MSTORED</a> and 
	<a href="m53_23.htm" onClick="suggestBack()">SASMSTORE</a>. Then you 
        submit one or more macro definitions, using the <a href="m53_24.htm" onClick="suggestBack()">STORE option</a> in the <nobr>%MACRO</nobr> 
        statement. The compiled macro is stored as a catalog entry in <em><strong>Libref</strong></em><strong>.Sasmacr</strong>. 
        The source program is not stored as part of the compiled macro. You should 
        always maintain the original source program for each macro definition in case 
        you need to redefine the macro.</p>
      
    </td>
  </tr>
</table>
<!-- InstanceEndEditable --> <br>
<table cellpadding=0 cellspacing=0 border=0 width="85%" align="center">
  <tr> 
    <td align="left"> 
      <hr>
    </td>
  </tr>
</table>

<P><!-- InstanceBeginEditable name="syntax" -->
<center>
  <TABLE cellpadding=0 cellspacing=0 border=0 width="85%">
    <TR> 
      <TD><STRONG><A NAME="Syntax">Syntax</A></STRONG> 
        <P> <EM>To go to the page where a statement or option was presented, select 
          a link.</EM>
      </TD>
    </TR>
  </TABLE>
  <br>
</center>
<P align="center"> 

<TABLE CELLPADDING="2" align="center">
  <TR> 
      <TD><dl><dt><FONT color="#003399"><A HREF="m53_3.htm" onClick="suggestBack()" onMouseOver="window.status='Display details on the %INCLUDE statement.'; "
	      onMouseOut="window.status=''"><STRONG>%INCLUDE</STRONG> <EM>file-specification</EM>  
        <STRONG>&lt;/SOURCE2&gt;</STRONG>;</A></FONT></dt></dl>
		</TD>
  </TR>
  <TR> 
    <TD><dl><dt><FONT color="#003399"><A HREF="m53_10.htm" onClick="suggestBack()"
	      onMouseOver="window.status='Display details on the CATALOG access method.'; "
	      onMouseOut="window.status=''"><STRONG>FILENAME</STRONG> <EM>fileref</EM></A></font></dt> 
      <dt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#003399"><A HREF="m53_10.htm" onClick="suggestBack()"
	      onMouseOver="window.status='Display details on the CATALOG access method.'; "
	      onMouseOut="window.status=''"><STRONG>CATALOG</STRONG> <strong>'</strong><EM>libref.catalog.entry.entry-type</EM><STRONG>';</STRONG></A></font></dt>
	  <dt><font color="#003399"><strong>%INCLUDE</strong> <em>fileref</em>;</FONT></dt></dl>
	  </TD>
  </TR>
  <TR> 
    <TD><dl><dt><FONT color="#003399"><A HREF="m53_11.htm" onClick="suggestBack()" onMouseOver="window.status='Display details on the CATALOG access method.'; "
	      onMouseOut="window.status=''"><STRONG>FILENAME</STRONG> <EM>fileref</EM> <STRONG>CATALOG '</STRONG><em>libref.catalog</em><strong>'</strong>;</A></font></dt>
		  <dt><font color="#003399"><strong>%INCLUDE</strong> <em>fileref(entry-1)</em>;</font></dt>
		  <dt><font color="#003399"><strong>%INCLUDE</strong> <em>fileref(entry-2)</em>;</FONT></dt></dl></TD>
  </TR>
<TR> 
    <TD><dl><dt><FONT color="#003399"><A HREF="m53_8.htm" onClick="suggestBack()" onMouseOver="window.status='Display details on the PROC CATALOG statement.'; "
	      onMouseOut="window.status=''"><STRONG>PROC CATALOG CATALOG=</STRONG><em>libref.catalog</em>;</A></font></dt>
		  <dt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#003399"><A HREF="m53_8.htm" onClick="suggestBack()" onMouseOver="window.status='Display details on the PROC CATALOG statement.'; "
	      onMouseOut="window.status=''"><strong>CONTENTS</strong>;</A></font></dt>
		  <dt><font color="#003399"><strong>QUIT;</strong></font></dt></dl></TD>
  </TR>
  <TR> 
    <TD><dl><dt><FONT color="#003399"><A HREF="m53_19.htm" onClick="suggestBack()" onMouseOver="window.status='Display details on the MAUTOSOURCE system option.';" onMouseOut="window.status=''"><STRONG>OPTIONS</STRONG> 
	<STRONG>MAUTOSOURCE | NOMAUTOSOURCE</STRONG>;</A></FONT></dt></dl></TD>
  </TR>
    <TR> 
    <TD><dl><dt><FONT color="#003399"><A HREF="m53_19.htm" onClick="suggestBack()" onMouseOver="window.status='Display details on the SASAUTOS system option.';" onMouseOut="window.status=''"><STRONG>OPTIONS</STRONG> 
	<STRONG>SASAUTOS=</STRONG><em>library-1</em>;</A></FONT></dt></dl></TD>
  </TR>
  <TR> 
    <TD><dl><dt><FONT color="#003399"><A HREF="m53_19.htm" onClick="suggestBack()" onMouseOver="window.status='Display details on the SASAUTOS system option.';" onMouseOut="window.status=''"><strong>OPTIONS SASAUTOS=</strong> (<em>library-1,...,library-n</em>);</A></FONT></dt></dl></TD>
  </TR>
  <TR> 
    <TD><dl><dt><FONT color="#003399"><A HREF="m53_23.htm" onClick="suggestBack()" onMouseOver="window.status='Display details on the MSTORED system option.';" onMouseOut="window.status=''"><STRONG>OPTIONS</STRONG> 
	<STRONG>MSTORED | NOMSTORED</STRONG>;</A></FONT></dt></dl></TD>
  </TR>
  <TR> 
    <TD><dl><dt><FONT color="#003399"><A HREF="m53_23.htm" onClick="suggestBack()" onMouseOver="window.status='Display details on the SASMSTORE system option.';" onMouseOut="window.status=''"><STRONG>OPTIONS</STRONG> 
	<STRONG>SASMSTORE=</STRONG><em>libref</em>;</A></FONT></dt></dl></TD>
  </TR>
  <TR> 
      <TD><dl><dt><FONT color="#003399"><A HREF="m53_24.htm" onClick="suggestBack()" onMouseOver="window.status='Display details on the stored compiled macro definition.';" onMouseOut="window.status=''"><STRONG>%MACRO</STRONG> 
        <em>macro-name&lt;(parameters)&gt;</em> <STRONG>/STORE</strong></A></font></dt>
		<dt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#003399"><A HREF="m53_24.htm" onClick="suggestBack()" onMouseOver="window.status='Display details on the stored compiled macro definition.';" onMouseOut="window.status=''"> &lt;<strong>DES=</strong>'<em>description</em>'&gt<strong>;</strong></A></FONT></dt>
		<dt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#003399"><em>text</em></font></dt>
		<dt><font color="#003399"><strong>%MEND</strong><em>&lt;macro-name&gt;</em><strong>;</strong></font></dt></dl></TD>
  </TR>
</TABLE>

<P align="center"> 
<center>
  <TABLE cellpadding=0 cellspacing=0 border=0 width="85%">
    <TR> 
      <TD align="left"> 
        <HR>
      </TD>
    </TR>
  </TABLE>
  <br>
</center><!-- InstanceEndEditable -->
<P> 
  <!-- InstanceBeginEditable name="sampleprogram" --> 
  <TABLE cellpadding=0 cellspacing=0 border=0 width="85%">
    <TR> 
      <TD align="left"><STRONG><A NAME="Sample">Sample Programs</A></STRONG>
<P>
        <blockquote><strong>Compiling an Externally Stored Macro Definiton with 
          the %INCLUDE Statement</strong></blockquote>
<font color="#003399">
        <PRE>     %include 'c:\sasfiles\prtlast.sas' / source2;
  
     proc sort data=sasuser.courses out=bydays;
        by days;
     run;

     %prtlast
</PRE>
        </font>
<P><blockquote><strong>Listing the Contents of a Catalog </strong></blockquote>
<font color="#003399">
        <pre>     proc catalog cat=work.sasmacr;
        contents;
        title "Default Storage of SAS Macros";
     quit;</pre>
        </font>
<P><blockquote><strong>Using the Catalog Access Method</strong></blockquote>
<font color="#003399">
        <pre>     filename prtlast catalog 'sasuser.mymacs.prtlast.source';
     %include prtlast;
     proc sort data=sasuser.courses out=bydays;
        by days;
     run;
     %prtlast</pre>
        </font>
<P><blockquote><strong>Accessing an Autocall Macro</strong></blockquote>
<font color="#003399">
        <pre>     options mautosource sasautos=('c:\mysasfiles',sasautos);
     %prtlast</pre>
        </font>
<P><blockquote><strong>Creating a Stored Compiled Macro</strong></blockquote>
<font color="#003399">
        <pre>     libname macrolib 'c:\storedlib';
     options mstored sasmstore=macrolib;

     %macro words(text,root=w,delim=%str( ))/store;
        %local i word;
        %let i=1;
        %let word=%scan(&text,&i,&delim);
        %do %while (&word ne );
           %global &root&i;
           %let &root&i=&word;
           %let i=%eval(&i+1);
           %let word=%scan(&text,&i,&delim);
        %end;
        %global &root.num;
        %let &root.num=%eval(&i-1);
     %mend words;</pre>
        </font>
        <P> 
        <HR>
      </TD>
    </TR>
  </TABLE>
  <br>
  <!-- InstanceEndEditable --> 
<P>
  <!-- InstanceBeginEditable name="pointstoremember" --> 
  <TABLE cellpadding=0 cellspacing=0 border=0 width="85%">
    <TR> 
      <TD align="left"><STRONG><A NAME="Points">Points to Remember</A></STRONG> 
        <UL>
          <LI> You can make macros available to your programs in four ways: as 
            session-compiled macros, with a <nobr>%INCLUDE</nobr> statement, through the autocall 
            facility, or as  stored compiled macros.<BR><BR>
          <LI> If you use the autocall facility, you must specify the MAUTOSOURCE 
            and SASAUTOS system options. <BR><BR>
          <LI>If you use the stored compiled macro facility, you must specify the 
            MSTORED and SASMSTORE system options.<BR><BR>
          <LI>The point at which macro compilation occurs depends on which method 
            you use to access the macro. 
        </UL>
      </TD>
    </TR>
  </TABLE>
  <!-- InstanceEndEditable --></center>
<script>writeNav_regular_bottom();</script>
</body>
<!-- InstanceEnd --></html>