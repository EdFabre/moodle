<html><!-- InstanceBegin template="/Templates/informationObject.dwt" codeOutsideHTMLIsLocked="false" -->
<head>
<SCRIPT LANGUAGE="JavaScript" SRC="../tut.js"></SCRIPT>
<script language="JavaScript" src="../nav.js"></script>
<SCRIPT LANGUAGE="JavaScript">
 setPageTitle();
 setCookie();
  
// Drop down menu link- © Dynamic Drive (www.dynamicdrive.com)
// For full source code and 100's more DHTML scripts, visit http://www.dynamicdrive.com
// Credit MUST stay intact for use -->

</SCRIPT>

<!-- InstanceBeginEditable name="extrascript" --> 
<SCRIPT LANGUAGE="JavaScript">
</SCRIPT>
<!-- InstanceEndEditable -->

<link rel="stylesheet" href="../tut.css">


<META http-equiv="Content-Type" content="text/html; charset=windows-1252">
</HEAD>

<body marginheight="0" marginwidth="0" topmargin="0" leftmargin="0" rightmargin="0" bgcolor="#FFFFF0">
<script>writeinformationObjectTopNav1();</script>
	  
	  <font color="#003399" size="3" face="Arial, Helvetica, sans-serif"><strong><!-- InstanceBeginEditable name="TopicTitle" -->Storing 
      Macro Definitions in External Files<!-- InstanceEndEditable --></strong></font> <!-- InstanceBeginEditable name="continued" --><!-- InstanceEndEditable -->
	  
<script>writeinformationObjectTopNav2();</script>
<br>
<center>
  <!-- InstanceBeginEditable name="content" --> 
<table width="85%" border="0" cellpadding="0" cellspacing="0" align="center">
  <tr valign="top"> 
    <td>
<P> One way to store macro programs permanently is to save them to an external 
          file. You can then use the <nobr>%INCLUDE</nobr> statement to insert 
          the statements that are stored in the external file into a program. 
          If the external file contains a macro definition, the macro is compiled 
          when the <nobr>%INCLUDE</nobr> statement is submitted. Then the macro 
          can be called again later in the same program, or anytime later in the 
          current SAS session. </td></tr></table>
<P><BR>
<table border="1" cellspacing="0" cellpadding="10" width="85%" bgcolor="#F7F7DE" align="center" title="General form, %INCLUDE statement">
    <tr> 
      <td align="left"><STRONG>General form, %INCLUDE statement:</STRONG>
	  <BLOCKQUOTE> <FONT COLOR="#003399"><STRONG>%INCLUDE</STRONG> <em>file-specification</em> 
          &lt;/<strong>SOURCE2</strong>&gt;;</FONT> </BLOCKQUOTE>
	  <P>
	  where
       <UL>
	    <LI>
	      <FONT COLOR="#003399"><em>file-specification</em></FONT> describes the location of the file that contains the SAS code to be inserted.<BR><BR>
	      <LI><font color="#003399"><strong>SOURCE2</strong></font> causes the SAS 
            statements that are inserted into the program to be displayed in the 
            SAS log. If SOURCE2 is not specified in the <nobr>%INCLUDE</nobr> 
            statement, then the setting of the <strong>SAS system option</strong> 
            SOURCE2 controls whether the inserted code is displayed. 
        </UL>
      </td>
    </tr>
  </table>
<P><BR>
<table width="85%" border="0" cellpadding="0" cellspacing="0" align="center">
  <tr valign="top"> 
    <td>By storing your macro program externally and using the <nobr>%INCLUDE</nobr> statement, you gain several advantages over using session-compiled macros.
<ul>
<li>The source code for the macro definition does not need to be part of your program.<br><br>
<li>A single copy of a macro definition can be shared by many programs.<br><br>
<li>Macro definitions in external files are easily viewed and edited with any text editor.<br><br>
<li>No special SAS system options are required in order to access a macro definition that is stored in an external file.
</ul>
   </td>
  </tr>
</table><P>
<!-- InstanceEndEditable --> 
</center>
<script>writeNav_regular_bottom();</script>
</body>
<!-- InstanceEnd --></html>
