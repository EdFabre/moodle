<html><!-- InstanceBegin template="/Templates/informationObject.dwt" codeOutsideHTMLIsLocked="false" -->
<head>
<SCRIPT LANGUAGE="JavaScript" SRC="../tut.js"></SCRIPT>
<script language="JavaScript" src="../nav.js"></script>
<SCRIPT LANGUAGE="JavaScript">
 setPageTitle();
 setCookie();
  
// Drop down menu link- © Dynamic Drive (www.dynamicdrive.com)
// For full source code and 100's more DHTML scripts, visit http://www.dynamicdrive.com
// Credit MUST stay intact for use -->

</SCRIPT>

<!-- InstanceBeginEditable name="extrascript" -->
<SCRIPT LANGUAGE="JavaScript">


</SCRIPT>
<!-- InstanceEndEditable -->

<link rel="stylesheet" href="../tut.css">


<META http-equiv="Content-Type" content="text/html; charset=windows-1252">
</HEAD>

<body marginheight="0" marginwidth="0" topmargin="0" leftmargin="0" rightmargin="0" bgcolor="#FFFFF0">
<script>writeinformationObjectTopNav1();</script>
	  
	  <font color="#003399" size="3" face="Arial, Helvetica, sans-serif"><strong><!-- InstanceBeginEditable name="TopicTitle" -->Using 
      the Autocall Facility<!-- InstanceEndEditable --></strong></font> <!-- InstanceBeginEditable name="continued" --><font color="#003399" size="3" face="Arial, Helvetica, sans-serif">(continued)</font><!-- InstanceEndEditable -->
	  
<script>writeinformationObjectTopNav2();</script>
<br>
<center>
  <!-- InstanceBeginEditable name="content" -->
<table width="85%" border="0" cellpadding="0" cellspacing="0" align="center">
  <tr valign="top"> 
    <td>
<h2>Creating an Autocall Library</h2> 
      <P>An autocall library can be either 
      <ul>
	      <li>a directory that contains source files 
          <li>a partitioned data set (PDS)</li>
	      <li>a SAS catalog.</li>
      </ul>
     The method for creating an autocall library depends on the operating environment 
        that you are using. 
        <P>To create an autocall library in a directory-based operating system such 
        as Windows, UNIX, or OpenVMS, create a directory in which to store macro 
        definitions. Each macro definition in this directory  
        will be a separate file that has the extension <strong>.sas</strong> and that has the 
        same name as the macro that it contains. <P><BR>
<h2>Example</h2>
        <P>Suppose you want to save the macro <strong>Prtlast</strong> in an autocall 
          library. In a directory-based operating system, the first step is to 
          create a directory that will hold your macro source files. You can use 
          the Save As window to create the directory, and to save the macro definition 
          in that directory. 
With the <strong>Prtlast</strong> definition in an active code editing 
window, select <strong>File</strong><img src="../navimages/arrow.gif" 
alt="then" width="14" height="10"><strong>Save 
As</strong>. In the Save As window, navigate to the location where you 
want to create your autocall library. Select <strong>New Folder</strong>, 
enter the directory name, and click <strong>OK</strong>. Then enter 
<strong>Prtlast</strong> as the filename, make sure the file type is<strong> 
.sas</strong>, and click <strong>Save</strong>.<P> 
<table border="0" cellpadding="2" cellspacing="0">
<tr><td valign="top" width="24"><img src="../navimages/tip.gif" width="20" 
height="20" alt="More Information"></td> 
<td valign="top">You could also use the FILE command to save your macro 
definition in an autocall library. To use the FILE command, you enter  
<font color="#003399"><code>file 
'<em>&lt;path&gt;</em>external-file-name'</code>
</font> in the command line.</td></tr></table>
	    </td>
  </tr>
</table>
<P><BR>
<!-- InstanceEndEditable --> 
</center>
<script>writeNav_regular_bottom();</script>
</body>
<!-- InstanceEnd --></html>
