<html><!-- InstanceBegin template="/Templates/opt_example.dwt" codeOutsideHTMLIsLocked="false" -->
<head>
<SCRIPT LANGUAGE="JavaScript" SRC="../tut.js"></SCRIPT>
<script language="JavaScript" src="../nav.js"></script>
<SCRIPT LANGUAGE="JavaScript">
 setPageTitle();
 setCookie();
 
// Drop down menu link- © Dynamic Drive (www.dynamicdrive.com)
// For full source code and 100's more DHTML scripts, visit http://www.dynamicdrive.com
// Credit MUST stay intact for use -->

</SCRIPT>

<!-- InstanceBeginEditable name="extrascript" -->
<SCRIPT LANGUAGE="JavaScript">
</SCRIPT>
<!-- InstanceEndEditable -->

<link rel="stylesheet" href="../tut.css">

<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"><title>Example</title></head>

<body marginheight="0" marginwidth="0" topmargin="0" leftmargin="0" rightmargin="0" bgcolor="#FFFFF0">

<script>writeinformationObjectTopNav1();</script>
      
	  <font color="#003399" size="3" face="Arial, Helvetica, sans-serif"><strong><!-- InstanceBeginEditable name="TopicTitle" -->Using 
      the SASFILE Statement<!-- InstanceEndEditable --></strong></font> 
      <!-- InstanceBeginEditable name="continued" --><font color="#003399" size="3" face="Arial, Helvetica, sans-serif">(continued)</font><!-- InstanceEndEditable -->
	  
<script>writeinformationObjectTopNav2();</script>

<img src="../navimages/cleardot.gif" width="411" height="1" alt=" "><br>
<p>
<!-- InstanceBeginEditable name="Example Title" -->
<table width="85%" border="0" align="center" cellpadding="0" cellspacing="0">
  <tr valign="top"> 
    <td> <h2><img src="../navimages/opt_ex.gif" alt="Bar chart icon" width="32" height="32" align="absmiddle">Comparative 
        Example: Using the SASFILE Statement</h2></td>
  </tr>
</table>
<!-- InstanceEndEditable --><!-- InstanceBeginEditable name="Introduction" --> 
<table width="85%" border="0" align="center" cellpadding="0" cellspacing="0">
  <tr valign="top"> 
    <td> <p>Suppose you want to create multiple reports from SAS data files that 
        vary in size. Using small, medium, and large data files, you can compare 
        the resource usage when the PRINT, TABULATE, MEANS, and FREQ procedures 
        are used with and without the SASFILE statement to create reports. 
      <p>
      <table border="1" align="center" cellpadding="2" cellspacing="0" bgcolor="#FFFFFF" title="Data Set Information">
        <tr valign="top" bgcolor="#F7F7DE"> 
          <th><font size="-1">Name of Data File</font></th>
          <th><font size="-1">Number of Rows</font></th>
          <th><font size="-1">Page Size</font></th>
          <th><font size="-1">Number of Pages</font></th>
          <th><font size="-1">Number of Bytes</font></th>
        </tr>
        <tr valign="top"> 
          <td><strong>Retail.Small</strong></td>
          <td>45,876 </td>
          <td>24,576</td>
          <td>540</td>
          <td>13,279,232</td>
        </tr>
        <tr valign="top"> 
          <td><strong>Retail.Medium</strong></td>
          <td>458,765</td>
          <td>24,576</td>
          <td>5,398</td>
          <td>132,669,440</td>
        </tr>
        <tr valign="top"> 
          <td><strong>Retail.Large</strong></td>
          <td>4,587,654</td>
          <td>24,576 </td>
          <td>53,973</td>
          <td>1,326,448,640</td>
        </tr>
      </table> 
      <ol>
        <li><a href="#1">Small Data File without the SASFILE Statement</a></li>
        <li><a href="#2">Medium Data File without the SASFILE Statement</a></li>
        <li><a href="#3">Large Data File without the SASFILE Statement</a></li>
        <li><a href="#4">Small Data File with the SASFILE Statement</a></li>
        <li><a href="#5">Medium Data File with the SASFILE Statement</a></li>
        <li><a href="#6">Large Data File with the SASFILE Statement</a>.</li>
      </ol>
      <p>The following sample programs show each of these techniques. You can 
        use these samples as models for creating benchmark programs in your own 
        environment. Your results might vary depending on the structure of your 
        data, your operating environment, and the resources that are available 
        at your site. You can also view <a href="#recommendations">general recommendations</a> 
        for using the SASFILE statement. 
      <hr size="1" noshade></td>
  </tr>
</table>
<!-- InstanceEndEditable -->
<p> 
  
<table width="85%" border="0" align="center" cellpadding="0" cellspacing="0">
  <tr valign="top"> 
      <td> <h2><!-- InstanceBeginEditable name="Technique Title" --><a name="techniques"></a>Programming 
        Techniques<!-- InstanceEndEditable --></h2></td>
    </tr>
  </table>
<!-- InstanceBeginEditable name="Techniques" --> 
<table width="85%" border="1" align="center" cellpadding="10" cellspacing="0" bgcolor="#FFFFFF" title="Program 1">
  <tr> 
    <td bgcolor="#F7F7DE"> <p><strong><a name="1"></a><img src="../navimages/opt_1.gif" alt="1." width="20" height="20" align="absmiddle"> 
        Small Data File without the SASFILE Statement</strong></p>
      <blockquote> 
        <p>This program creates reports using the PRINT, TABULATE, MEANS, and 
          FREQ procedures. The SAS data file <strong>Retail.Small </strong> is 
          opened and closed with each procedure.</p>
      </blockquote>
      <p> 
      <blockquote> 
        <pre><font color="#003399">      <strong>proc print data=retail.small;</strong><br>         where cs=100;<br>         var Customer_Age_Group;<br>      run;<br>      <strong>proc tabulate data=retail.small;</strong><br>         class Customer_Age_Group;<br>         var Customer_BirthDate;<br>         table Customer_Age_Group,Customer_BirthDate*(mean median);<br>      run;<br>      <strong>proc means data=retail.small;</strong><br>         var Customer_Age;<br>         class Customer_Group;<br>         output out=summary sum=;<br>      run;<br>      <strong>proc freq data=retail.small;</strong><br>         tables Customer_Country;<br>      run;<br></font></pre>
      </blockquote></td>
  </tr>
</table>
<p><br>
<table width="85%" border="1" align="center" cellpadding="10" cellspacing="0" bgcolor="#FFFFFF" title="Program 2">
  <tr> 
    <td bgcolor="#F7F7DE"> <p><strong><a name="2" id="2"></a><img src="../navimages/opt_2.gif" alt="2." width="20" height="20" align="absmiddle"> 
        Medium Data File without the SASFILE Statement</strong></p>
      <blockquote> 
        <p>This program creates reports using the PRINT, TABULATE, MEANS, and 
          FREQ procedures. The SAS data file <strong>Retail.Medium</strong> is 
          opened <strong></strong>and closed with each procedure. </p>
      </blockquote>
      <p> 
      <blockquote> 
        <pre><font color="#003399">      <strong>proc print data=retail.medium;</strong><br>         where cm=100;<br>         var Customer_Age_Group;<br>      run;<br>      <strong>proc tabulate data=retail.medium;</strong><br>         class Customer_Age_Group;<br>         var Customer_BirthDate;<br>         table Customer_Age_Group,Customer_BirthDate*(mean median);<br>      run;<br>      <strong>proc means data=retail.medium;</strong><br>         var Customer_Age;<br>         class Customer_Group;<br>         output out=summary sum=;<br>      run;<br>      <strong>proc freq data=retail.medium;</strong><br>         tables Customer_Country;<br>      run;<br></font></pre>
      </blockquote></td>
  </tr>
</table>
<p><br>
<table width="85%" border="1" align="center" cellpadding="10" cellspacing="0" bgcolor="#FFFFFF" title="Program 3">
  <tr> 
    <td bgcolor="#F7F7DE"> <p><strong><a name="3" id="3"></a><img src="../navimages/opt_3.gif" alt="2." width="20" height="20" align="absmiddle"> 
        Large Data File without the SASFILE Statement</strong></p>
      <blockquote> 
        <p>This program creates reports using the PRINT, TABULATE, MEANS, and 
          FREQ procedures. The SAS data file <strong>Retail.Large</strong> is opened 
          <strong></strong>and closed with each procedure. </p>
      </blockquote>
      <p> 
      <blockquote> 
        <pre><font color="#003399">      <strong>proc print data=retail.large;</strong><br>         where cl=100;<br>         var Customer_Age_Group;<br>      run;<br>      <strong>proc tabulate data=retail.large;</strong><br>         class Customer_Age_Group;<br>         var Customer_BirthDate;<br>         table Customer_Age_Group,Customer_BirthDate*(mean median);<br>      run;<br>      <strong>proc means data=retail.large;</strong><br>         var Customer_Age;<br>         class Customer_Group;<br>         output out=summary sum=;<br>      run;<br>      <strong>proc freq data=retail.large;</strong><br>         tables Customer_Country;<br>      run;<br></font></pre>
      </blockquote></td>
  </tr>
</table>
<p><br>
<table width="85%" border="1" align="center" cellpadding="10" cellspacing="0" bgcolor="#FFFFFF" title="Program 4">
  <tr> 
    <td bgcolor="#F7F7DE"> <p><strong><a name="4" id="4"></a><img src="../navimages/opt_4.gif" alt="4." width="20" height="20" align="absmiddle"> 
        Small Data File with the SASFILE Statement</strong></p>
      <blockquote> 
        <p>In this program, the SASFILE LOAD statement opens the SAS data file 
          <strong>Retail.Small</strong> and loads the entire file into memory. 
          The data is then available to the PRINT, TABULATE, MEANS, and FREQ procedures. 
          The SASFILE CLOSE statement closes <strong>Retail.Small</strong> and 
          frees the buffers. </p>
        </blockquote>
      <p> 
      <blockquote> 
        <pre><font color="#003399">      <strong>sasfile retail.small load;</strong>
      <strong>proc print data=retail.small;</strong><br>      <font color="#FF0000">   </font></font><font color="#003399">where cs=100;</font><font color="#003399"><br>         var Customer_Age_Group;<br>      run;<br>      <strong>proc tabulate data=retail.small;</strong><br>         class Customer_Age_Group;<br>         var Customer_BirthDate;<br>         table Customer_Age_Group,Customer_BirthDate*(mean median);<br>      run;<br>      <strong>proc means data=retail.small;</strong><br>         var Customer_Age;<br>         class Customer_Group;<br>         output out=summary sum=;<br>      run;<br>      <strong>proc freq data=retail.small;</strong><br>         tables Customer_Country;<br>      run;
      <strong>sasfile retail.small close;</strong></font></pre>
      </blockquote></td>
  </tr>
</table>
<p><br>
<table width="85%" border="1" align="center" cellpadding="10" cellspacing="0" bgcolor="#FFFFFF" title="Program 5">
  <tr> 
    <td bgcolor="#F7F7DE"> <p><strong><a name="5" id="5"></a><img src="../navimages/opt_5.gif" alt="5." width="20" height="20" align="absmiddle"> 
        Medium Data File with the SASFILE Statement</strong></p>
      <blockquote> 
        <p>In this program, the SASFILE LOAD statement opens the SAS data file 
          <strong>Retail.Medium</strong> and loads the entire file into memory. 
          The data is then available to the PRINT, TABULATE, MEANS, and FREQ procedures. 
          The SASFILE CLOSE statement closes <strong>Retail.Medium</strong> and 
          frees the buffers. </p>
      </blockquote>
      <p> 
      <blockquote> 
        <pre><font color="#003399">      <strong>sasfile retail.medium load;</strong>
      <em>proc print data=<strong>retail.medium</strong>;</em><br>         where cm=100;<br>         var Customer_Age_Group;<br>      run;<br>      proc tabulate data=<strong>retail.medium</strong>;<br>         class Customer_Age_Group;<br>         var Customer_BirthDate;<br>         table Customer_Age_Group,Customer_BirthDate*(mean median);<br>      run;<br>      proc means data=<strong>retail.medium</strong>;<br>         var Customer_Age;<br>         class Customer_Group;<br>         output out=summary sum=;<br>      run;<br>      proc freq data=<strong>retail.medium</strong>;<br>         tables Customer_Country;<br>      run;
      <strong>sasfile retail.medium close;</strong></font></pre>
      </blockquote></td>
  </tr>
</table>
<p><br>
<table width="85%" border="1" align="center" cellpadding="10" cellspacing="0" bgcolor="#FFFFFF" title="Program 6">
  <tr> 
    <td bgcolor="#F7F7DE"> <p><strong><a name="6" id="6"></a><img src="../navimages/opt_6.gif" alt="6." width="20" height="20" align="absmiddle"> 
        Large Data File with the SASFILE Statement</strong></p>
      <blockquote> 
        <p>In this program, the SASFILE LOAD statement opens the SAS data file 
          <strong>Retail.Large</strong> and loads the entire file into memory. 
          The data is then available to the PRINT, TABULATE, MEANS, and FREQ procedures. 
          The SASFILE CLOSE statement closes <strong>Retail.Large</strong> and 
          frees the buffers. </p>
      </blockquote>
      <p> 
      <blockquote> 
        <pre><font color="#003399">      <strong>sasfile retail.medium load;</strong>
      <strong>proc print data=retail.large;</strong><br>         where cl=100;<br>         var Customer_Age_Group;<br>      run;<br>      <strong>proc tabulate data=retail.large;</strong><br>         class Customer_Age_Group;<br>         var Customer_BirthDate;<br>         table Customer_Age_Group,Customer_BirthDate*(mean median);<br>      run;<br>      <strong>proc means data=retail.large;</strong><br>         var Customer_Age;<br>         class Customer_Group;<br>         output out=summary sum=;<br>      run;<br>      proc freq data=<strong>retail.large</strong>;<br>         tables Customer_Country;<br>      run;</font>
      <font color="#003399"><strong>sasfile retail.large close;</strong></font></pre>
      </blockquote></td>
  </tr>
</table>
<!-- InstanceEndEditable --> 
<table width="85%" border="0" align="center" cellpadding="0" cellspacing="0">
  <tr> 
      <td> <hr size="1" noshade> </td>
    </tr>
  </table>
<p>
<table width="85%" border="0" align="center" cellpadding="0" cellspacing="0">
  <tr valign="top"> 
    <td> <h2><a name="recommendations"></a><script>document.write(generalRecommendationsTitle);</script></h2></td>
  </tr>
</table>
<!-- InstanceBeginEditable name="Recommendations" -->
<table width="85%" border="0" align="center" cellpadding="0" cellspacing="0">
  <tr> 
    <td> <ul>
        <li>If you need to repeatedly process a SAS data file that will fit entirely 
          in memory, use the SASFILE statement to reduce I/O and some CPU usage.<br>
          <br>
        </li>
        <li> If you use the SASFILE statement and the SAS data file will not fit 
          entirely in memory, the code will execute, but there might be a degradation 
          in performance.<br>
          <br>
        </li>
        <li>If you need to repeatedly process part of a SAS data file and the 
          entire file won't fit into memory, use a DATA step with the SASFILE 
          statement to create a subset of the file that does fit into memory, 
          and then process that subset repeatedly. This saves CPU time in the 
          processing steps because those steps will read a smaller file, in addition 
          to the benefit of the file being resident in memory. </li>
      </ul>
      </td>
  </tr>
</table>
<!-- InstanceEndEditable -->
<script>writeNav_regular_bottom();</script>
</body>
<!-- InstanceEnd --></html>
