<html><!-- InstanceBegin template="/Templates/summary.dwt" codeOutsideHTMLIsLocked="false" -->
<head>

<SCRIPT LANGUAGE="JavaScript" SRC="../tut.js"></SCRIPT>
<script language="JavaScript1.2" src="../nav.js"></script>


<SCRIPT LANGUAGE="JavaScript">
 setPageTitle();
 setCookie();
 
// Drop down menu link- © Dynamic Drive (www.dynamicdrive.com)
// For full source code and 100's more DHTML scripts, visit http://www.dynamicdrive.com
// Credit MUST stay intact for use -->

</SCRIPT>

<!-- InstanceBeginEditable name="extrascript" --> 
<SCRIPT LANGUAGE="JavaScript">
</SCRIPT>
<!-- InstanceEndEditable -->

<link rel="stylesheet" href="../tut.css">

<META http-equiv="Content-Type" content="text/html; charset=windows-1252">
</HEAD>

<body marginheight="0" marginwidth="0" topmargin="0" leftmargin="0" rightmargin="0" bgcolor="#FFFFF0">
<script>writeinformationObjectTopNav1();</script>
 
      <font color="#003399" size="3" face="Arial, Helvetica, sans-serif"><strong><script>document.write(summaryTitle)</script></strong></font>
 
 
<script>writeinformationObjectTopNav2();</script>
<br>
<center><TABLE cellpadding=0 cellspacing=0 border=0 width="85%" align="center">
  <TR>
      <TD align="left">
      
      <p><script>document.write(summaryPageContains)</script></p>
     <ul><!-- InstanceBeginEditable name="links" --> 
        <LI> <A HREF="#Text" onMouseOver="window.status='Go to the text summary section.'; "
		onMouseOut="window.status=''">a text summary of the material taught in 
          the lesson</A> 
        <LI> <A HREF="#Syntax" onMouseOver="window.status='Go to the syntax section.'; "
		onMouseOut="window.status=''">syntax for&nbsp;statements and options</A> 
          <LI> <A HREF="#Sample" onMouseOver="window.status='Go to the sample program section.'; "
		onMouseOut="window.status=''">sample programs</A> 
          <LI> <A HREF="#Points" onMouseOver="window.status='Go to the points to remember section.'; "
		onMouseOut="window.status=''">points to remember</A>. 
        <!-- InstanceEndEditable --></ul>
<P>
	  <HR>
      </TD>
    </TR>
  </TABLE>
  <P>

<!-- InstanceBeginEditable name="textsummaryintro" -->     
<TABLE cellpadding=0 cellspacing=0 border=0 width="85%" align="center">
  <TR>
	<TD align="left"><h2><STRONG><A NAME="Text"><script>document.write(summaryPageTextSummaryTitle);</script></A></STRONG> </h2>
      <P>
	  <EM><script>document.write(summaryPageDirections);</script></EM></TD>
      </TR>
    </TABLE>
<!-- InstanceEndEditable -->
  <br>
<!-- InstanceBeginEditable name="textsummary" --> 
<table width="85%" border="0" cellpadding="0" cellspacing="0" align="center">
  <tr valign="top"> 
    <td> 
      <p><strong>Purpose of SAS Arrays</strong><br>
        An array is a temporary grouping of variables under a <a href="m35_2.htm" onClick="suggestBack()" onMouseOver="window.status='Display details on the use of arrays.'; "
	    onMouseOut="window.status=''">single name</a>. This can reduce the number 
        of statements needed to process variables and can simplify the maintenance 
        of DATA step programs. </p>
      <p> <strong>Defining an Array</strong><br>
        To group previously defined data set variables into an array, use an <a href="m35_3.htm" onClick="suggestBack()" onMouseOver="window.status='Display details on defining arrays.';" onMouseOut="window.status=''">ARRAY 
        statement</a> that specifies the array's name; its dimension enclosed 
        in braces, brackets, or parentheses; and the elements to include. For 
        example: <nobr><code><font color="#003399">array sales{4} qtr1 qtr2 qtr3 
        qtr4;</font></code></nobr> 
      <p> <strong>Variable Lists as Array Elements</strong><br>
        You can use a <a href="m35_4.htm" onClick="suggestBack()" onMouseOver="window.status='Display details on variable lists.';" onMouseOut="window.status=''">variable 
        list</a> to specify array elements. Depending on the form of the variable 
        list, it can specify all numeric or all character variables, or a numbered 
        range of variables. 
      <p> <strong>Referencing Elements of an Array</strong><br>
        When you define an array in a DATA step, an index value is assigned to 
        each element. During execution, you can use an <a href="m35_7.htm" onClick="suggestBack()" onMouseOver="window.status='Display details on array references.'; "
	    onMouseOut="window.status=''">array reference</a> to perform actions on 
        specific array elements. When used in a DO loop, for example, the index 
        variable of the iterative DO statement can reference each element of the 
        array. 
      <p> <strong>The DIM Function</strong><br>
        When using DO loops to process arrays, you can also use the <a href="m35_11.htm" onClick="suggestBack()" onMouseOver="window.status='Display details on the DIM function.'; "
	    onMouseOut="window.status=''">DIM function</a> to specify the TO clause 
        of the iterative DO statement. When you use the DIM function, you do not 
        have to re-specify the stop value of a DO statement if you change the 
        dimension of the array. 
      <p> <strong>Creating Variables with the ARRAY Statement</strong><br>
        If you don't specify array elements in an ARRAY statement, SAS 
        automatically <a href="m35_14.htm" onClick="suggestBack()" onMouseOver="window.status='Display details on creating variables.';"
	    onMouseOut="window.status=''">creates the variables</a> for you by concatenating 
        the array name and the numbers 1, 2, 3 ... up to the array dimension. 
        To create an array of character variables, add a dollar sign (<code>$</code>) 
        after the array dimension. By default, all character variables that are 
        created with an ARRAY statement are assigned a length of 8; however, you 
        can specify a different length after the dollar sign. 
      <p> <strong>Assigning Initial Values to Arrays</strong><br>
        To assign <a href="m35_18.htm" onClick="suggestBack()" onMouseOver="window.status='Display details on assigning initial values.'; "
	    onMouseOut="window.status=''">initial values</a> in an ARRAY statement, 
        place the values in parentheses after the array elements, specifying one 
        initial value for each array element and separating each value with a 
        comma or blank. To assign initial values to character variables, enclose 
        each value in quotation marks. 
      <p> <strong>Creating Temporary Array Elements</strong><br>
        You can create temporary array elements for DATA step processing without 
        creating additional variables. Just specify <a href="m35_20.htm" onClick="suggestBack()" onMouseOver="window.status='Display details on temporary array elements.'; "
	    onMouseOut="window.status=''">_TEMPORARY_</a> after the array name and 
        dimension. This is useful when the array is needed only to perform a calculation. 
      <p> <strong>Multidimensional Arrays</strong><br>
        To define a multidimensional array, specify the number of elements in 
        <a href="m35_23.htm" onClick="suggestBack()" onMouseOver="window.status='Display details on multidimensional arrays.';" onMouseOut="window.status=''">each 
        dimension</a>, separated by a comma. For example, <nobr><code><font color="#003399">array 
        new{3,4} x1-x12;</font></code></nobr> defines a two-dimensional array, 
        with the first dimension specifying the number of rows (3) and the second 
        dimension specifying the number of columns (4). 
      <p> <strong>Referencing Elements of a Two-Dimensional Array</strong><br>
        Multidimensional arrays are typically used with nested DO loops. If a 
        DO loop processes a two-dimensional array, you can <a href="m35_26.htm" onClick="suggestBack()" onMouseOver="window.status='Display details on referencing elements of two-dimensional arrays.';" onMouseOut="window.status=''">reference 
        any element</a> within the array by specifying the two dimensions. 
      <p> <strong>Rotating Data Sets</strong><br>
        You can use arrays to <a href="m35_32.htm" onClick="suggestBack()" onMouseOver="window.status='Display details on rotating data sets.';" onMouseOut="window.status=''">rotate 
        a data set</a>. Rotating a data set changes variables to observations 
        or observations to variables. 
    </td>
  </tr>
</table>
<!-- InstanceEndEditable --> <br>
<table cellpadding=0 cellspacing=0 border=0 width="85%" align="center">
  <tr> 
    <td align="left"> 
      <hr>
    </td>
  </tr>
</table>

<P><!-- InstanceBeginEditable name="syntax" --> 
<center>
  <TABLE cellpadding=0 cellspacing=0 border=0 width="85%">
    <TR> 
      <TD><STRONG><A NAME="Syntax">Syntax</A></STRONG> 
        <P> <em>To go to the page where a statement or option was presented, select 
          a link.</em> 
        <p> 
          <blockquote> <nobr> <font color="#003399"><a href="m35_3.htm" onClick="suggestBack()" onMouseOver="window.status='Display details on ARRAY statement syntax.'; "
	      onMouseOut="window.status=''"><strong>ARRAY</strong> <em>array-name</em><strong>{</strong><em>dimension</em><strong>}</strong> 
            <em>&lt;elements&gt;</em><strong>;</strong></a></font></nobr> 
            <p> <font color="#003399"><a href="m35_7.htm" onClick="suggestBack()" onMouseOver="window.status='Display details on ARRAY reference.'; "
	      onMouseOut="window.status=''"><em>array-name</em><strong>(</strong><em>index 
            value</em><strong>)</strong></a></font> 
          <p> <font color="#003399"><a href="m35_11.htm" onClick="suggestBack()" onMouseOver="window.status='Display details on the DIM function.'; "
	      onMouseOut="window.status=''"><strong>DIM(</strong><em>array-name</em><strong>)</strong></a></font> 
        </blockquote>
	</TD>
    </TR>
  </TABLE>

  <TABLE cellpadding=0 cellspacing=0 border=0 width="85%">
    <TR> 
      <TD align="left"> 
        <HR>
      </TD>
    </TR>
  </TABLE>
  <br>
</center>
<!-- InstanceEndEditable -->
<P> 
  <!-- InstanceBeginEditable name="sampleprogram" --> 
  <TABLE cellpadding=0 cellspacing=0 border=0 width="85%">
    <TR> 
      <TD align="left"><strong><a name="Sample">Sample Programs</a></strong> <pre><font color="#003399">     data work.report(drop=i);</font>
<font color="#003399">        set master.temps;</font>
<font color="#003399">        array wkday{7} mon tue wed thr fri sat sun;</font>
<font color="#003399">        do i=1 to 7;</font>
<font color="#003399">           wkday<code>{i}</code>=5*(wkday<code>{i}</code>-32)/9;</font>
<font color="#003399">        end;</font>
<font color="#003399">     run;</font>

<font color="#003399">     data hrd.convert(drop=i);</font>
<font color="#003399">        set hrd.fitclass;</font>
<font color="#003399">        array wt{6} weight1-weight6;</font>
<font color="#003399">        do i=1 to dim(wt);</font>
<font color="#003399">           wt<code>{i}</code>=wt<code>{i}</code>*2.2046;</font>
<font color="#003399">        end;</font>
<font color="#003399">     run;</font>

<font color="#003399">     data hrd.diff(drop=i);</font>
<font color="#003399">        set hrd.convert;</font>
<font color="#003399">        array wt{6} weight1-weight6;</font>
<font color="#003399">        array WgtDiff{5};</font>
<font color="#003399">        do i=1 to 5;</font>
<font color="#003399">           wgtdiff<code>{i}</code>=wt{i+1{-wt<code>{i}</code>;</font>
<font color="#003399">        end;</font>
<font color="#003399">     run;</font>

<font color="#003399">     data finance.report(drop=i);</font>
<font color="#003399">        set finance.qsales;</font>
<font color="#003399">        array sale{4} sales1-sales4;</font>
<font color="#003399">        array goal{4} _temporary_ (9000 9300 9600 9900);</font>
<font color="#003399">        array Achieved{4};</font>
<font color="#003399">        do i=1 to 4;</font>
<font color="#003399">           achieved<code>{i}</code>=100*sale<code>{i}</code>/goal<code>{i}</code>;</font>
<font color="#003399">        end;</font>
<font color="#003399">     run;</font>

<font color="#003399">     data finance.quarters(drop=i j);</font>
<font color="#003399">        set finance.monthly;</font>
<font color="#003399">        array m{4,3} month1-month12;</font>
<font color="#003399">        array Qtr{4};</font>
<font color="#003399">        do i=1 to 4;</font>
<font color="blue"><strong>          </strong></font><font color="#003399">qtr<code>{i}</code>=0;</font>
<font color="#003399">           do j=1 to 3;</font>
<font color="#003399">              qtr<code>{i}</code>+m{i,j};</font>
<font color="#003399">           end;</font>
<font color="#003399">        end;</font>
<font color="#003399">     run;</font></pre> 
        <P> 
        <HR>
      </TD>
    </TR>
  </TABLE>
  <br>
  <!-- InstanceEndEditable --> 
<P>
  <!-- InstanceBeginEditable name="pointstoremember" --> 
  <TABLE cellpadding=0 cellspacing=0 border=0 width="85%">
    <TR> 
      <TD align="left"><STRONG><A NAME="Points">Points to Remember</A></STRONG> 
        <br>
        <ul>
          <li> A SAS array exists only for the duration of the DATA step. <br>
            <br>
          <li> Do not give an array the same name as a variable in the same DATA 
            step. Also, avoid using the name of a SAS function as an array name; 
            the array will be correct, but you won't be able to use the function 
            in the same DATA step, and a warning will be written to the SAS log. 
            <br>
            <br>
          <li> You can indicate the dimension of a one-dimensional array with 
            an asterisk (<code>*</code>) as long as you specify the elements of 
            the array. <br>
            <br>
          <li> When referencing array elements, be careful not to confuse variable 
            names with the array references. <code>WgtDiff1</code> through <code>WgtDiff5</code> 
            is not the same as <code>WgtDiff(1)</code> through <code>WgtDiff(5)</code>.
        </ul>
        </TD>
    </TR>
  </TABLE>
  <!-- InstanceEndEditable --></center>
<script>writeNav_regular_bottom();</script>
</body>
<!-- InstanceEnd --></html>