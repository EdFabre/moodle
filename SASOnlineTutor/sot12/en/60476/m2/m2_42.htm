<html><!-- InstanceBegin template="/Templates/informationObject.dwt" codeOutsideHTMLIsLocked="false" -->
<head>
<SCRIPT LANGUAGE="JavaScript" SRC="../tut.js"></SCRIPT>
<script language="JavaScript" src="../nav.js"></script>
<SCRIPT LANGUAGE="JavaScript">
 setPageTitle();
 setCookie();
  
// Drop down menu link- © Dynamic Drive (www.dynamicdrive.com)
// For full source code and 100's more DHTML scripts, visit http://www.dynamicdrive.com
// Credit MUST stay intact for use -->

</SCRIPT>

<!-- InstanceBeginEditable name="extrascript" --> 
<SCRIPT LANGUAGE="JavaScript">
</SCRIPT>
<!-- InstanceEndEditable -->

<link rel="stylesheet" href="../tut.css">


<META http-equiv="Content-Type" content="text/html; charset=windows-1252">
</HEAD>

<body marginheight="0" marginwidth="0" topmargin="0" leftmargin="0" rightmargin="0" bgcolor="#FFFFF0">
<script>writeinformationObjectTopNav1();</script>
	  
	  <font color="#003399" size="3" face="Arial, Helvetica, sans-serif"><strong><!-- InstanceBeginEditable name="TopicTitle" -->Additional 
      Features<!-- InstanceEndEditable --></strong></font> <!-- InstanceBeginEditable name="continued" --><font color="#003399" size="3" face="Arial, Helvetica, sans-serif">(continued)</font><!-- InstanceEndEditable -->
	  
<script>writeinformationObjectTopNav2();</script>
<br>
<center>
  <!-- InstanceBeginEditable name="content" --> 
<table width="85%" border="0" cellpadding="0" cellspacing="0" align="center">
  <tr valign="top"> 
    <td>
<p><strong>Debugging with the DATA Step Debugger</strong> </p>
      <p> Debugging is the process of removing logic errors from a program. Unlike 
        most syntax errors, logic errors do not stop a program from running. Instead, 
        they cause the program to produce unexpected results. 
      <p>You can debug logic errors in DATA steps by using the DATA step debugger. 
        This tool allows you to issue commands to execute DATA step statements 
        one by one, and then to pause to display the resulting variables' values 
        in a window. By observing the results that are displayed, you can determine 
        where the logic error lies. 
      <p>The debugger can be used only in interactive mode. Because the debugger 
        is interactive, you can repeat the process of issuing commands and observing 
        results as many times as needed in a single debugging session. To invoke 
        the debugger, add the DEBUG option to the DATA statement, and execute 
        the program. </p>
    </td>
  </tr>
</table>
<div align="center"><br>
  <table border="0" cellpadding="0" cellspacing="0" width="85%">
    <tr> 
      <td> 
        <pre><font color="#003399">     data perm.publish <strong>/ debug</strong>; 
        infile pubdata; 
        input BookID $ Publisher & $22. Year; 
     run; 
     proc print data=perm.publish; 
     run; </font></pre>
      </td>
    </tr>
  </table>
</div>
<p align="center"> <img src="images/m2n3s1.gif" width="600" height="467" alt="DATA step debugger"> 
<p align="center"><br>
<div align="center"> 
  <table border="0" cellpadding="2" cellspacing="0" align="center" width="85%">
    <tr> 
      <td valign="top" width="24"><img src="../navimages/note.gif" width="20" height="20" alt="More Information"></td>
        <td valign="top">For detailed information about how to use the debugger, 
          see the 
          <!--doc reference-->
          SAS documentation.</td>
    </tr>
  </table>
  <br>
  <br>
</div>
<!-- InstanceEndEditable --> 
</center>
<script>writeNav_regular_bottom();</script>
</body>
<!-- InstanceEnd --></html>
