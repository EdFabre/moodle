<html><!-- InstanceBegin template="/Templates/informationObject.dwt" codeOutsideHTMLIsLocked="false" -->
<head>
<SCRIPT LANGUAGE="JavaScript" SRC="../tut.js"></SCRIPT>
<script language="JavaScript" src="../nav.js"></script>
<SCRIPT LANGUAGE="JavaScript">
 setPageTitle();
 setCookie();
  
// Drop down menu link- © Dynamic Drive (www.dynamicdrive.com)
// For full source code and 100's more DHTML scripts, visit http://www.dynamicdrive.com
// Credit MUST stay intact for use -->

</SCRIPT>

<!-- InstanceBeginEditable name="extrascript" --> 
<SCRIPT LANGUAGE="JavaScript">
</SCRIPT>
<!-- InstanceEndEditable -->

<link rel="stylesheet" href="../tut.css">


<META http-equiv="Content-Type" content="text/html; charset=windows-1252">
</HEAD>

<body marginheight="0" marginwidth="0" topmargin="0" leftmargin="0" rightmargin="0" bgcolor="#FFFFF0">
<script>writeinformationObjectTopNav1();</script>
	  
	  <font color="#003399" size="3" face="Arial, Helvetica, sans-serif"><strong><!-- InstanceBeginEditable name="TopicTitle" -->Reading 
      Observations Using Direct Access<!-- InstanceEndEditable --></strong></font> <!-- InstanceBeginEditable name="continued" --><font color="#003399" size="3" face="Arial, Helvetica, sans-serif">(continued)</font><!-- InstanceEndEditable -->
	  
<script>writeinformationObjectTopNav2();</script>
<br>
<center>
  <!-- InstanceBeginEditable name="content" --> 
<table width="85%" border="0" cellpadding="0" cellspacing="0" align="center">
  <tr valign="top"> 
    <td>
<p><strong>Writing Observations Explicitly</strong></p>
      <p>To override the default way in which the DATA step writes observations 
        to output, you can use an <strong>OUTPUT statement</strong> in the DATA 
        step. Placing an explicit OUTPUT statement in a DATA step overrides the 
        automatic output, so that observations are added to a data set only when 
        the explicit OUTPUT statement is executed.</p>
    </td>
  </tr>
</table>
<p align="center"><br>
<center>
  <table border cellspacing="0" cellpadding="10" width="85%" bgcolor="#F7F7DE" title="General form, OUTPUT statement">
    <tr> 
      <td align="left"><strong>General form, OUTPUT statement:</strong> 
        <blockquote> <nobr> <font color="#003399"><strong>OUTPUT </strong>&lt;<em>SAS-data-set(s)&gt;</em><strong>;</strong></font> 
          </nobr> </blockquote>
        <p> where<strong> </strong><font color="#003399"><em>SAS-data-set(s)</em></font> 
          names the data set(s) to which the observation is written. All data 
          set names that are specified in the OUTPUT statement <strong>must</strong> 
          also appear in the DATA statement. 
        <p> Using an OUTPUT statement without a following data set name causes 
          the current observation to be written to all data sets that are named 
          in the DATA statement. 
      </td>
    </tr>
  </table>
</center>
<p align="center">&nbsp; 
<center>
  <table cellpadding=0 cellspacing=0 border=0 width="85%">
    <tr> 
      <td align="left"> 
        <p>With an OUTPUT statement, your program now writes a single observation 
          to output &#151; observation 5. </p>
        <pre><font color="#003399">     data work.getobs5(drop=obsnum);</font>
<font color="#003399">        obsnum=5;</font>
<font color="#003399">        set company.usa(keep=manager payroll) point=obsnum;</font><font color="#003399">
        <strong>output;</strong>
        </font><font color="#003399">stop;</font><font color="#003399">
     run;
     proc print data=work.getobs5 noobs;
     run;</font></pre>
      </td>
    </tr>
  </table>
  <br>
  <table border=1 cellpadding=2 cellspacing=1 rules=GROUPS frame=BOX bgcolor="#FFFFF0"
  bordercolor="#000000" title="PROC PRINT Output">
    <thead> 
    <tr> 
      <td align=CENTER bgcolor="#CCCCCC" bordercolor="#000000"><font face="Arial, Helvetica, Helv"
              size="3" color="#0033AA"><b>Manager</b></font></td>
      <td align=CENTER bgcolor="#CCCCCC" bordercolor="#000000"><font face="Arial, Helvetica, Helv"
              size="3" color="#0033AA"><b>Payroll</b></font></td>
    </tr>
    </thead> <tbody> 
    <tr> 
      <td align=RIGHT bgcolor="#EFEFEF" bordercolor="#000000"><font face="Arial, Helvetica, Helv"
              size="2" color="#000000">Delgado</font></td>
      <td align=RIGHT bgcolor="#EFEFEF" bordercolor="#000000"><font face="Arial, Helvetica, Helv"
              size="2" color="#000000">45830</font></td>
    </tr>
  </table>
</center>
<p align="center"><br>
  <br>
<center>
  <table cellpadding=0 cellspacing=0 border=0 width="85%">
    <tr> 
      <td align="left"> 
        <p><strong>More Complex Ways of Using Direct Access</strong></p>
        <p>To convey concepts clearly, the examples in this section have been 
          as simple as possible. However, most uses of the POINT= option are more 
          complex. For example, POINT= is commonly used in combining data sets, 
          not simply in reading a single data set. </p>
        <p> You can see more complex examples of using POINT= in the lesson 
          <!--lesson reference-->
          <strong><script>document.write(m34title);</script></strong>. 
      </td>
    </tr>
  </table>
  <br>
  <br>
</center>
<!-- InstanceEndEditable --> 
</center>
<script>writeNav_regular_bottom();</script>
</body>
<!-- InstanceEnd --></html>
