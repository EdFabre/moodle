<html><!-- InstanceBegin template="/Templates/informationObject.dwt" codeOutsideHTMLIsLocked="false" -->
<head>
<SCRIPT LANGUAGE="JavaScript" SRC="../tut.js"></SCRIPT>
<script language="JavaScript" src="../nav.js"></script>
<SCRIPT LANGUAGE="JavaScript">
 setPageTitle();
 setCookie();
  
// Drop down menu link- © Dynamic Drive (www.dynamicdrive.com)
// For full source code and 100's more DHTML scripts, visit http://www.dynamicdrive.com
// Credit MUST stay intact for use -->

</SCRIPT>

<!-- InstanceBeginEditable name="extrascript" --> 
<SCRIPT LANGUAGE="JavaScript">
</SCRIPT>
<!-- InstanceEndEditable -->

<link rel="stylesheet" href="../tut.css">


<META http-equiv="Content-Type" content="text/html; charset=windows-1252">
</HEAD>

<body marginheight="0" marginwidth="0" topmargin="0" leftmargin="0" rightmargin="0" bgcolor="#FFFFF0">
<script>writeinformationObjectTopNav1();</script>
	  
	  <font color="#003399" size="3" face="Arial, Helvetica, sans-serif"><strong><!-- InstanceBeginEditable name="TopicTitle" -->Understanding 
      Macro Variables<!-- InstanceEndEditable --></strong></font> <!-- InstanceBeginEditable name="continued" --><font color="#003399" size="3" face="Arial, Helvetica, sans-serif">(continued)</font><!-- InstanceEndEditable -->
	  
<script>writeinformationObjectTopNav2();</script>
<br>
<center>
  <!-- InstanceBeginEditable name="content" --> 
<table width="85%" border="0" cellpadding="0" cellspacing="0" align="center">
  <tr valign="top"> 
    <td>
<p><strong>SAS Macro Variables</strong> </p>
      <p> SAS macro variables are part of the macro facility, which is a tool 
        for extending and customizing SAS and for reducing the amount 
        of text you must enter in order to complete tasks. A macro variable is 
        independent of a SAS data set and contains one value that remains constant 
        until you change it. The value of a macro variable is a text string that 
        becomes part of your program whenever the macro variable is referenced. 
      <p> You can assign any text string to a macro variable. For example, three 
        possible values are shown below: 
      <blockquote> <em>Region Five Tests<br>
        1999<br>
        SITE8.TRIALS</em> </blockquote>
      <p> The assigned text is then placed into your program whenever the macro 
        variable is referenced. 
      <pre>                      [Macro Variable]
                           <strong>1 9 9 9</strong>
                          <font color="Red">. .</font>   <font color="Red">.</font> <font color="Red">.</font>
                         <font color="Red">.</font>  <font color="Red">.</font>   <font color="Red">.</font>  <font color="Red">.</font>
                        <font color="Red">.</font>   <font color="Red">.</font>   <font color="Red">.</font>   <font color="Red">.</font>
                       <font color="Red">.</font>    <font color="Red">.</font>   <font color="Red">.</font>    <font color="Red">.</font>
<font color="#003399">     title "Temporary Employees for <strong>1999</strong>";</font>
                    <font color="Red">.</font>       <font color="Red">.   .</font>
<font color="#003399">     data hrd.temp<strong>1999</strong>;</font>     <font color="Red">.</font>   <font color="Red">.</font>
<font color="#003399">        set hrd.temp;</font>       <font color="Red">.</font>   <font color="Red">.</font>
<font color="#003399">        if YEAR(enddate)=<strong>1999</strong>;</font>  <font color="Red">.</font>
<font color="#003399">     run;</font>                       <font color="Red">.</font>
<font color="#003399">     proc print data=hrd.temp<strong>1999</strong>;</font>
<font color="#003399">     run;</font>
</pre>
      <p> Macro variables can be defined and referenced anywhere in a SAS program 
        except within data lines. So, if your DATA step reads instream data (data 
        that is included in the program), you cannot define or reference a macro 
        variable within these lines. 
      <pre><font color="#003399">     data site6.trial;</font>
<font color="#003399">        input name $ sex $ age level1 level2;</font>
<font color="#003399">        datalines;</font>
     <strong><font color="#003399">Treborn F 35 254 309</font></strong>
     <strong><font color="#003399">Washington M 27 198 167</font></strong>
     <strong><font color="#003399">Randell M 43 155 150</font></strong>
     <strong><font color="#003399">Farley F 60 202 210</font></strong>
<font color="#003399">     ;</font>
<font color="#003399">     run;</font>
<font color="#003399">     proc print data=site6.trial;</font>
<font color="#003399">     run;</font>
</pre>
      <p> <br>
        <strong>Types of Macro Variables</strong> 
      <p> There are two types of macro variables: 
      <ul>
        <li> automatic macro variables 
        <li> user-defined macro variables. 
      </ul>
      <p> As these names suggest, automatic macro variables are provided by SAS, 
        whereas you create and define the value of user-defined macro variables. 
    </td>
  </tr>
</table>
<br>
<br>
<!-- InstanceEndEditable --> 
</center>
<script>writeNav_regular_bottom();</script>
</body>
<!-- InstanceEnd --></html>
