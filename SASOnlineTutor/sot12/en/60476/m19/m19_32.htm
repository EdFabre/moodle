<html><!-- InstanceBegin template="/Templates/summary.dwt" codeOutsideHTMLIsLocked="false" -->
<head>

<SCRIPT LANGUAGE="JavaScript" SRC="../tut.js"></SCRIPT>
<script language="JavaScript1.2" src="../nav.js"></script>


<SCRIPT LANGUAGE="JavaScript">
 setPageTitle();
 setCookie();
 
// Drop down menu link- © Dynamic Drive (www.dynamicdrive.com)
// For full source code and 100's more DHTML scripts, visit http://www.dynamicdrive.com
// Credit MUST stay intact for use -->

</SCRIPT>

<!-- InstanceBeginEditable name="extrascript" --> 
<SCRIPT LANGUAGE="JavaScript">
</SCRIPT>
<!-- InstanceEndEditable -->

<link rel="stylesheet" href="../tut.css">

<META http-equiv="Content-Type" content="text/html; charset=windows-1252">
</HEAD>

<body marginheight="0" marginwidth="0" topmargin="0" leftmargin="0" rightmargin="0" bgcolor="#FFFFF0">
<script>writeinformationObjectTopNav1();</script>
 
      <font color="#003399" size="3" face="Arial, Helvetica, sans-serif"><strong><script>document.write(summaryTitle)</script></strong></font>
 
 
<script>writeinformationObjectTopNav2();</script>
<br>
<center><TABLE cellpadding=0 cellspacing=0 border=0 width="85%" align="center">
  <TR>
      <TD align="left">
      
      <p><script>document.write(summaryPageContains)</script></p>
     <ul><!-- InstanceBeginEditable name="links" --> 
        <LI> <A HREF="#Text" onMouseOver="window.status='Go to the text summary section.'; "
		onMouseOut="window.status=''">a text summary of the material taught in 
          the lesson</A> 
        <LI> <A HREF="#Syntax" onMouseOver="window.status='Go to the syntax section.'; "
		onMouseOut="window.status=''">syntax for&nbsp;statements and options</A> 
        <LI> <A HREF="#Sample" onMouseOver="window.status='Go to the sample program section.'; "
		onMouseOut="window.status=''">a&nbsp;sample program</A> 
        <LI> <A HREF="#Points" onMouseOver="window.status='Go to the points to remember section.'; "
		onMouseOut="window.status=''">points to remember</A>. 
        <!-- InstanceEndEditable --></ul>
<P>
	  <HR>
      </TD>
    </TR>
  </TABLE>
  <P>

<!-- InstanceBeginEditable name="textsummaryintro" -->     
<TABLE cellpadding=0 cellspacing=0 border=0 width="85%" align="center">
  <TR>
	<TD align="left"><h2><STRONG><A NAME="Text"><script>document.write(summaryPageTextSummaryTitle);</script></A></STRONG> </h2>
      <P>
	  <EM><script>document.write(summaryPageDirections);</script></EM></TD>
      </TR>
    </TABLE>
<!-- InstanceEndEditable -->
  <br>
<!-- InstanceBeginEditable name="textsummary" --> 
<p align="center"> 
<center>
  <table cellpadding=0 cellspacing=0 border=0 width="85%">
    <tr> 
      <td align="left"><strong>Review of Column Input </strong><br>
        When data is arranged in columns or fixed fields, you can use <a href="m19_2.htm" onClick="suggestBack()" onMouseOver="window.status='Display details on column input.'; "
		onMouseOut="window.status=''">column input</a> to read them. With column 
        input, the beginning and ending column are specified for each field. Character 
        variables are identified by a dollar ($) sign. 
        <p> Column input has several <a href="m19_3.htm" onClick="suggestBack()" onMouseOver="window.status='Display details on column input features.'; "
		onMouseOut="window.status=''">features</a>. 
         <ul>
            <li> Fields can be read in any order.<br>
              <br>
            <li> It can be used to read character variables that contain embedded 
              blanks.<br>
              <br>
            <li> No placeholder is required for missing data. A blank field is 
              read as missing and does not cause other fields to be read incorrectly.<br>
              <br>
            <li> Fields or parts of fields can be re-read.<br>
              <br>
            <li> Fields do not have to be separated by blanks or other delimiters<br>
              <br>
            <li>It can be used to read standard character and numeric data. </ul>
        </td>
    </tr>
  </table>
</center>
<p align="center"> 
<center>
  <table cellpadding=0 cellspacing=0 border=0 width="85%">
    <tr> 
      <td align="left"><p><strong>Identifying Nonstandard Numeric Data</strong><br>
            <a href="m19_5.htm#standard" onClick="suggestBack()" onMouseOver="window.status='Display details on standard numeric data.'; "
	      onMouseOut="window.status=''">Standard numeric data</a> values are values 
            that contain only numbers, scientific notation, decimal points, and 
            plus and minus signs. When numeric data contains characters such as 
            commas or dollar signs, the data is considered to be nonstandard. 
          </p>
          <p><a href="m19_5.htm#nonstandard" onClick="suggestBack()" onMouseOver="window.status='Display details on nonstandard numeric data.'; "
	      onMouseOut="window.status=''">Nonstandard numeric data</a> includes 
          </p>
          <ul>
          <li> values that contain special characters, such as percent signs, 
            dollar signs, and commas 
          <li> date and time values 
          <li> data in fraction, integer binary, real binary, and hexadecimal 
            forms. 
        </ul>
      </td>
    </tr>
  </table>
</center>
<p align="center"> 
<center>
  <table cellpadding=0 cellspacing=0 border=0 width="85%">
    <tr> 
      <td align="left"><strong>Choosing an Input Style </strong><br>
        SAS provides <a href="m19_7.htm" onClick="suggestBack()" onMouseOver="window.status='Display details on choosing an input style.'; "
		  onMouseOut="window.status=''">two input styles</a> for reading data 
        in fixed fields, <strong>column input</strong> and <strong>formatted input</strong>. 
        You can use 
        <ul>
          <li> column input to read standard data only 
          <li> formatted input to read both standard and nonstandard data.
        </ul>
      </td>
    </tr>
  </table>
</center>
<p align="center"> 
<center>
  <table cellpadding=0 cellspacing=0 border=0 width="85%">
    <tr> 
      <td align="left"><strong>Using Formatted Input </strong><br>
        <a href="m19_8.htm" onClick="suggestBack()" onMouseOver="window.status='Display details on formatted input.'; "
	      onMouseOut="window.status=''">Formatted input</a> uses column pointer 
        controls to position the input pointer on a specified column. A column 
        pointer control is optional when the first variable is in the first column. 
        <p> <a href="m19_9.htm" onClick="suggestBack()" onMouseOver="window.status='Display details on the @n pointer control.'; "
	      onMouseOut="window.status=''">The @<em>n</em></a><em> </em>is an absolute 
          pointer control that moves the input pointer to a specific column number. 
          You can <a href="m19_11.htm" onClick="suggestBack()" onMouseOver="window.status='Display details on reading columns in any order.'; "
	      onMouseOut="window.status=''">read columns in any order</a> with the 
          @<em>n </em>column pointer control. 
        <p> <a href="m19_14.htm" onClick="suggestBack()" onMouseOver="window.status='Display details on the +n pointer control.'; "
	      onMouseOut="window.status=''">The +<em>n</em></a><em> </em>is a relative 
          pointer control that moves the input pointer forward to a column number 
          that is relative to the current position. The +<em>n</em> pointer control 
          cannot move backwards. However, you can use the notation +(-<em>n</em>) 
          to move the pointer control backwards. 
      </td>
    </tr>
  </table>
</center>
<p align="center"> 
<center>
  <table cellpadding=0 cellspacing=0 border=0 width="85%">
    <tr> 
      <td align="left"><strong>Using Informats</strong><br>
          An informat tells SAS how to read raw data. There are informats for 
          reading <a href="m19_19.htm" onClick="suggestBack()" onMouseOver="window.status='Display details on reading character values.'; "
		onMouseOut="window.status=''">standard and nonstandard character values</a> 
          and for reading <a href="m19_21.htm" onClick="suggestBack()" onMouseOver="window.status='Display details on reading standard data values.'; "
		onMouseOut="window.status=''"> standard</a> and <a href="m19_23.htm" onClick="suggestBack()" onMouseOver="window.status='Display details on reading nonstandard data values.'; "
		onMouseOut="window.status=''">nonstandard numeric data values</a>. 
          <p> Informats always contain a <em>w </em>value to indicate the width 
          of the raw data field. A period (.) ends the informat or separates the 
          <em>w</em> value from the optional <em>d</em> value, which specifies 
          the number of implied decimal places.
      </td>
    </tr>
  </table>
</center>
<p align="center">&nbsp; 
<center>
  <table cellpadding=0 cellspacing=0 border=0 width="85%">
    <tr> 
      <td align="left"><strong>Record Formats </strong><br>
        A record format specifies how records are organized in a file. Some operating 
        systems have different types of record formats; the two most common are 
        <a href="m19_28.htm#fixed" onClick="suggestBack()" onMouseOver="window.status='Display details on fixed-length records.'; "
		onMouseOut="window.status=''">fixed-length records</a> and <a href="m19_28.htm#variable" onClick="suggestBack()" onMouseOver="window.status='Display details on variable-length records.'; "
		onMouseOut="window.status=''">variable-length records</a>. 
        <p> When you read <a href="m19_29.htm" onClick="suggestBack()" onMouseOver="window.status='Display details on reading variable-length records.'; "
		onMouseOut="window.status=''">variable-length records</a> that contain 
          fixed-field data into a SAS data set, there might be values that are 
          shorter than others or that are missing. The <a href="m19_30.htm" onClick="suggestBack()" onMouseOver="window.status='Display details on the PAD option.'; "
		onMouseOut="window.status=''"> PAD option</a> pads each record with blanks 
          so that all data lines have the same length.
        </td>
    </tr>
  </table>
</center>
<!-- InstanceEndEditable --> <br>
<table cellpadding=0 cellspacing=0 border=0 width="85%" align="center">
  <tr> 
    <td align="left"> 
      <hr>
    </td>
  </tr>
</table>

<P><!-- InstanceBeginEditable name="syntax" --> 
<center>
  <TABLE cellpadding=0 cellspacing=0 border=0 width="85%">
    <TR> 
      <TD><STRONG><A NAME="Syntax">Syntax</A></STRONG> 
        <P> <EM>To go to the page where a statement or option was presented, select 
          a link.</EM> 
      </TD>
    </TR>
  </TABLE>
  <br>
</center>
<P align="center"> 
<table cellpadding="2" align="center">
  <tr> 
    <td><font color="#003399"><strong>LIBNAME</strong> <em>libref</em> &nbsp;<strong>'</strong><em>SAS-data-library</em><strong>';</strong></font></td>
  </tr>
  <tr> 
      <td><font color="#003399"><strong>FILENAME</strong> <em>fileref &nbsp;</em><strong>'</strong><em>filename</em><strong>';</strong></font></td>
  </tr>
  <tr> 
    <td><font color="#003399"><strong>DATA</strong> <em>SAS-data-set</em><strong>;</strong></font></td>
  </tr>
  <tr> 
    <td><font color="#003399"> &nbsp; &nbsp; &nbsp; &nbsp; <strong>&nbsp;INFILE</strong> 
      <em>file-specification</em> <strong>;</strong></font></td>
  </tr>
  <tr> 
      <td><nobr>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<strong><a href="m19_8.htm" onClick="suggestBack()" onMouseOver="window.status='Display details on the INPUT statement.'; "
	      onMouseOut="window.status=''">INPUT</a> </strong>&lt;<a href="m19_9.htm" onClick="suggestBack()" onMouseOver="window.status='Display details on pointer controls.'; "
	      onMouseOut="window.status=''"><em>pointer-control</em></a>&gt;<font color="#003399"><em> 
        variable </em> </font><em><a href="m19_18.htm" onClick="suggestBack()" onMouseOver="window.status='Display details on informats.'; "
	      onMouseOut="window.status=''">informat.</a></em>;</nobr></td>
  </tr>
  <tr> 
    <td><font color="#003399"><strong>RUN; </strong></font></td>
  </tr>
  <tr> 
    <td><font color="#003399"><strong>PROC PRINT DATA=</strong><em>SAS-data-set</em><strong>;</strong></font></td>
  </tr>
  <tr> 
    <td><font color="#003399"><strong>RUN; </strong></font></td>
  </tr>
</table>
<P align="center"> 
<center>
  <TABLE cellpadding=0 cellspacing=0 border=0 width="85%">
    <TR> 
      <TD align="left"> 
        <HR>
      </TD>
    </TR>
  </TABLE>
  <br>
</center>
<!-- InstanceEndEditable -->
<P> 
  <!-- InstanceBeginEditable name="sampleprogram" --> 
  <TABLE cellpadding=0 cellspacing=0 border=0 width="85%">
    <TR> 
      <TD align="left"><STRONG><A NAME="Sample">Sample Program</A></STRONG>
        <pre>   <font color="#003399">  libname perm 'c:\data\sales';</font>
<font color="#003399">     filename vandata 'c:\records\vans.dat';</font>
<font color="#003399">     data perm.vansales;</font>
<font color="#003399">        infile vandata;</font>
<font color="#003399">        input +12 Quarter 1. @1 Region $9.</font>
<font color="#003399">              +6 TotalSales comma11.;</font>
     <font color="#003399">run;</font>
<font color="#003399">     proc print data=perm.vansales;</font>
<font color="#003399">     run;</font></pre>
        <P> 
        <HR>
      </TD>
    </TR>
  </TABLE>
  <br>
  <!-- InstanceEndEditable --> 
<P>
  <!-- InstanceBeginEditable name="pointstoremember" --> 
  <TABLE cellpadding=0 cellspacing=0 border=0 width="85%">
    <TR> 
      <TD align="left"><STRONG><A NAME="Points">Points to Remember</A></STRONG>
        <ul>
          <li> When you use column input or formatted input, the input pointer 
            stops on the column following the last column that was read.<br>
            <br>
          <li> When you use informats, you do not need to specify a <em>d</em> 
            value if the data values already contain decimal places.<br>
            <br>
          <li> Column input can be used to read standard character or standard 
            numeric data only.<br>
            <br>
          <li> Formatted input can be used to read both standard and nonstandard 
            data.<br>
            <br>
          <li> When reading variable-length records that contain fixed-field data, 
            you can avoid problems by using the PAD option in the INFILE statement.
        </ul>
	   </TD>
    </TR>
  </TABLE>
  <!-- InstanceEndEditable --></center>
<script>writeNav_regular_bottom();</script>
</body>
<!-- InstanceEnd --></html>