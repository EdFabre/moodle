<html><!-- InstanceBegin template="/Templates/informationObject.dwt" codeOutsideHTMLIsLocked="false" -->
<head>
<SCRIPT LANGUAGE="JavaScript" SRC="../tut.js"></SCRIPT>
<script language="JavaScript" src="../nav.js"></script>
<SCRIPT LANGUAGE="JavaScript">
 setPageTitle();
 setCookie();
  
// Drop down menu link- © Dynamic Drive (www.dynamicdrive.com)
// For full source code and 100's more DHTML scripts, visit http://www.dynamicdrive.com
// Credit MUST stay intact for use -->

</SCRIPT>

<!-- InstanceBeginEditable name="extrascript" --> 
<SCRIPT LANGUAGE="JavaScript">
</SCRIPT>
<!-- InstanceEndEditable -->

<link rel="stylesheet" href="../tut.css">


<META http-equiv="Content-Type" content="text/html; charset=windows-1252">
</HEAD>

<body marginheight="0" marginwidth="0" topmargin="0" leftmargin="0" rightmargin="0" bgcolor="#FFFFF0">
<script>writeinformationObjectTopNav1();</script>
	  
	  <font color="#003399" size="3" face="Arial, Helvetica, sans-serif"><strong><!-- InstanceBeginEditable name="TopicTitle" -->Debugging 
      a DATA Step<!-- InstanceEndEditable --></strong></font> <!-- InstanceBeginEditable name="continued" --><!-- InstanceEndEditable -->
	  
<script>writeinformationObjectTopNav2();</script>
<br>
<center>
  <!-- InstanceBeginEditable name="content" --> 
<table width="85%" border="0" cellpadding="0" cellspacing="0" align="center">
  <tr valign="top"> 
    <td>
<p><strong>Diagnosing Errors in the Compilation Phase</strong> </p>
      <p> Now that you know how a DATA step is processed, you can use that knowledge 
        to correct errors. If you completed the lesson 
        <!--lesson reference--><strong><script>document.write(m2title);</script></strong>, you saw examples 
        of errors that are detected during the compilation phase, including 
      <ul>
        <li>misspelled keywords and data set names</li>
        <li>missing semicolons</li>
        <li>unbalanced quotation marks</li>
        <li>invalid options.</li>
      </ul>
      <p>During the compilation phase, SAS can interpret some syntax errors (such 
        as the keyword DATA misspelled as DAAT). If it cannot interpret the error, 
        SAS 
      <ul>
        <li>prints the word ERROR followed by an error message in the log</li>
        <li>compiles but does <strong>not</strong> execute the step where the 
          error occurred, and prints the following message to warn you: 
          <p> 
          <table border="0" cellspacing="0" cellpadding="0" align="center" width="75%">
            <tr valign="top"> 
              <td><tt><font color="blue">NOTE:&nbsp;</font></tt></td>
              <td><tt><font color="blue">The SAS System stopped processing this 
                step because of errors.</font></tt></td>
            </tr>
          </table>
          <p> 
      </ul>
      <p>Some errors are explained fully by the message that SAS prints; other 
        error messages are not as easy to interpret. For example, because SAS 
        statements are free-format, when you fail to end a SAS statement with 
        a semicolon, SAS does not always detect the error at the point where it 
        occurs. 
    </td>
  </tr>
</table>
<br>
<br>
<!-- InstanceEndEditable --> 
</center>
<script>writeNav_regular_bottom();</script>
</body>
<!-- InstanceEnd --></html>
