<html><!-- InstanceBegin template="/Templates/informationObject.dwt" codeOutsideHTMLIsLocked="false" -->
<head>
<SCRIPT LANGUAGE="JavaScript" SRC="../tut.js"></SCRIPT>
<script language="JavaScript" src="../nav.js"></script>
<SCRIPT LANGUAGE="JavaScript">
 setPageTitle();
 setCookie();
  
// Drop down menu link- © Dynamic Drive (www.dynamicdrive.com)
// For full source code and 100's more DHTML scripts, visit http://www.dynamicdrive.com
// Credit MUST stay intact for use -->

</SCRIPT>

<!-- InstanceBeginEditable name="extrascript" --> 
<SCRIPT LANGUAGE="JavaScript">
</SCRIPT>
<!-- InstanceEndEditable -->

<link rel="stylesheet" href="../tut.css">


<META http-equiv="Content-Type" content="text/html; charset=windows-1252">
</HEAD>

<body marginheight="0" marginwidth="0" topmargin="0" leftmargin="0" rightmargin="0" bgcolor="#FFFFF0">
<script>writeinformationObjectTopNav1();</script>
	  
	  <font color="#003399" size="3" face="Arial, Helvetica, sans-serif"><strong><!-- InstanceBeginEditable name="TopicTitle" -->Compilation 
      Phase<!-- InstanceEndEditable --></strong></font> <!-- InstanceBeginEditable name="continued" --><!-- InstanceEndEditable -->
	  
<script>writeinformationObjectTopNav2();</script>
<br>
<center>
  <!-- InstanceBeginEditable name="content" --> 
<table width="85%" border="0" cellpadding="0" cellspacing="0" align="center">
  <tr valign="top"> 
    <td>
<p><strong>Input Buffer</strong></p>
      <p>At the beginning of the compilation phase, the <strong>input buffer</strong> 
        (an area of memory) is created to hold a record from the external file. 
        The input buffer is created only when raw data is read, not when a SAS 
        data set is read. The term <strong>input buffer</strong> refers to a logical 
        concept; it is not a physical storage area.</p>
    </td>
  </tr>
</table>
<p align="center"> 
<p align="center"><img src="images/m22c2g1.gif" width="447" height="78" alt="input buffer"> 
  <br>
  <br>
<center>
  <table cellpadding="0" cellspacing="0" border="0" width="85%">
    <tr> 
      <td> 
        <p><strong>Program Data Vector</strong></p>
        <p>After the input buffer is created, the <strong>program data vector 
          </strong>is created. The program data vector is the area of memory where 
          SAS builds a data set, one observation at a time. Like the 
          term <strong>input buffer</strong>, the term <strong>program data vector</strong> 
          refers to a logical concept.</p>
      </td>
    </tr>
  </table>
</center>
<p align="center"> 
<center>
  <table cellpadding="0" cellspacing="0" border="0" width="85%">
    <tr> 
      <td>The program data vector contains two <strong>automatic variables</strong> 
        that can be used for processing but which are not written to the data 
        set as part of an observation. 
        <p> 
        <ul>
          <li> <strong>_N_ </strong>counts the number of times that the DATA step 
            begins to execute.<br>
            <br>
          <li> <strong>_ERROR_ </strong>signals the occurrence of an error that 
            is caused by the data during execution. The default value is <em>0</em>, 
            which means there is no error. When one or more errors occur, the 
            value is set to <em>1</em>. 
        </ul>
      </td>
    </tr>
  </table>
</center>
<p align="center"> <img src="images/m22c2g2.gif" width="451" height="70" alt="Program Data Vector"> 
<p align="center"><br>
<center>
  <table cellpadding="0" cellspacing="0" border="0" width="85%">
    <tr> 
      <td align="left"> 
        <p><strong>Syntax Checking</strong></p>
        <p>During the compilation phase, SAS also scans each statement 
          in the DATA step, looking for syntax errors. Syntax errors include <br>
        </p>
        <ul>
          <li> missing or misspelled keywords 
          <li> invalid variable names 
          <li> missing or invalid punctuation 
          <li> invalid options. 
        </ul>
      </td>
    </tr>
  </table>
 
</center>
<!-- InstanceEndEditable --> 
</center>
<script>writeNav_regular_bottom();</script>
</body>
<!-- InstanceEnd --></html>
