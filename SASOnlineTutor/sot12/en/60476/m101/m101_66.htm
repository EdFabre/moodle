<html><!-- InstanceBegin template="/Templates/eg_summary.dwt" codeOutsideHTMLIsLocked="false" -->
<head>

<SCRIPT LANGUAGE="JavaScript" SRC="../tut.js"></SCRIPT>
<script language="JavaScript1.2" src="../nav.js"></script>


<SCRIPT LANGUAGE="JavaScript">
 setPageTitle();
 setCookie();
 checkVersion();
 
// Drop down menu link- © Dynamic Drive (www.dynamicdrive.com)
// For full source code and 100's more DHTML scripts, visit http://www.dynamicdrive.com
// Credit MUST stay intact for use -->

</SCRIPT>

<!-- InstanceBeginEditable name="extrascript" -->
<SCRIPT LANGUAGE="JavaScript">
</SCRIPT>
<!-- InstanceEndEditable -->

<link rel="stylesheet" href="../tut.css">

<META http-equiv="Content-Type" content="text/html; charset=windows-1252">
</HEAD>

<body marginheight="0" marginwidth="0" topmargin="0" leftmargin="0" rightmargin="0" bgcolor="#FFFFF0" onLoad="writeEG_div()">
<script>writeinformationObjectTopNav1();</script>
 
<font color="#003399" size="3" face="Arial, Helvetica, sans-serif"><strong><script>document.write(summaryTitle)</script></strong></font> 
 
<script>writeinformationObjectTopNav2();</script>
<br>
<center><TABLE cellpadding=0 cellspacing=0 border=0 width="85%" align="center">
  <TR>
      <TD align="left">
      
      <p><script>document.write(summaryPageContains)</script></p>
     <ul><!-- InstanceBeginEditable name="links" --> 
           <div id="le2_eg2_eg3" class="eg_div">
		   <LI> <A HREF="#Text" onMouseOver="window.status='Go to the text summary section.'; "
		onMouseOut="window.status=''">a text summary of the material taught in 
            the lesson</A>
          <LI> <A HREF="#Points" onMouseOver="window.status='Go to the points to remember section.'; "
		onMouseOut="window.status=''">points to remember</A>. 
		</div><!-- InstanceEndEditable --></ul>
<P>
	  <HR>
      </TD>
    </TR>
  </TABLE>
  <P>

    
<!-- InstanceBeginEditable name="textsummaryintro" --> 
<TABLE cellpadding=0 cellspacing=0 border=0 width="85%" align="center">
  <TR>
	<TD align="left"><h2><STRONG><A NAME="Text"><script>document.write(summaryPageTextSummaryTitle);</script></A></STRONG> </h2>
      <P>
	  <EM><script>document.write(summaryPageDirections);</script></EM></TD>
      </TR>
    </TABLE>
<!-- InstanceEndEditable -->
<br>
<!-- InstanceBeginEditable name="textsummary" --> 
 <div id="le2_eg2" class="eg_div">
<table width="85%" border="0" cellpadding="0" cellspacing="0" align="center">
    <tr valign="top"> 
      <td> <p><strong>What Is a Query?</strong><br>
          A <font color="#FF0000"><a href="m101_2.htm" onClick="suggestBack()">query</a></font> 
          is a request to retrieve data from one or more data sources. These are 
          some major tasks that you perform when you create a query:</p>
        <ul>
          <li>selecting columns</li>
          <li>computing new columns</li>
          <li>replacing values in existing columns</li>
          <li>selecting rows based on one or more conditions</li>
          <li>defining parameters that prompt the user to specify the desired 
            value</li>
          <li>sorting rows based on the values in one or more columns</li>
          <li>joining tables based on common columns</li>
          <li>classifying data into groups and performing summary functions on 
            columns.</li>
        </ul>
        <p><strong>Using the Query Builder </strong><br>
          In the <font color="#FF0000"><a href="m101_3.htm" onClick="suggestBack()">Query 
          Builder</a></font>, you use tabs to perform the following tasks:</p>
        <table width="85%" border="1" align="center" cellpadding="5" cellspacing="0" bgcolor="#FFFFFF" title="tabs and tasks in the Query Builder">
          <tr bgcolor="#f7f7de"> 
            <td><strong>Tab</strong></td>
            <td><strong>Tasks</strong></td>
          </tr>
          <tr valign="top"> 
            <td><strong>Filter Data</strong></td>
            <td>select only rows of data that meet certain criteria</td>
          </tr>
          <tr valign="top"> 
            <td><strong>Select and Sort</strong></td>
            <td><p>select and order columns<br>
                specify aliases for columns<br>
                sort output<br>
                classify data into groups</p></td>
          </tr>
          <tr valign="top"> 
            <td height="31"><strong>Tables</strong></td>
            <td><p>view tables in the query<br>
                add or delete tables<br>
                specify types of joins</p></td>
          </tr>
          <tr valign="top"> 
            <td><strong>Group Filters</strong></td>
            <td>subset grouped data based on specified conditions</td>
          </tr>
          <tr valign="top"> 
            <td><strong>Advanced</strong></td>
            <td>select the server on which to execute the query</td>
          </tr>
          <tr valign="top"> 
            <td><strong>Parameters</strong></td>
            <td>define parameters for queries</td>
          </tr>
        </table>
        <p><strong>Specifying a Result Format </strong><br>
          You can generate your <font color="#FF0000"><a href="m101_4.htm" onClick="suggestBack()">query 
          results</a></font> as </p>
        <ul>
          <li>a data table</li>
          <li>a data view</li>
          <li>a report. </li>
        </ul>
        <p>Choosing a type of output in advance ensures that your query provides 
          information in the appropriate format. You can run SAS Enterprise Guide 
          tasks against query results that are in the data table or data view 
          format, but not in the report format. Data tables and reports actually 
          contain data values, but a data view contains only the logic for retrieving 
          data that is stored elsewhere, not the data itself. Data views allow 
          you to read data dynamically without using disk space to create a new 
          data table. </p>
        <p><strong>Starting a Query </strong><br>
          To <font color="#FF0000"><a href="m101_7.htm" onClick="suggestBack()">start 
          a query</a></font>, you open a new query and add data.</p>
        <p><strong>Working with Columns in a Query </strong><br>
          When you <font color="#FF0000"><a href="m101_9.htm" onClick="suggestBack()">work 
          with columns</a></font> in a query, you can use the <strong>Select and 
          Sort</strong> tab to</p>
        <ul>
          <li>select existing columns </li>
          <li> compute new columns from other columns </li>
          <li> order columns </li>
          <li> sort rows by values of a column.</li>
        </ul>
        <p><strong>Subsetting Data in a Query</strong><br>
          You can <font color="#FF0000"><a href="m101_16.htm" onClick="suggestBack()">subset 
          your data</a></font> in the <strong>Filter Data</strong> tab by retrieving 
          only rows that meet certain criteria, based on values of columns in 
          the data. When you create more than one filter on your data, you can 
          specify whether the relationship between the filters is AND or OR.</p>
        <p><strong>Joining Tables in a Query </strong><br>
          You can <font color="#FF0000"><a href="m101_21.htm" onClick="suggestBack()">join 
          data</a></font> from up to 32 different tables on the <strong>Tables</strong> 
          tab. To join tables, you start by adding them to a query. When you add 
          more than one table to a query, the Query Builder automatically tries 
          to join the tables by columns that have the same name and type. By default, 
          the Query Builder joins the tables in an inner join, and the output 
          rows include only matching rows from the tables. </p>
        <p><strong>Joining Tables Manually and Replacing Values </strong><br>
          If you need to join tables that don't contain a column of the same name 
          and type, you may be able to <font color="#FF0000"><a href="m101_27.htm" onClick="suggestBack()">join 
          tables manually</a></font> on the <strong>Tables</strong> tab. On the 
          <strong>Select and Sort</strong> tab, you can also specify values to 
          replace individual values or ranges of values for a column. You can 
          also specify a value for all other values of a column.</p>
        <p><strong>Running Tasks against Query Output </strong><br>
          Sometimes you need to perform other analyses on your query results before 
          creating a report. If you specify a data table or data view as your 
          result format, you can <font color="#FF0000"><a href="m101_34.htm" onClick="suggestBack()">run 
          SAS Enterprise Guide tasks</a></font> against your query output.</p>
        <p><strong>Creating Queries That Accept Parameters </strong><br>
          To specify a value for subsetting data when you run a query, you can 
          <font color="#FF0000"><a href="m101_39.htm" onClick="suggestBack()">create 
          a parameter</a></font> for the query. Using a parameter with a filter 
          makes the filter dynamic. When you run a query with a parameter, it 
          prompts you to select a value for a column, then displays only rows 
          with matching values for that column. Creating a query that accepts 
          a parameter is a two-step process: you first create a parameter that 
          prompts you to select a value, then set a filter based on the parameter.</p>
        <p><strong>Grouping and Filtering Data in a Query </strong><br>
          To <font color="#FF0000"><a href="m101_46.htm" onClick="suggestBack()">group 
          and summarize data</a></font> in a query, you </p>
        <ul>
          <li>assign a grouping variable to define the groups that you want to 
            see</li>
          <li>select an analysis variable to summarize and a summary statistic 
            to compute</li>
          <li>limit the output rows to show only one row for each value of the 
            grouping variable.</li>
        </ul>
        <p>To subset your data when you are grouping and summarizing, you can 
          apply two types of filters:</p>
        <ul>
          <li>a filter to select <strong>individual rows</strong> from the data 
            sources in your query. This is the type of filter that you set on 
            the <strong>Filter Data</strong> tab of the Query Builder.<br>
            <br>
          </li>
          <li>a filter to select <strong>groups</strong>, which you set on the 
            <strong>Group Filters</strong> tab. The group filter applies to groups, 
            not to individual rows of data, so you can use a group filter to select 
            the groups that you want to view.</li>
        </ul>
        <p><strong>Using Outer Joins </strong><br>
          Sometimes you may need to use <font color="#FF0000"><a href="m101_56.htm" onClick="suggestBack()">outer 
          joins</a></font> instead of the default inner join. An outer join combines 
          and displays all rows that match across tables, plus some or all of 
          the rows that do not match. You can think of an outer join as an augmentation 
          of an inner join: an outer join returns all rows generated by an inner 
          join, plus additional (nonmatching) rows. The Query Builder supports 
          four types of joins: inner joins, left outer joins, right outer joins, 
          and full outer joins.</p>
        <p><strong>Additional Features</strong><br>
          You can use <font color="#FF0000"><a href="m101_65.htm" onClick="suggestBack()">SAS 
          functions and formats</a></font> to define and display data values in 
          your query output. You can also modify the code that the Query Builder 
          generates.</p></td>
  </tr>
</table>
</div>
  <span id="divider" class="eg_div"><hr width="85%"><br></span>
<div id="eg3" class="eg_div">
<table width="85%" border="0" cellpadding="0" cellspacing="0" align="center">
    <tr valign="top"> 
      <td> <p><strong>What Is a Query?</strong><br>
          A <font color="#FF0000"><a href="m101_2.htm" onClick="suggestBack()">query</a></font> 
          is a request to retrieve data from one or more data sources. These are 
          some major tasks that you perform when you create a query:</p>
        <ul>
          <li>selecting columns</li>
          <li>computing new columns</li>
          <li>replacing values in existing columns</li>
          <li>selecting rows based on one or more conditions</li>
          <li>defining parameters that prompt the user to specify the desired 
            value</li>
          <li>sorting rows based on the values in one or more columns</li>
          <li>joining tables based on common columns</li>
          <li>classifying data into groups and performing summary functions on 
            columns.</li>
        </ul>
        <p><strong>Using the Query Builder </strong><br>
          In the <font color="#FF0000"><a href="m101_3.htm" onClick="suggestBack()">Query 
          Builder</a></font>, you use tabs to perform the following tasks:</p>
        <table width="85%" border="1" align="center" cellpadding="5" cellspacing="0" bgcolor="#FFFFFF" title="tabs and tasks in the Query Builder">
          <tr bgcolor="#f7f7de"> 
            <td><strong>Tab</strong></td>
            <td><strong>Tasks</strong></td>
          </tr>
          <tr valign="top"> 
            <td><strong>Filter Data</strong></td>
            <td>select only rows of data that meet certain criteria</td>
          </tr>
          <tr valign="top"> 
            <td><strong>Select and Sort</strong></td>
            <td><p>select and order columns<br>
                specify aliases for columns<br>
                sort output<br>
                classify data into groups</p></td>
          </tr>
          <tr valign="top"> 
            <td height="31"><strong>Tables</strong></td>
            <td><p>view tables in the query<br>
                add or delete tables<br>
                specify types of joins</p></td>
          </tr>
          <tr valign="top"> 
            <td><strong>Group Filters</strong></td>
            <td>subset grouped data based on specified conditions</td>
          </tr>
          <tr valign="top"> 
            <td><strong>Advanced</strong></td>
              <td>select the result set format<br>
                place limits on query processing<br>
                specify a location to save the query output<br>
                select the server on which you want to execute the query</td>
          </tr>
          <tr valign="top"> 
            <td><strong>Parameters</strong></td>
            <td>define parameters for queries</td>
          </tr>
        </table>
        <p><strong>Specifying a Result Format </strong><br>
          You can generate your <font color="#FF0000"><a href="m101_4.htm" onClick="suggestBack()">query 
          results</a></font> as </p>
        <ul>
          <li>a data table</li>
          <li>a data view</li>
          <li>a report. </li>
        </ul>
        <p>Choosing a type of output in advance ensures that your query provides 
          information in the appropriate format. You can run SAS Enterprise Guide 
          tasks against query results that are in the data table or data view 
          format, but not in the report format. Data tables and reports actually 
          contain data values, but a data view contains only the logic for retrieving 
          data that is stored elsewhere, not the data itself. Data views allow 
          you to read data dynamically without using disk space to create a new 
          data table. </p>
        <p><strong>Starting a Query </strong><br>
          To <font color="#FF0000"><a href="m101_7.htm" onClick="suggestBack()">start 
          a query</a></font>, you open a new query and add data.</p>
        <p><strong>Working with Columns in a Query </strong><br>
          When you <font color="#FF0000"><a href="m101_9.htm" onClick="suggestBack()">work 
          with columns</a></font> in a query, you can use the <strong>Select and 
          Sort</strong> tab to</p>
        <ul>
          <li>select existing columns </li>
          <li> compute new columns from other columns </li>
          <li> order columns </li>
          <li> sort rows by values of a column.</li>
        </ul>
        <p><strong>Subsetting Data in a Query</strong><br>
          You can <font color="#FF0000"><a href="m101_16.htm" onClick="suggestBack()">subset 
          your data</a></font> in the <strong>Filter Data</strong> tab by retrieving 
          only rows that meet certain criteria, based on values of columns in 
          the data. When you create more than one filter on your data, you can 
          specify whether the relationship between the filters is AND or OR.</p>
        <p><strong>Joining Tables in a Query </strong><br>
          You can <font color="#FF0000"><a href="m101_21.htm" onClick="suggestBack()">join 
          data</a></font> from up to 32 different tables on the <strong>Tables</strong> 
          tab. To join tables, you start by adding them to a query. When you add 
          more than one table to a query, the Query Builder automatically tries 
          to join the tables by columns that have the same name and type. By default, 
          the Query Builder joins the tables in an inner join, and the output 
          rows include only matching rows from the tables. </p>
        <p><strong>Joining Tables Manually and Replacing Values </strong><br>
          If you need to join tables that don't contain a column of the same name 
          and type, you may be able to <font color="#FF0000"><a href="m101_27.htm" onClick="suggestBack()">join 
          tables manually</a></font> on the <strong>Tables</strong> tab. On the 
          <strong>Select and Sort</strong> tab, you can also specify values to 
          replace individual values or ranges of values for a column. You can 
          also specify a value for all other values of a column.</p>
        <p><strong>Running Tasks against Query Output </strong><br>
          Sometimes you need to perform other analyses on your query results before 
          creating a report. If you specify a data table or data view as your 
          result format, you can <font color="#FF0000"><a href="m101_34.htm" onClick="suggestBack()">run 
          SAS Enterprise Guide tasks</a></font> against your query output.</p>
        <p><strong>Creating Queries That Accept Parameters </strong><br>
          To specify a value for subsetting data when you run a query, you can 
          <font color="#FF0000"><a href="m101_39.htm" onClick="suggestBack()">create 
          a parameter</a></font> for the query. Using a parameter with a filter 
          makes the filter dynamic. When you run a query with a parameter, it 
          prompts you to select a value for a column, then displays only rows 
          with matching values for that column. Creating a query that accepts 
          a parameter is a two-step process: you first create a parameter that 
          prompts you to select a value, then set a filter based on the parameter.</p>
        <p><strong>Grouping and Filtering Data in a Query </strong><br>
          To <font color="#FF0000"><a href="m101_46.htm" onClick="suggestBack()">group 
          and summarize data</a></font> in a query, you </p>
        <ul>
          <li>assign a grouping variable to define the groups that you want to 
            see</li>
          <li>select an analysis variable to summarize and a summary statistic 
            to compute</li>
          <li>limit the output rows to show only one row for each value of the 
            grouping variable.</li>
        </ul>
        <p>To subset your data when you are grouping and summarizing, you can 
          apply two types of filters:</p>
        <ul>
          <li>a filter to select <strong>individual rows</strong> from the data 
            sources in your query. This is the type of filter that you set on 
            the <strong>Filter Data</strong> tab of the Query Builder.<br>
            <br>
          </li>
          <li>a filter to select <strong>groups</strong>, which you set on the 
            <strong>Group Filters</strong> tab. The group filter applies to groups, 
            not to individual rows of data, so you can use a group filter to select 
            the groups that you want to view.</li>
        </ul>
        <p><strong>Using Outer Joins </strong><br>
          Sometimes you may need to use <font color="#FF0000"><a href="m101_56.htm" onClick="suggestBack()">outer 
          joins</a></font> instead of the default inner join. An outer join combines 
          and displays all rows that match across tables, plus some or all of 
          the rows that do not match. You can think of an outer join as an augmentation 
          of an inner join: an outer join returns all rows generated by an inner 
          join, plus additional (nonmatching) rows. The Query Builder supports 
          four types of joins: inner joins, left outer joins, right outer joins, 
          and full outer joins.</p>
        <p><strong>Additional Features</strong><br>
          You can use <font color="#FF0000"><a href="m101_65.htm" onClick="suggestBack()">SAS 
          functions and formats</a></font> to define and display data values in 
          your query output. You can also modify the code that the Query Builder 
          generates.</p></td>
  </tr>
</table>
</div>
<!-- InstanceEndEditable --> <br>
<table cellpadding=0 cellspacing=0 border=0 width="85%" align="center">
  <tr> 
    <td align="left"> 
      <hr>
    </td>
  </tr>
</table>

<P><!-- InstanceBeginEditable name="syntax" --><!-- InstanceEndEditable -->
<P> 
  <!-- InstanceBeginEditable name="sampleprogram" --><!-- InstanceEndEditable --> 
<P>
  <!-- InstanceBeginEditable name="pointstoremember" --> 
   <div id="le2_eg2_eg3" class="eg_div">
  <TABLE cellpadding=0 cellspacing=0 border=0 width="85%" align="center">
    <TR> 
      <TD align="left"><h2><STRONG><A NAME="Points">Points to Remember</A></STRONG> 
        </h2>
        <UL>
          <LI> You can join data from up to 32 different tables in a query.<BR>
            <BR>
          <LI> You can view and modify the SQL code that the Query Builder generates.<font color="#FF0000"> 
            <BR>
            <BR>
            </font> 
          <LI>A data table is the only result format that stores query output 
            permanently (until you re-run the query).<br>
            <br>
          <LI>When you add more than one table to a query, the Query Builder automatically 
            tries to join the tables by columns that have the same name and type.<br>
            <br>
          <LI>Running tasks on query output can sometimes have advantages over 
            performing many calculations in a query, particularly if you want 
            an attractively formatted report.
</UL>
      </TD>
    </TR>
  </TABLE>
  <br>
  </div>
<!-- InstanceEndEditable --></center>
<script>writeNav_regular_bottom();</script>
</body>
<!-- InstanceEnd --></html>