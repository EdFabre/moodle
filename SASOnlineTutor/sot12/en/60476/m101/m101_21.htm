<html><!-- InstanceBegin template="/Templates/eg_informationObject.dwt" codeOutsideHTMLIsLocked="false" -->
<head>
<SCRIPT LANGUAGE="JavaScript" SRC="../tut.js"></SCRIPT>
<script language="JavaScript1.2" src="../nav.js"></script>
<SCRIPT LANGUAGE="JavaScript">
 setPageTitle();
 setCookie();
 checkVersion();
 
// Drop down menu link- © Dynamic Drive (www.dynamicdrive.com)
// For full source code and 100's more DHTML scripts, visit http://www.dynamicdrive.com
// Credit MUST stay intact for use -->

</SCRIPT>

<!-- InstanceBeginEditable name="extrascript" -->
<SCRIPT LANGUAGE="JavaScript">
</SCRIPT>
<!-- InstanceEndEditable -->

<link rel="stylesheet" href="../tut.css">


<META http-equiv="Content-Type" content="text/html; charset=windows-1252">
</HEAD>

<body marginheight="0" marginwidth="0" topmargin="0" leftmargin="0" rightmargin="0" bgcolor="#FFFFF0" onLoad="writeEG_div()">
<script>writeeg_informationObjectTopNav1();</script>
	  
	  <font color="#003399" size="3" face="Arial, Helvetica, sans-serif"><strong><!-- InstanceBeginEditable name="TopicTitle" -->Joining 
      Tables in a Query<!-- InstanceEndEditable --></strong></font> 
      <!-- InstanceBeginEditable name="continued" --><!-- InstanceEndEditable -->
	  
<script>writeeg_informationObjectTopNav2();</script>

<br>
<center>
  <!-- InstanceBeginEditable name="content" --> 
  <div id="le2_eg2_eg3" class="eg_div">
  <table width="85%" border="0" cellpadding="0" cellspacing="0">
      <tr valign="top"> 
        <td> <p>Now you've determined which products need to be reordered and 
            which have been discontinued. Your next task is to create a report 
            about your suppliers so that you can order products and check on their 
            order status if needed.</p>
          <p>However, in this case, the information you need is not stored in 
            a single table. To find the supplier information for a given product, 
            you need to <strong>join</strong> two tables:</p>
          <ul>
            <li>the <strong>Products</strong> table that you used previously, 
              which contains product information<br>
              <br>
            </li>
            <li>the <strong>SupplyInfo(Suppliers$)</strong> table, a Microsoft 
              Excel file that contains supplier information such as the company 
              name and the name, title, and phone number of the contact at the 
              company.</li>
          </ul>
          <p>To join tables, you start by adding them to a query. When you add 
            more than one table to a query, the Query Builder automatically tries 
            to join the tables by columns that have the same name and type.</p>
          </td>
    </tr>
  </table>
    <p><br>
      <img src="images/m101_2c.gif" alt="joining tables" width="500" height="198"><br>
    </p>
    <br>
    <table width="85%" border="0" align="center" cellpadding="2" cellspacing="0">
      <tr> 
        <td valign="top" width="24"><img src="../navimages/note.gif" width="20" height="20" alt="Note"></td>
        <td valign="top">You can join data from up to 32 different tables. </td>
      </tr>
    </table>
    <br>
    <br>
    <table width="85%" border="0" cellpadding="0" cellspacing="0">
      <tr valign="top"> 
        <td> <p><strong>Example: Using an Inner Join to Find Supplier Information</strong></p>
          <p>In your new report, for each product that needs to be reordered or 
            is discontinued (the products in your previous query), you want to 
            find the following supplier information:</p>
          <ul>
            <li><code>SupplierID</code></li>
            <li><code>CompanyName</code></li>
            <li><code>ContactName</code></li>
            <li><code>ContactTitle</code></li>
            <li><code>Phone</code>.</li>
          </ul>
          <p>The <strong>Products</strong> and <strong>SupplyInfo(Suppliers$)</strong> 
            tables both contain the matching column <code>SupplierID</code>, so 
            the Query Builder can join them automatically.</p>
          <p>By default, the Query Builder joins the tables in an <strong>inner 
            join</strong>. In inner joins, the output rows include <strong>only 
            matching rows</strong> from the tables (based on the values in the 
            matching column). The following diagram illustrates an inner join 
            of two tables. The shaded area of overlap represents the matching 
            rows that the inner join returns as output. <br>
          </p>
          <br> <table border="0" align="center" cellpadding="3" cellspacing="0">
            <tr> 
              <td nowrap>Table 1</td>
              <td><div align="center"><img src="images/inner.gif" alt="inner join" width="92" height="61"><br>
                  Inner Join</div></td>
              <td nowrap>Table 2</td>
            </tr>
          </table>
          <p><br>
            Your report will display only the products from your last report, 
            but it will add supplier information to each row.</p>
          <p>Let's see how you join the tables and create your report.</p>
          </td>
      </tr>
    </table>
    <br>
  </div>
  
  <span id="divider" class="eg_div"><hr width="85%"></span>
  
 
  <p><br>

  
  <!-- InstanceEndEditable --> 
</center>
<script>writeNav_regular_bottom();</script>
</body>
<!-- InstanceEnd --></html>
