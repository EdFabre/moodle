<html><!-- InstanceBegin template="/Templates/eg_informationObject.dwt" codeOutsideHTMLIsLocked="false" -->
<head>
<SCRIPT LANGUAGE="JavaScript" SRC="../tut.js"></SCRIPT>
<script language="JavaScript1.2" src="../nav.js"></script>
<SCRIPT LANGUAGE="JavaScript">
 setPageTitle();
 setCookie();
 checkVersion();
 
// Drop down menu link- © Dynamic Drive (www.dynamicdrive.com)
// For full source code and 100's more DHTML scripts, visit http://www.dynamicdrive.com
// Credit MUST stay intact for use -->

</SCRIPT>

<!-- InstanceBeginEditable name="extrascript" -->
<SCRIPT LANGUAGE="JavaScript">
</SCRIPT>
<!-- InstanceEndEditable -->

<link rel="stylesheet" href="../tut.css">


<META http-equiv="Content-Type" content="text/html; charset=windows-1252">
</HEAD>

<body marginheight="0" marginwidth="0" topmargin="0" leftmargin="0" rightmargin="0" bgcolor="#FFFFF0" onLoad="writeEG_div()">
<script>writeeg_informationObjectTopNav1();</script>
	  
	  <font color="#003399" size="3" face="Arial, Helvetica, sans-serif"><strong><!-- InstanceBeginEditable name="TopicTitle" -->Joining 
      Tables Manually and Replacing Values<!-- InstanceEndEditable --></strong></font> 
      <!-- InstanceBeginEditable name="continued" --><!-- InstanceEndEditable -->
	  
<script>writeeg_informationObjectTopNav2();</script>

<br>
<center>
  <!-- InstanceBeginEditable name="content" --> 
  <div id="le2_eg2_eg3" class="eg_div">
  <table width="85%" border="0" cellpadding="0" cellspacing="0">
      <tr valign="top"> 
        <td> <p>In the<strong> Products to Order</strong> query that you created 
            to find supplier information, the Query Builder automatically joined 
            two tables by the <code>SupplierID</code> column. However, sometimes 
            you need to join tables that don't contain a column of the same name 
            and type. If so, you may be able to join tables manually.</p>
          <p><br><strong>
            Example: Joining the Products and Orders Tables Manually</strong></p>
          <p>Now that you have joined product and supplier information, suppose 
            that you need to find profit information on domestic and international 
            products. To find this information, you can join the <strong>Orders</strong> 
            table to the existing tables in the <strong> Products to Order</strong> 
            query. </p>
          <p>However, the Query Builder can't join the <strong>Orders</strong> 
            table automatically, because <strong>Orders</strong> doesn't contain 
            a column with the same name and type as a column in either <strong>Products</strong> 
            or <strong>SupplyInfo(Suppliers$)</strong>. If you add the <strong>Orders</strong> 
            table to your existing query, a warning message tells you to join 
            the columns manually.</p>
          <p>Fortunately, the <strong>Orders</strong> table does contain a column 
            (<code>PRODID</code>) with the same information as a column (<code>ProductID</code>) 
            in the <strong>Products</strong> table. So you can manually join order, 
            product, and supplier information to find profit information.</p>
          </td>
    </tr>
  </table>
    <p><br>
      <img src="images/m101_27a.gif" alt="manual join" width="390" height="209"></p>
    <p><br>
    </p>
    <table width="85%" border="0" cellpadding="0" cellspacing="0">
      <tr valign="top"> 
        <td> <p><strong> Replacing Values</strong></p>
          <p>Remember that you want to find profit information on domestic and 
            international products. But your query lists information by country, 
            not by whether it is domestic or international. To display results 
            as domestic or international rather than by individual country, you 
            can replace the value <em>USA</em> with the value <em>Domestic</em> 
            and replace all other values of <code>Country</code> with the value 
            <em>International</em>. </p>
          <p>In the Query Builder, you can specify values to replace <strong>individual 
            values</strong> or <strong>ranges of values</strong> for a column. 
            The table belows shows some examples of replacing values.</p>
          </td>
      </tr>
    </table>
    <p><br>
    <table border="1" cellpadding="7" cellspacing="0" bgcolor="#FFFFFF" title="replacing values">
      <tr bgcolor="#f7f7de"> 
        <td nowrap><strong>You can replace...</strong></td>
        <td nowrap><strong>Such as...</strong></td>
        <td nowrap><strong>With a value such as...</strong></td>
      </tr>
      <tr valign="top"> 
        <td rowspan="2">an individual value</td>
        <td><em>M</em></td>
        <td><em>Male</em></td>
      </tr>
      <tr> 
        <td><em>F </em></td>
        <td><em>Female </em></td>
      </tr>
      <tr valign="top"> 
        <td rowspan="5">ranges of values</td>
        <td>90-100</td>
        <td><em>A</em></td>
      </tr>
      <tr> 
        <td>80-89</td>
        <td><em>B</em></td>
      </tr>
      <tr> 
        <td>70-79</td>
        <td><em>C</em></td>
      </tr>
      <tr> 
        <td>60-69</td>
        <td><em>D</em></td>
      </tr>
      <tr> 
        <td>below 60</td>
        <td><em>F</em></td>
      </tr>
    </table>
    <p><br><table width="85%" border="0" cellpadding="0" cellspacing="0">
      <tr valign="top"> 
        <td> <p>Let's see how you create your query on profit for domestic and 
            international products. For this query, you create a table rather 
            than a report as output. Then you run a SAS Enterprise Guide task 
            against the new table to create a report.</p>
          </td>
      </tr>
    </table>
    <p>
  </div>
  
  <span id="divider" class="eg_div"><hr width="85%"></span>
  
  
  <p><br>

  
  <!-- InstanceEndEditable --> 
</center>
<script>writeNav_regular_bottom();</script>
</body>
<!-- InstanceEnd --></html>
