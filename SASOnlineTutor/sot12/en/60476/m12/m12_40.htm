<html><!-- InstanceBegin template="/Templates/informationObject.dwt" codeOutsideHTMLIsLocked="false" -->
<head>
<SCRIPT LANGUAGE="JavaScript" SRC="../tut.js"></SCRIPT>
<script language="JavaScript" src="../nav.js"></script>
<SCRIPT LANGUAGE="JavaScript">
 setPageTitle();
 setCookie();
  
// Drop down menu link- © Dynamic Drive (www.dynamicdrive.com)
// For full source code and 100's more DHTML scripts, visit http://www.dynamicdrive.com
// Credit MUST stay intact for use -->

</SCRIPT>

<!-- InstanceBeginEditable name="extrascript" --> 
<SCRIPT LANGUAGE="JavaScript">
</SCRIPT>
<!-- InstanceEndEditable -->

<link rel="stylesheet" href="../tut.css">


<META http-equiv="Content-Type" content="text/html; charset=windows-1252">
</HEAD>

<body marginheight="0" marginwidth="0" topmargin="0" leftmargin="0" rightmargin="0" bgcolor="#FFFFF0">
<script>writeinformationObjectTopNav1();</script>
	  
	  <font color="#003399" size="3" face="Arial, Helvetica, sans-serif"><strong><!-- InstanceBeginEditable name="TopicTitle" -->Creating 
      a Raw Data File<!-- InstanceEndEditable --></strong></font> <!-- InstanceBeginEditable name="continued" --><font color="#003399" size="3" face="Arial, Helvetica, sans-serif">(continued)</font><!-- InstanceEndEditable -->
	  
<script>writeinformationObjectTopNav2();</script>
<br>
<center>
  <!-- InstanceBeginEditable name="content" --> 
<table width="85%" border="0" cellpadding="0" cellspacing="0" align="center">
  <tr valign="top"> 
    <td>
<p><strong>Specifying the Raw Data File</strong></p>
      <p> You use the FILE and PUT statements to write the observations from a 
        SAS data set to a raw data file, just as you used the INFILE and INPUT 
        statements to create a SAS data set. These two sets of statements work 
        almost identically. </p>
      <p>When writing observations to a raw data file, use the FILE statement 
        to specify the output file.</p>
    </td>
  </tr>
</table>
<center>
  <br>
  <br>
  <table border="1" cellspacing="0" cellpadding="10" width="85%" bgcolor="#F7F7DE" title="General form, FILE statement">
    <tr> 
      <td align="left"><strong>General form, FILE statement:</strong> 
        <blockquote> <font color="#003399"><nobr><strong>FILE </strong><em>file-specification</em> 
            <em>&lt;options&gt;</em> &lt;<em>operating-environment-options</em>&gt;<strong>;</strong></nobr></font> 
          </blockquote>
        <p> where 
         <ul>
            <li><font color="#003399"><em>file-specification</em></font> can take 
              the form <em>fileref</em> to name a previously defined file reference 
              or '<em>filename</em>' to point to the actual name and location 
              of the file </li>
            <li><font color="#003399"><em>options</em></font> names options that 
              are used in creating the output file</li>
            <li><font color="#003399"><em>operating-environment-options</em></font> 
              names options that are specific to an operating environment (for 
              more information, see the SAS documentation for 
              <!--doc reference-->
              your operating environment). </li>
          </ul>
      </td>
    </tr>
  </table>
  <br>
  <br>
  <table cellpadding=0 cellspacing=0 border=0 width="85%">
    <tr> 
      <td> 
        <p>For example, if you want to read the <strong>Sasuser.Stress</strong> 
            data set and write it to a raw data file that is referenced by the 
            fileref <strong>Newdat</strong>, you would begin your program with 
            the following SAS statements.</p>
      </td>
    </tr>
  </table>
  <br>
  <table cellpadding=0 cellspacing=0 border=0 width="85%">
    <tr> 
      <td align="left"> 
        <p> 
          <pre><font color="#003399">    data _null_;</font>
<font color="#003399">       set sasuser.stress;
       <strong>file newdat;</strong>
</font></pre>
      </td>
    </tr>
  </table>
  <br>
  <table cellpadding="0" width="85%" cellspacing="0">
    <tr valign="Top"> 
      <td> 
        <p>Instead of identifying the raw data file with a SAS fileref, you can 
            choose to specify the entire filename and location in the FILE statement. 
            For example, the following FILE statement points directly to the <strong>C:\Clinic\Patients\Stress.dat 
            </strong>file. Note that the path specifying the filename and location 
            must be enclosed in quotation marks.</p>
        <p> 
          <pre><font color="#003399">    data _null_;</font>
<font color="#003399">       set sasuser.stress;
       <strong>file 'c:\clinic\patients\stress.dat';</strong></font></pre>
      </td>
    </tr>
  </table>
 
</center>
<!-- InstanceEndEditable --> 
</center>
<script>writeNav_regular_bottom();</script>
</body>
<!-- InstanceEnd --></html>
