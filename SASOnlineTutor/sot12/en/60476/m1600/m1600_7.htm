<html><!-- InstanceBegin template="/Templates/informationObject.dwt" codeOutsideHTMLIsLocked="false" -->
<head>
<SCRIPT LANGUAGE="JavaScript" SRC="../tut.js"></SCRIPT>
<script language="JavaScript" src="../nav.js"></script>
<SCRIPT LANGUAGE="JavaScript">
 setPageTitle();
 setCookie();
  
// Drop down menu link- © Dynamic Drive (www.dynamicdrive.com)
// For full source code and 100's more DHTML scripts, visit http://www.dynamicdrive.com
// Credit MUST stay intact for use -->

</SCRIPT>

<!-- InstanceBeginEditable name="extrascript" -->
<SCRIPT LANGUAGE="JavaScript">
</SCRIPT>
<!-- InstanceEndEditable -->

<link rel="stylesheet" href="../tut.css">


<META http-equiv="Content-Type" content="text/html; charset=windows-1252">
</HEAD>

<body marginheight="0" marginwidth="0" topmargin="0" leftmargin="0" rightmargin="0" bgcolor="#FFFFF0">
<script>writeinformationObjectTopNav1();</script>
	  
	  <font color="#003399" size="3" face="Arial, Helvetica, sans-serif"><strong><!-- InstanceBeginEditable name="TopicTitle" -->Viewing 
      SAS Libraries<!-- InstanceEndEditable --></strong></font> <!-- InstanceBeginEditable name="continued" --><font color="#003399" size="3" face="Arial, Helvetica, sans-serif">(continued)</font><!-- InstanceEndEditable -->
	  
<script>writeinformationObjectTopNav2();</script>
<br>
<center>
  <!-- InstanceBeginEditable name="content" -->
  <table width="85%" border="0" cellpadding="0" cellspacing="0">
    <tr valign="top"> 
      <td> <p><strong>Using PROC DATASETS</strong></p>
        <p>In addition to PROC CONTENTS, you can also use <strong>PROC DATASETS</strong> 
          to view the contents of a SAS library. PROC DATASETS also enables you 
          to perform a number of management tasks such as copying, deleting, or 
          modifying SAS files.</p>
        <p>PROC CONTENTS and PROC DATASETS overlap in terms of functionality. 
          Generally, these two function the same:</p>
        <ul>
          <li>the <strong>CONTENTS procedure</strong> </li>
          <li>the <strong>CONTENTS statement in the DATASETS procedure</strong>. 
          </li>
        </ul></td>
    </tr>
  </table>
  <br>
  <table cellpadding="5" cellspacing="0" border="0">
    <tr valign="top"> 
      <td bgcolor="#F7F7DE"> <p><font color="#003399"><strong>PROC <font color="#FF0000">CONTENTS 
          </font></strong><font color="#FF0000">&lt;<em>options</em>&gt;</font>;<br>
          <strong>RUN</strong>; </font></p></td>
      <td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td>
      <td bgcolor="#F7F7DE"> <p><font color="#003399"><strong>PROC DATASETS </strong>&lt;<em>options</em>&gt;;<br>
          </font><font color="#003399"><strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#FF0000">CONTENTS 
          </font></strong><font color="#FF0000">&lt;<em>options</em>&gt;</font>;<br>
          <strong>QUIT;</strong></font></p></td>
    </tr>
  </table>
  <br>
  <br>
  <table cellpadding="0" cellspacing="0" border="0" width="85%">
    <tr> 
      <td><p>The options for the PROC CONTENTS statement and the CONTENTS statement 
          in the DATASETS procedure are the same. For example, the following PROC 
          steps produce essentially the same output (with minor formatting differences):</p>
        <pre><font color="#003399">     proc datasets;
        contents data=sasuser._all_ nods;
     quit;</font></pre>
        <pre><font color="#003399">     proc contents data=sasuser._all_ nods;
     run;</font></pre></td>
    </tr>
  </table>
  <br>
  <table cellpadding="0" cellspacing="0" border="0" width="85%">
    <tr> 
      <td><p><strong>Comparing PROC CONTENTS and PROC DATASETS</strong></p>
        <p>The only differences between the CONTENTS procedure and the CONTENTS 
          statement in PROC DATASETS are the following:</p>
        <ul>
          <li> The default for <font color="#003399"><em>libref</em></font> in 
            the DATA= option in PROC CONTENTS is either <strong>Work</strong> 
            or <strong>User</strong>. For the CONTENTS statement, the default 
            is the libref of the procedure input library.<br>
            <br>
          </li>
          <li>PROC CONTENTS can read sequential files. The CONTENTS statement 
            cannot.<br>
            <br>
          </li>
          <li>PROC DATASETS is a run-time procedure that remains active until 
            you submit a QUIT statement, start another procedure or DATA step, 
            or end the SAS session.</li>
        </ul>
        <p>PROC DATASETS also uses a number of statements beside the CONTENTS 
          statement. These statements enable you to perform tasks that PROC CONTENTS 
          doesn't handle. With PROC DATASETS, you can </p>
        <ul>
          <li> copy SAS files from one SAS library to another</li>
          <li>rename SAS files</li>
          <li>repair SAS files</li>
          <li>delete SAS files</li>
          <li>list the SAS files that are contained in a SAS library</li>
          <li>list the attributes of a SAS data set, information such as the date 
            the data were last modified, whether the data are compressed, whether 
            the data are indexed, and so on</li>
          <li>manipulate passwords on SAS files</li>
          <li>append SAS data sets</li>
          <li>modify attributes of SAS data sets and variables within the data 
            sets</li>
          <li>create and delete indexes on SAS data sets</li>
          <li>create and delete integrity constraints on SAS data sets.</li>
        </ul>
        For more information about PROC DATASETS, see the 
        <!--doc reference-->
        SAS documentation.</td>
    </tr>
  </table>
  <br>
  <p> 
<!-- InstanceEndEditable --> 
</center>
<script>writeNav_regular_bottom();</script>
</body>
<!-- InstanceEnd --></html>
