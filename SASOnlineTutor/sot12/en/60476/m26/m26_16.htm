<html><!-- InstanceBegin template="/Templates/informationObject.dwt" codeOutsideHTMLIsLocked="false" -->
<head>
<SCRIPT LANGUAGE="JavaScript" SRC="../tut.js"></SCRIPT>
<script language="JavaScript" src="../nav.js"></script>
<SCRIPT LANGUAGE="JavaScript">
 setPageTitle();
 setCookie();
  
// Drop down menu link- © Dynamic Drive (www.dynamicdrive.com)
// For full source code and 100's more DHTML scripts, visit http://www.dynamicdrive.com
// Credit MUST stay intact for use -->

</SCRIPT>

<!-- InstanceBeginEditable name="extrascript" --> 
<SCRIPT LANGUAGE="JavaScript">
</SCRIPT>
<!-- InstanceEndEditable -->

<link rel="stylesheet" href="../tut.css">


<META http-equiv="Content-Type" content="text/html; charset=windows-1252">
</HEAD>

<body marginheight="0" marginwidth="0" topmargin="0" leftmargin="0" rightmargin="0" bgcolor="#FFFFF0">
<script>writeinformationObjectTopNav1();</script>
	  
	  <font color="#003399" size="3" face="Arial, Helvetica, sans-serif"><strong><!-- InstanceBeginEditable name="TopicTitle" -->Reading 
      the Same Number of Repeating Fields<!-- InstanceEndEditable --></strong></font> <!-- InstanceBeginEditable name="continued" --><font color="#003399" size="3" face="Arial, Helvetica, sans-serif">(continued)</font><!-- InstanceEndEditable -->
	  
<script>writeinformationObjectTopNav2();</script>
<br>
<center>
  <!-- InstanceBeginEditable name="content" --> 
  <table width="85%" border="0" cellpadding="0" cellspacing="0" align="center">
    <tr valign="top"> 
      <td> <p><strong>More Efficient Programming</strong> </p>
        <p> Each record contains four different values for the variable <code>Sales</code>, 
          so the INPUT statement must execute four times. Rather than writing 
          four INPUT statements, you can execute one INPUT statement repeatedly 
          in an iterative DO loop. 
        <p> Each time the loop executes, you need to write the values for <code>ID</code>, 
          <code>Quarter</code>, and <code>Sales</code> as an observation to the 
          data set. This is easily accomplished by using the OUTPUT statement. 
        <pre>     <font color="#003399">data perm.sales97;</font>
        <font color="#003399">infile data97;</font>
        <font color="#003399">input ID $ @;</font>
        <font color="#003399"><strong>do Quarter=1 to 4;</strong></font>
           <font color="#003399">input Sales : comma. @;</font>
           <font color="#003399"><strong>output;</strong></font>
        <font color="#003399">end;</font>
     <font color="#003399">run;</font></pre> 
        <p> By default, every DATA step contains an implicit OUTPUT statement 
          at the end of the step. Placing an explicit OUTPUT statement in a DATA 
          step overrides the automatic output, and SAS adds an observation to 
          a data set only when the explicit OUTPUT statement is executed. </td>
    </tr>
  </table>
  <br>
    <br>
  <!-- InstanceEndEditable --> 
</center>
<script>writeNav_regular_bottom();</script>
</body>
<!-- InstanceEnd --></html>
