<html><!-- InstanceBegin template="/Templates/summary.dwt" codeOutsideHTMLIsLocked="false" -->
<head>

<SCRIPT LANGUAGE="JavaScript" SRC="../tut.js"></SCRIPT>
<script language="JavaScript1.2" src="../nav.js"></script>


<SCRIPT LANGUAGE="JavaScript">
 setPageTitle();
 setCookie();
 
// Drop down menu link- © Dynamic Drive (www.dynamicdrive.com)
// For full source code and 100's more DHTML scripts, visit http://www.dynamicdrive.com
// Credit MUST stay intact for use -->

</SCRIPT>

<!-- InstanceBeginEditable name="extrascript" -->
<SCRIPT LANGUAGE="JavaScript">
</SCRIPT>
<!-- InstanceEndEditable -->

<link rel="stylesheet" href="../tut.css">

<META http-equiv="Content-Type" content="text/html; charset=windows-1252">
</HEAD>

<body marginheight="0" marginwidth="0" topmargin="0" leftmargin="0" rightmargin="0" bgcolor="#FFFFF0">
<script>writeinformationObjectTopNav1();</script>
 
      <font color="#003399" size="3" face="Arial, Helvetica, sans-serif"><strong><script>document.write(summaryTitle)</script></strong></font>
 
 
<script>writeinformationObjectTopNav2();</script>
<br>
<center><TABLE cellpadding=0 cellspacing=0 border=0 width="85%" align="center">
  <TR>
      <TD align="left">
      
      <p><script>document.write(summaryPageContains)</script></p>
     <ul><!-- InstanceBeginEditable name="links" -->
      <LI> <A HREF="#Text" onMouseOver="window.status='Go to the text summary section.'; "
		onMouseOut="window.status=''">a text summary of the material taught in 
        the lesson</A> 
      <LI> <A HREF="#Syntax" onMouseOver="window.status='Go to the syntax section.'; "
		onMouseOut="window.status=''">syntax for&nbsp;statements and options</A> 
        <LI><A HREF="#Sample" onMouseOver="window.status='Go to the sample program section.'; "
		onMouseOut="window.status=''">sample programs</A> 
        <LI> <A HREF="#Points" onMouseOver="window.status='Go to the points to remember section.'; "
		onMouseOut="window.status=''">points to remember</A>.
      <!-- InstanceEndEditable --></ul>
<P>
	  <HR>
      </TD>
    </TR>
  </TABLE>
  <P>

<!-- InstanceBeginEditable name="textsummaryintro" -->     
<TABLE cellpadding=0 cellspacing=0 border=0 width="85%" align="center">
  <TR>
	<TD align="left"><h2><STRONG><A NAME="Text"><script>document.write(summaryPageTextSummaryTitle);</script></A></STRONG> </h2>
      <P>
	  <EM><script>document.write(summaryPageDirections);</script></EM></TD>
      </TR>
    </TABLE>
<!-- InstanceEndEditable -->
  <br>
<!-- InstanceBeginEditable name="textsummary" --> 
<table width="85%" border="0" cellpadding="0" cellspacing="0" align="center">
  <tr valign="top"> 
    <td> <p><STRONG>Using SAS Functions</STRONG><BR>
        <A HREF="m30_2.htm" onClick="suggestBack()" onMouseOver="window.status='Display details on the use of SAS functions.'; "
            onMouseOut="window.status=''">SAS functions</A> can be used to convert 
        data and to manipulate the values of character variables. Functions are 
        written by specifying the function name, then its <A HREF="m30_4.htm" onClick="suggestBack()" onMouseOver="window.status='Display details on function arguments.'; "
            onMouseOut="window.status=''">arguments</A> in parentheses. Arguments 
        can include variables, constants, or expressions. Although arguments are 
        typically separated by commas, they can also be specified as variable 
        lists or arrays. </p></td>
  </tr>
</table>
<br>
<center>
  <TABLE cellpadding=0 cellspacing=0 border=0 width="85%">
    <TR> 
      <TD align="left"><STRONG>Automatic Character-to-Numeric Conversion</STRONG><BR>
        When character variables are used in a numeric context, SAS tries 
        to <A HREF="m30_9.htm" onClick="suggestBack()" onMouseOver="window.status='Display details on automatic character conversion.'; "
            onMouseOut="window.status=''">convert the character values</A> to 
        numeric values. Numeric context includes arithmetic operations, comparisons 
        with numeric values, and assignment to previously defined numeric variables. 
        The original character values are not changed. The conversion creates 
        temporary numeric values and places a note in the SAS log.</TD>
    </TR>
  </TABLE>
</center>
<P align="center"> 
<center>
  <TABLE cellpadding=0 cellspacing=0 border=0 width="85%">
    <TR> 
      <TD align="left"><STRONG>Explicit Character-to-Numeric Conversion</STRONG><BR>
        The <A HREF="m30_11.htm" onClick="suggestBack()" onMouseOver="window.status='Display details on the INPUT function.'; "
            onMouseOut="window.status=''">INPUT function</A> provides direct, 
        controlled conversion of character values to numeric values. When a character 
        variable is specified in a numeric informat, the INPUT function generates 
        numeric values without placing a note in the SAS log.</TD>
    </TR>
  </TABLE>
</center>
<P align="center"> 
<center>
  <TABLE cellpadding=0 cellspacing=0 border=0 width="85%">
    <TR> 
      <TD align="left"><STRONG>Automatic Numeric-to-Character Conversion</STRONG><BR>
        When numeric variables are used in a character context, SAS tries 
        to <A HREF="m30_17.htm" onClick="suggestBack()" onMouseOver="window.status='Display details on automatic numeric conversion.'; "
            onMouseOut="window.status=''">convert the numeric values</A> to character 
        values. Character context includes concatenation operations, use in functions 
        that require character arguments, and assignment to previously defined 
        character variables. The original numeric values are not changed; the 
        conversion creates temporary character values and places a note in the 
        SAS log.</TD>
    </TR>
  </TABLE>
</center>
<P align="center"> 
<center>
  <TABLE cellpadding=0 cellspacing=0 border=0 width="85%">
    <TR> 
      <TD align="left"><STRONG>Explicit Numeric-to-Character Conversion</STRONG><BR>
        The <A HREF="m30_19.htm" onClick="suggestBack()" onMouseOver="window.status='Display details on the PUT function.';" onMouseOut="window.status=''">PUT 
        function</A> provides direct, controlled conversion of numeric values 
        to character values. The format specified in a PUT function must match 
        the source, so use an appropriate numeric format to create the new character 
        values. No note will appear in the SAS log.</TD>
    </TR>
  </TABLE>
</center>
<P align="center"> 
<center>
  <TABLE cellpadding=0 cellspacing=0 border=0 width="85%">
    <TR> 
      <TD align="left"><STRONG>SAS Date and Time Values</STRONG><BR>
        SAS <A HREF="m30_25.htm" onClick="suggestBack()" onMouseOver="window.status='Display details on SAS date and time values.'; "
            onMouseOut="window.status=''">date values</A> are stored as the number 
        of days from January 1, 1960; time values are stored as the number of 
        seconds since midnight. These values can be displayed in a variety of 
        forms by associating them with SAS formats.</TD>
    </TR>
  </TABLE>
</center>
<P align="center"> 
<center>
  <TABLE cellpadding=0 cellspacing=0 border=0 width="85%">
    <TR> 
        <TD><STRONG>YEAR, QTR, MONTH, and DAY Functions</STRONG><BR>
          To extract the <A HREF="m30_28.htm" onClick="suggestBack()" onMouseOver="window.status='Display details on the YEAR, MONTH, and DAY functions.';" onMouseOut="window.status=''">year, 
          quarter, month, or day value</A> from a SAS date value, specify the 
          YEAR, QTR, MONTH, or DAY function followed by the SAS date value in 
          parentheses. The YEAR function returns a four-digit number; QTR returns 
          a value of 1, 2, 3, or 4; MONTH returns a number from 1 to 12; and DAY 
          returns 1 to 31.</TD>
    </TR>
  </TABLE>
</center>
<P align="center"> 
<center>
  <TABLE cellpadding=0 cellspacing=0 border=0 width="85%">
    <TR> 
      <TD align="left"><STRONG>WEEKDAY Function</STRONG><BR>
        To extract the <A HREF="m30_40.htm" onClick="suggestBack()" onMouseOver="window.status='Display details on the WEEKDAY function.'; "
            onMouseOut="window.status=''">day of the week</A> from a SAS date 
        value, specify the function WEEKDAY followed by the SAS date value in 
        parentheses. The function returns a numeric value from 1 to 7, representing 
        the day of the week.</TD>
    </TR>
  </TABLE>
</center>
<P align="center"> 
<center>
  <TABLE cellpadding=0 cellspacing=0 border=0 width="85%">
    <TR> 
      <TD align="left"><STRONG>MDY Function</STRONG><BR>
        To <A HREF="m30_42.htm" onClick="suggestBack()" onMouseOver="window.status='Display details on the MDY function.';" onMouseOut="window.status=''">create 
        a SAS date value</A> for a month, day, and year, specify the MDY function 
        followed by the date values. The result can be displayed in several ways 
        by applying a SAS date format. SAS interprets two-digit values 
        according to the 100-year span that is set by the YEARCUTOFF= system option. 
        The default value of YEARCUTOFF= is 1920.</TD>
    </TR>
  </TABLE>
</center>
<P align="center"> 
<center>
  <TABLE cellpadding=0 cellspacing=0 border=0 width="85%">
    <TR> 
      <TD align="left"><STRONG>DATE and TODAY Functions</STRONG><BR>
        To <A HREF="m30_46.htm" onClick="suggestBack()" onMouseOver="window.status='Display details on the DATE and TODAY functions.'; "
            onMouseOut="window.status=''">convert the current date</A> to a SAS 
        date value, specify the DATE or TODAY function without arguments. The 
        DATE and TODAY functions can be used interchangeably.</TD>
    </TR>
  </TABLE>
</center>
<P align="center"> 
<center>
  <TABLE cellpadding=0 cellspacing=0 border=0 width="85%">
    <TR> 
      <TD><STRONG>INTCK Function</STRONG><BR>
        To count the number of <A HREF="m30_48.htm" onClick="suggestBack()" onMouseOver="window.status='Display details on the INTCK function.';" onMouseOut="window.status=''">time 
        intervals</A> that occur in a time span, use the INTCK function and specify 
        the interval constant or variable, the beginning date value, and the ending 
        date value. The INTCK function counts intervals from fixed interval beginnings, 
        not in multiples of an interval unit. Partial intervals are not counted.</TD>
    </TR>
  </TABLE>
</center>
<P align="center"> 
<center>
  <TABLE cellpadding="0" cellspacing="0" border="0" width="85%">
    <TR> 
      <TD><STRONG>INTNX Function</STRONG><BR>
        To apply <A HREF="m30_52.htm" onClick="suggestBack()" onMouseOver="window.status='Display details on the INTNX function.';" onMouseOut="window.status=''">multiples 
        of an interval</A> to a date value, use the INTNX function and specify 
        the interval constant or variable, the start-from date value, and the 
        increment. Include the alignment option to specify whether the date returned 
        should be at the beginning, middle, or end of the interval.</TD>
    </TR>
  </TABLE>
</center>
<P align="center"> 
<center>
  <TABLE cellpadding=0 cellspacing=0 border=0 width="85%">
    <TR> 
      <TD><STRONG>SCAN Function</STRONG><BR>
        The SCAN function <A HREF="m30_56.htm" onClick="suggestBack()" onMouseOver="window.status='Display details on the SCAN function.'; "
            onMouseOut="window.status=''">separates a character string</A> to 
        return a word based on its position. It defines words by counting delimiters, 
        which are characters that are used as word separators. The name of the 
        function is followed, in parentheses, by the name of the character variable, 
        the number of delimiters to count, and the specified delimiters enclosed 
        in quotation marks.</TD>
    </TR>
  </TABLE>
</center>
<P align="center"> 
<center>
  <TABLE cellpadding=0 cellspacing=0 border=0 width="85%">
    <TR> 
      <TD align="left"><STRONG>SUBSTR Function</STRONG><BR>
        The SUBSTR function can be used to <A HREF="m30_65.htm" onClick="suggestBack()" onMouseOver="window.status='Display details on extracting values with the SUBSTR function.'; "
            onMouseOut="window.status=''">extract</A> or <A HREF="m30_70.htm" onClick="suggestBack()" onMouseOver="window.status='Display details on replacing values with the SUBSTR function.'; "
            onMouseOut="window.status=''">replace</A> any portion of a character 
        string. To extract values, place the function on the right side of an 
        assignment statement and specify, in parentheses, the name of the character 
        variable, the starting character position, and the number of characters 
        to extract. To replace values, place the function on the left side of 
        an assignment statement and specify, in parentheses, the name of the variable 
        being modified, the starting character position, and the number of characters 
        to replace.</TD>
    </TR>
  </TABLE>
</center>
<P align="center"> 
<center>
  <TABLE cellpadding=0 cellspacing=0 border=0 width="85%">
    <TR> 
      <TD align="left"><STRONG>SCAN versus SUBSTR</STRONG><BR>
        Both the <A HREF="m30_63.htm" onClick="suggestBack()" onMouseOver="window.status='Display details on SCAN versus SUBSTR.'; "
            onMouseOut="window.status=''">SCAN and SUBSTR</A> functions can extract 
        a substring from a character value. SCAN relies on delimiters, whereas 
        SUBSTR reads values from specified locations. Use SCAN when you know the 
        delimiter and the order of words. Use SUBSTR when the positions of the 
        characters don't vary.</TD>
    </TR>
  </TABLE>
</center>
<P align="center"> 
<center>
  <TABLE cellpadding=0 cellspacing=0 border=0 width="85%">
    <TR> 
      <TD align="left"><STRONG>TRIM Function</STRONG><BR>
        Because SAS pads the length of character values, unwanted spaces 
        can sometimes appear after strings are concatenated. To <A HREF="m30_75.htm" onClick="suggestBack()" onMouseOver="window.status='Display details on the TRIM function.'; "
            onMouseOut="window.status=''">remove trailing blanks</A> from character 
        values, specify the TRIM function with the name of a character variable. 
        Remember that trimmed values will be padded with blanks again if they 
        are shorter than the length of the new variable.</TD>
    </TR>
  </TABLE>
</center>
<P align="center"> 
<center>
  <TABLE cellpadding=0 cellspacing=0 border=0 width="85%">
    <TR> 
      <TD align="left"><STRONG>INDEX Function</STRONG><BR>
        To <A HREF="m30_78.htm" onClick="suggestBack()" onMouseOver="window.status='Display details on the INDEX function.'; "
            onMouseOut="window.status=''">test character values</A> for the presence 
        of a string, use the INDEX function and specify, in parentheses, the name 
        of the variable and the string enclosed in quotation marks. The INDEX 
        function can be used with an IF statement when you are creating a data 
        set. However, only those observations in which the function finds the 
        string and returns a value greater than <EM>0</EM> are written to the 
        new data set.</TD>
    </TR>
  </TABLE>
</center>
<P align="center"> 
<center>
  <TABLE cellpadding=0 cellspacing=0 border=0 width="85%">
    <TR> 
      <TD align="left"><STRONG>UPCASE Function</STRONG><BR>
        Lowercase letters in character values can be <A HREF="m30_83.htm" onClick="suggestBack()" onMouseOver="window.status='Display details on the UPCASE function.'; "
            onMouseOut="window.status=''">converted to uppercase</A> by using 
        the UPCASE function. Include the function in an assignment statement, 
        and specify the variable name in parentheses.</TD>
    </TR>
  </TABLE>
</center>
<P align="center"> 
<center>
  <TABLE cellpadding="0" cellspacing="0" border="0" width="85%">
    <tr> 
      <TD><STRONG>LOWCASE Function</STRONG><BR>
        Uppercase letters in character values can be <a href="m30_85.htm" onClick="suggestBack()" onMouseOver="window.status='Display details on the LOWCASE function.';" 
	onMouseOut="window.status=''">converted to lowercase</a> by using the LOWCASE 
        function. Include the function in an assignment statement, and specify 
        the variable name in parentheses.</TD>
    </TR>
  </TABLE>
</center>
<P align="center"> 
<center>
  <TABLE cellpadding="0" cellspacing="0" border="0" width="85%">
    <tr> 
      <TD><STRONG>TRANWRD Function</strong><br>
        You can replace or remove <a href="m30_87.htm" onClick="suggestBack()" onMouseOver="window.status='Display details on the TRANWRD function.';" onMouseOut="window.status=''"> 
        patterns of characters</a> in the values of character variables by using 
        the TRANWRD function. Use the function in an assignment statement, and 
        specify the source, target, and replacement strings or variables in parentheses.</TD>
    </TR>
  </TABLE>
</center>
<P align="center"> 
<center>
  <TABLE cellpadding=0 cellspacing=0 border=0 width="85%">
    <tr> 
      <td><strong>INT Function</strong><br>
        To return the integer portion of a numeric value, use the <a href="m30_89.htm" onClick="suggestBack()" onMouseOver="window.status='Display details on the INT function.';" onMouseOut="window.status=''">INT 
        function</A>. Any decimal portion of the INT function argument is discarded.</td>
    </tr>
  </table>
</center>
<P align="center"> 
<center>
  <table cellpadding=0 cellspacing=0 border=0 width="85%">
    <tr> 
      <td><strong>ROUND Function</strong><br>
        To round values to the nearest specified unit, use the <a href="m30_90.htm" onClick="suggestBack()" onMouseOver="window.status='Display details on the ROUND function.';" onMouseOut="window.status=''">ROUND 
        function</A>. If a round-off unit is not provided, the argument is rounded 
        to the nearest integer.</td>
    </tr>
  </table>
    <br>
    <table cellpadding=0 cellspacing=0 border=0 width="85%">
      <tr> 
        <td><strong>Nesting SAS Functions</strong><br>
          To write more efficient programs, you can <a href="m30_92.htm" onClick="suggestBack()" onMouseOver="window.status='Display details on the ROUND function.';" onMouseOut="window.status=''">nest 
          functions</A> as appropriate.You can nest any functions as long as the 
          function that is used as the argument meets the requirements for the 
          argument.</td>
      </tr>
    </table>
  </center>
<!-- InstanceEndEditable --> <br>
<table cellpadding=0 cellspacing=0 border=0 width="85%" align="center">
  <tr> 
    <td align="left"> 
      <hr>
    </td>
  </tr>
</table>

<P><!-- InstanceBeginEditable name="syntax" -->
<center>
  <TABLE cellpadding=0 cellspacing=0 border=0 width="85%">
    <TR> 
      <TD><STRONG><A NAME="Syntax">Syntax</A></STRONG> <P> <EM>To go to the 
          page where a statement or option was presented, select a link.</EM>
        <BLOCKQUOTE> <A HREF="m30_11.htm" onClick="suggestBack()" onMouseOver="window.status='Display details on the INPUT function.';" onMouseOut="window.status=''"><strong>INPUT(</strong><EM>source,</EM><EM>informat</EM><strong>)</strong></A> 
          <P> <A HREF="m30_19.htm" onClick="suggestBack()" onMouseOver="window.status='Display details on the PUT function.';" onMouseOut="window.status=''"><strong>PUT(</strong><EM>source,</EM><EM>format</EM><strong>)</strong></A> 
          <P> <A HREF="m30_28.htm" onClick="suggestBack()" onMouseOver="window.status='Display details on the YEAR function.';" onMouseOut="window.status=''"><strong>YEAR(</strong><EM>date</EM><strong>)</strong></A>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
          <P><A HREF="m30_28.htm" onClick="suggestBack()" onMouseOver="window.status='Display details on the QTR function.';" onMouseOut="window.status=''"><strong>QTR(</strong><EM>date</EM><strong>)</strong></a> 
          <P><A HREF="m30_28.htm" onClick="suggestBack()" onMouseOver="window.status='Display details on the MONTH function.';" onMouseOut="window.status=''"><strong>MONTH(</strong><EM>date</EM><strong>)</strong></a> 
          <P><A HREF="m30_28.htm" onClick="suggestBack()" onMouseOver="window.status='Display details on the DAY function.';" onMouseOut="window.status=''"><strong>DAY(</strong><EM>date</EM><strong>)</strong></A> 
          <P> <A HREF="m30_40.htm" onClick="suggestBack()" onMouseOver="window.status='Display details on the WEEKDAY function.';" onMouseOut="window.status=''"><strong>WEEKDAY(</strong><EM>date</EM><strong>)</strong></A> 
          <P> <A HREF="m30_42.htm" onClick="suggestBack()" onMouseOver="window.status='Display details on the MDY function.'; "
              onMouseOut="window.status=''"><strong>MDY(</strong><EM>month,day,year</EM><strong>)</strong></A> 
          <P> <A HREF="m30_46.htm" onClick="suggestBack()" onMouseOver="window.status='Display details on the TODAY function.';" onMouseOut="window.status=''"><strong>DATE()</strong></A>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
          <P><A HREF="m30_46.htm" onClick="suggestBack()" onMouseOver="window.status='Display details on the TODAY function.';" onMouseOut="window.status=''"><strong>TODAY()</strong></A> 
          <P> <A HREF="m30_48.htm" onClick="suggestBack()" onMouseOver="window.status='Display details on the INTCK function.';" onMouseOut="window.status=''"><STRONG>INTCK(</STRONG>'<EM>interval</EM>',<EM>from</EM>,<EM>to</EM><STRONG>)</STRONG></A> 
          <P> <A HREF="m30_52.htm" onClick="suggestBack()" onMouseOver="window.status='Display details on the INTNX function.';" onMouseOut="window.status=''"><STRONG>INTNX(</STRONG>'<EM>interval</EM>',<EM>start-from</EM>,<EM>increment</EM>&lt;,'<EM>alignment</EM>'&gt;<STRONG>)</STRONG></A> 
            <P> <A HREF="m30_56.htm" onClick="suggestBack()" onMouseOver="window.status='Display details on the SCAN function.';" onMouseOut="window.status=''"><strong>SCAN(</strong><EM>argument,n,&lt;delimiters&gt;</EM><strong>)</strong></A> 
            <P> <A HREF="m30_65.htm" onClick="suggestBack()" onMouseOver="window.status='Display details on extracting values with the SUBSTR function.'; "
              onMouseOut="window.status=''"><strong>SUBSTR(</strong><EM>argument,position,&lt;n&gt;</EM><strong>)</strong></A> 
            <P> <A HREF="m30_75.htm" onClick="suggestBack()" onMouseOver="window.status='Display details on the TRIM function.'; "
              onMouseOut="window.status=''"><strong>TRIM(</strong><EM>argument</EM><strong>)</strong></A> 
          <P> <A HREF="m30_78.htm" onClick="suggestBack()" onMouseOver="window.status='Display details on the INDEX function.'; "
              onMouseOut="window.status=''"><strong>INDEX(</strong><EM>source,excerpt</EM><strong>)</strong></A> 
          <P> <A HREF="m30_83.htm" onClick="suggestBack()" onMouseOver="window.status='Display details on the UPCASE function.'; "onMouseOut="window.status=''"><strong>UPCASE(</strong><EM>argument</EM><strong>)</strong></A> 
          <P> <A HREF="m30_85.htm" onClick="suggestBack()" onMouseOver="window.status='Display details on the LOWCASE function.'; "onMouseOut="window.status=''"><strong>LOWCASE(</strong><EM>argument</EM><strong>)</strong></A> 
          <P> <A HREF="m30_87.htm" onClick="suggestBack()" onMouseOver="window.status='Display details on the TRANWRD function.'; "onMouseOut="window.status=''"><strong>TRANWRD(</strong><EM>source</EM>,<EM>target</EM>,<EM>replacement</EM><strong>)</strong></A> 
          <P> <A HREF="m30_89.htm" onClick="suggestBack()" onMouseOver="window.status='Display details on the INT function.'; "onMouseOut="window.status=''"><strong>INT(</strong><EM>argument</EM><strong>)</strong></A> 
          <P> <A HREF="m30_90.htm" onClick="suggestBack()" onMouseOver="window.status='Display details on the ROUND function.'; "onMouseOut="window.status=''"><strong>ROUND(</strong><EM>argument,round-off-unit</EM><strong>)</strong></A></BLOCKQUOTE>
        </TD>
    </TR>
  </TABLE>
  <P align="center"> 
  <center>
    <TABLE cellpadding=0 cellspacing=0 border=0 width="85%">
      <TR> 
        <TD align="left"> <HR> </TD>
      </TR>
    </TABLE>
    <br>
  </center>
</center>
<!-- InstanceEndEditable -->
<P> 
  <!-- InstanceBeginEditable name="sampleprogram" --> 
  <TABLE cellpadding=0 cellspacing=0 border=0 width="85%">
    <TR> 
      <TD align="left"><STRONG><A NAME="Sample">Sample Programs</A></STRONG> 
        <PRE><FONT color="#003399">     data hrd.newtemp;</FONT>
<FONT color="#003399">        set hrd.temp;</FONT>
<FONT color="#003399">        Salary=input(payrate,2.)*hours;</FONT>
<FONT color="#003399">     run;</FONT>
</PRE>
        <PRE><FONT color="#003399">     data hrd.newtemp;</FONT>
<FONT color="#003399">        set hrd.temp;</FONT>
<FONT color="#003399">        Assignment=put(site,2.)||'/'||dept;</FONT>
<FONT color="#003399">     run;</FONT>
</PRE>
        <PRE>     <FONT color="#003399">data hrd.tempnov;</FONT>
        <FONT color="#003399">set hrd.temp;</FONT>
     <FONT color="#003399">   if month(startdate)=11;</FONT>
     <FONT color="#003399">run;</FONT>
</PRE>
        <PRE>     <FONT color="#003399">data hrd.temp98;</FONT>
        <FONT color="#003399">set hrd.temp;</FONT>
     <FONT color="#003399">   if year(startdate)=1998;</FONT>
     <FONT color="#003399">run;</FONT>
</PRE>
        <PRE>     <FONT color="#003399">data radio.schwkend;</FONT>
        <FONT color="#003399">set radio.sch;</FONT>
        <FONT color="#003399">if weekday(airdate)=7 or weekday(airdate)=1;</FONT>
     <FONT color="#003399">run;</FONT>
</PRE>
        <PRE>     <FONT color="#003399">data hrd.newtemp(drop=month day year);</FONT>
        <FONT color="#003399">set hrd.temp;</FONT>
        <FONT color="#003399">Date=mdy(month,day,year);</FONT>
     <FONT color="#003399">run;</FONT></PRE>

<PRE>     <FONT color="#003399">data hrd.newtemp;</FONT>
        <FONT color="#003399">set hrd.temp;</FONT>
        <FONT color="#003399">EditDate=today();</FONT>
     <FONT color="#003399">run;</FONT></PRE>

        <PRE>     <FONT color="#003399">data work.anniv20;</FONT>
        <FONT color="#003399">set flights.mechanics(keep=id lastname firstname hired);</FONT>
        <FONT color="#003399">Years=intck('year',hired,today());</FONT>
        <FONT color="#003399">if years=20 and month(hired)=month(today());</FONT>
     <FONT color="#003399">proc print data=work.anniv20;</FONT>
        <FONT color="#003399">title '20-Year Anniversaries this Month';</FONT>
     <FONT color="#003399">run;</FONT></PRE>

<PRE>     <FONT color="#003399">data work.after;</FONT>
        <FONT color="#003399">set work.before;</FONT>
        <FONT color="#003399">TargetYear=intnx('year','05feb94'd,3);</FONT>
     <FONT color="#003399">run;</FONT></PRE>

        <PRE>     <FONT color="#003399">data hrd.newtemp(drop=name);</FONT>
        <FONT color="#003399">set hrd.newtemp;</FONT>
<FONT color="#003399">        length LastName FirstName MiddleName $ 10;</FONT>
        <FONT color="#003399">lastname=scan(name,1,' ,');</FONT>
        <FONT color="#003399">firstname=scan(name,2,' ,');</FONT>
        <FONT color="#003399">middlename=scan(name,3,' ,');</FONT>
     <FONT color="#003399">run;</FONT>
</PRE>
        <PRE>     <FONT color="#003399">data hrd.temp2(drop=exchange);</FONT>
        <FONT color="#003399">set hrd.temp;</FONT>
     <FONT color="#003399">   exchange=substr(phone,1,3);</FONT>
     <FONT color="#003399">   if exchange='622' then substr(phone,1,3)='433';</FONT>
     <FONT color="#003399">run;</FONT>
</PRE>
        <PRE>     <FONT color="#003399">data hrd.newtemp(drop=address city state zip);</FONT>
        <FONT color="#003399">set hrd.temp;</FONT>
     <FONT color="#003399">   NewAddress=trim(address)||', '||trim(city)||', '||zip;</FONT>
     <FONT color="#003399">run;</FONT>
</PRE>
        <PRE>     <FONT color="#003399">data hrd.datapool;</FONT>
        <FONT color="#003399">set hrd.temp;</FONT>
        <FONT color="#003399">if index(job,'word processing') &gt; 0;</FONT>
     <FONT color="#003399">run;</FONT>
</PRE>
        <PRE>     <FONT color="#003399">data hrd.newtemp;</FONT>
        <FONT color="#003399">set hrd.temp;</FONT>
        <FONT color="#003399">Job=upcase(job);</FONT>
     <FONT color="#003399">run;</FONT></PRE>

<PRE>     <FONT color="#003399">data hrd.newtemp;</FONT>
        <FONT color="#003399">set hrd.temp;</FONT>
     <FONT color="#003399">   Contact=lowcase(contact);</FONT>
     <FONT color="#003399">run;</FONT></PRE>

<PRE>     <FONT color="#003399">data work.after;</FONT>
        <FONT color="#003399">set work.before;</FONT>
        <FONT color="#003399">name=tranwrd(name,'Miss','Ms.');</FONT>
        <FONT color="#003399">name=tranwrd(name,'Mrs.','Ms.');</FONT>
     <FONT color="#003399">run;</FONT></PRE>

        <PRE>     <FONT color="#003399">data work.after;</FONT>
        <FONT color="#003399">set work.before;</FONT>
        <FONT color="#003399">Examples=int(examples);</FONT>
     <FONT color="#003399">run;</FONT>
</PRE>
        <PRE>     <FONT color="#003399">data work.after;</FONT>
        <FONT color="#003399">set work.before;</FONT>
        <FONT color="#003399">Examples=round(examples,.2);</FONT>
     <FONT color="#003399">run;</FONT>
</PRE>
        <P> 
        <HR>
      </TD>
    </TR>
  </TABLE>
  <br>
  <!-- InstanceEndEditable --> 
<P>
  <!-- InstanceBeginEditable name="pointstoremember" --> 
  <TABLE cellpadding=0 cellspacing=0 border=0 width="85%">
    <TR> 
      <TD align="left"><STRONG><A NAME="Points">Points to Remember</A></STRONG><BR> 
        <UL>
          <LI> Even if a function doesn't require arguments, the function name 
            must still be followed by parentheses.<BR>
            <BR>
          <LI> When specifying a variable list or an array as a function argument, 
            be sure to precede the list or the array with the word OF.<BR>
            <BR>
          <LI> To remember which function requires a format versus an informat, 
            note that the <FONT color="red"><strong>IN</strong></FONT>PUT function 
            requires the<strong> <FONT color="red">in</FONT></strong>format.<BR>
            <BR>
          <LI> If you specify an invalid date in the MDY function, a missing value 
            is assigned to the target variable.<BR>
            <BR>
          <LI> The SCAN function treats contiguous delimiters as one delimiter; 
            leading delimiters have no effect.<BR>
            <BR>
          <LI> When using the SCAN function, you can save storage space by adding 
            a LENGTH statement to your DATA step to set an appropriate length 
            for your new variable(s). Place the LENGTH statement before the assignment 
            statements that contain the SCAN function.<BR>
            <BR>
          <LI> When the SUBSTR function is on the left side of an assignment statement, 
            it replaces variable values. When SUBSTR is on the right side of an 
            assignment statement, it extracts variable values. The syntax of the 
            function is the same; only the placement of the function changes.<BR>
            <BR>
          <LI> The INDEX function is case sensitive. To ensure that all forms 
            of a character string are found, use the UPCASE or LOWCASE function 
            with the INDEX function.</UL>
        </TD>
    </TR>
  </TABLE>
  <!-- InstanceEndEditable --></center>
<script>writeNav_regular_bottom();</script>
</body>
<!-- InstanceEnd --></html>